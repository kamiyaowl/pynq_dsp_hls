// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module effect_delay (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inData_l,
        inData_r,
        config_r_address0,
        config_r_ce0,
        config_r_we0,
        config_r_d0,
        config_r_q0,
        config_offset,
        m_axi_extMemPtr_V_AWVALID,
        m_axi_extMemPtr_V_AWREADY,
        m_axi_extMemPtr_V_AWADDR,
        m_axi_extMemPtr_V_AWID,
        m_axi_extMemPtr_V_AWLEN,
        m_axi_extMemPtr_V_AWSIZE,
        m_axi_extMemPtr_V_AWBURST,
        m_axi_extMemPtr_V_AWLOCK,
        m_axi_extMemPtr_V_AWCACHE,
        m_axi_extMemPtr_V_AWPROT,
        m_axi_extMemPtr_V_AWQOS,
        m_axi_extMemPtr_V_AWREGION,
        m_axi_extMemPtr_V_AWUSER,
        m_axi_extMemPtr_V_WVALID,
        m_axi_extMemPtr_V_WREADY,
        m_axi_extMemPtr_V_WDATA,
        m_axi_extMemPtr_V_WSTRB,
        m_axi_extMemPtr_V_WLAST,
        m_axi_extMemPtr_V_WID,
        m_axi_extMemPtr_V_WUSER,
        m_axi_extMemPtr_V_ARVALID,
        m_axi_extMemPtr_V_ARREADY,
        m_axi_extMemPtr_V_ARADDR,
        m_axi_extMemPtr_V_ARID,
        m_axi_extMemPtr_V_ARLEN,
        m_axi_extMemPtr_V_ARSIZE,
        m_axi_extMemPtr_V_ARBURST,
        m_axi_extMemPtr_V_ARLOCK,
        m_axi_extMemPtr_V_ARCACHE,
        m_axi_extMemPtr_V_ARPROT,
        m_axi_extMemPtr_V_ARQOS,
        m_axi_extMemPtr_V_ARREGION,
        m_axi_extMemPtr_V_ARUSER,
        m_axi_extMemPtr_V_RVALID,
        m_axi_extMemPtr_V_RREADY,
        m_axi_extMemPtr_V_RDATA,
        m_axi_extMemPtr_V_RLAST,
        m_axi_extMemPtr_V_RID,
        m_axi_extMemPtr_V_RUSER,
        m_axi_extMemPtr_V_RRESP,
        m_axi_extMemPtr_V_BVALID,
        m_axi_extMemPtr_V_BREADY,
        m_axi_extMemPtr_V_BRESP,
        m_axi_extMemPtr_V_BID,
        m_axi_extMemPtr_V_BUSER,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 36'd1;
parameter    ap_ST_fsm_state2 = 36'd2;
parameter    ap_ST_fsm_state3 = 36'd4;
parameter    ap_ST_fsm_state4 = 36'd8;
parameter    ap_ST_fsm_state5 = 36'd16;
parameter    ap_ST_fsm_state6 = 36'd32;
parameter    ap_ST_fsm_state7 = 36'd64;
parameter    ap_ST_fsm_state8 = 36'd128;
parameter    ap_ST_fsm_state9 = 36'd256;
parameter    ap_ST_fsm_state10 = 36'd512;
parameter    ap_ST_fsm_state11 = 36'd1024;
parameter    ap_ST_fsm_state12 = 36'd2048;
parameter    ap_ST_fsm_state13 = 36'd4096;
parameter    ap_ST_fsm_state14 = 36'd8192;
parameter    ap_ST_fsm_state15 = 36'd16384;
parameter    ap_ST_fsm_state16 = 36'd32768;
parameter    ap_ST_fsm_state17 = 36'd65536;
parameter    ap_ST_fsm_state18 = 36'd131072;
parameter    ap_ST_fsm_state19 = 36'd262144;
parameter    ap_ST_fsm_state20 = 36'd524288;
parameter    ap_ST_fsm_state21 = 36'd1048576;
parameter    ap_ST_fsm_state22 = 36'd2097152;
parameter    ap_ST_fsm_state23 = 36'd4194304;
parameter    ap_ST_fsm_state24 = 36'd8388608;
parameter    ap_ST_fsm_state25 = 36'd16777216;
parameter    ap_ST_fsm_state26 = 36'd33554432;
parameter    ap_ST_fsm_state27 = 36'd67108864;
parameter    ap_ST_fsm_state28 = 36'd134217728;
parameter    ap_ST_fsm_state29 = 36'd268435456;
parameter    ap_ST_fsm_state30 = 36'd536870912;
parameter    ap_ST_fsm_state31 = 36'd1073741824;
parameter    ap_ST_fsm_state32 = 36'd2147483648;
parameter    ap_ST_fsm_state33 = 36'd4294967296;
parameter    ap_ST_fsm_state34 = 36'd8589934592;
parameter    ap_ST_fsm_state35 = 36'd17179869184;
parameter    ap_ST_fsm_state36 = 36'd34359738368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] inData_l;
input  [31:0] inData_r;
output  [4:0] config_r_address0;
output   config_r_ce0;
output   config_r_we0;
output  [31:0] config_r_d0;
input  [31:0] config_r_q0;
input  [2:0] config_offset;
output   m_axi_extMemPtr_V_AWVALID;
input   m_axi_extMemPtr_V_AWREADY;
output  [31:0] m_axi_extMemPtr_V_AWADDR;
output  [0:0] m_axi_extMemPtr_V_AWID;
output  [31:0] m_axi_extMemPtr_V_AWLEN;
output  [2:0] m_axi_extMemPtr_V_AWSIZE;
output  [1:0] m_axi_extMemPtr_V_AWBURST;
output  [1:0] m_axi_extMemPtr_V_AWLOCK;
output  [3:0] m_axi_extMemPtr_V_AWCACHE;
output  [2:0] m_axi_extMemPtr_V_AWPROT;
output  [3:0] m_axi_extMemPtr_V_AWQOS;
output  [3:0] m_axi_extMemPtr_V_AWREGION;
output  [0:0] m_axi_extMemPtr_V_AWUSER;
output   m_axi_extMemPtr_V_WVALID;
input   m_axi_extMemPtr_V_WREADY;
output  [31:0] m_axi_extMemPtr_V_WDATA;
output  [3:0] m_axi_extMemPtr_V_WSTRB;
output   m_axi_extMemPtr_V_WLAST;
output  [0:0] m_axi_extMemPtr_V_WID;
output  [0:0] m_axi_extMemPtr_V_WUSER;
output   m_axi_extMemPtr_V_ARVALID;
input   m_axi_extMemPtr_V_ARREADY;
output  [31:0] m_axi_extMemPtr_V_ARADDR;
output  [0:0] m_axi_extMemPtr_V_ARID;
output  [31:0] m_axi_extMemPtr_V_ARLEN;
output  [2:0] m_axi_extMemPtr_V_ARSIZE;
output  [1:0] m_axi_extMemPtr_V_ARBURST;
output  [1:0] m_axi_extMemPtr_V_ARLOCK;
output  [3:0] m_axi_extMemPtr_V_ARCACHE;
output  [2:0] m_axi_extMemPtr_V_ARPROT;
output  [3:0] m_axi_extMemPtr_V_ARQOS;
output  [3:0] m_axi_extMemPtr_V_ARREGION;
output  [0:0] m_axi_extMemPtr_V_ARUSER;
input   m_axi_extMemPtr_V_RVALID;
output   m_axi_extMemPtr_V_RREADY;
input  [31:0] m_axi_extMemPtr_V_RDATA;
input   m_axi_extMemPtr_V_RLAST;
input  [0:0] m_axi_extMemPtr_V_RID;
input  [0:0] m_axi_extMemPtr_V_RUSER;
input  [1:0] m_axi_extMemPtr_V_RRESP;
input   m_axi_extMemPtr_V_BVALID;
output   m_axi_extMemPtr_V_BREADY;
input  [1:0] m_axi_extMemPtr_V_BRESP;
input  [0:0] m_axi_extMemPtr_V_BID;
input  [0:0] m_axi_extMemPtr_V_BUSER;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] config_r_address0;
reg config_r_ce0;
reg config_r_we0;
reg[31:0] config_r_d0;
reg m_axi_extMemPtr_V_AWVALID;
reg[31:0] m_axi_extMemPtr_V_AWADDR;
reg m_axi_extMemPtr_V_WVALID;
reg[31:0] m_axi_extMemPtr_V_WDATA;
reg m_axi_extMemPtr_V_ARVALID;
reg[31:0] m_axi_extMemPtr_V_ARADDR;
reg m_axi_extMemPtr_V_RREADY;
reg m_axi_extMemPtr_V_BREADY;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    extMemPtr_V_blk_n_AW;
wire    ap_CS_fsm_state12;
reg    extMemPtr_V_blk_n_W;
wire    ap_CS_fsm_state13;
reg    extMemPtr_V_blk_n_B;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state19;
reg    extMemPtr_V_blk_n_AR;
wire    ap_CS_fsm_state20;
reg    extMemPtr_V_blk_n_R;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state28;
wire   [31:0] grp_fu_294_p2;
reg   [31:0] reg_306;
reg    ap_block_state13_io;
wire   [5:0] tmp_16_fu_310_p3;
reg   [5:0] tmp_16_reg_790;
wire    ap_CS_fsm_state2;
reg   [31:0] memAddr_reg_809;
wire    ap_CS_fsm_state3;
reg   [31:0] memSize_reg_820;
reg   [30:0] val_assign_9_reg_826;
wire    ap_CS_fsm_state4;
wire   [30:0] trunc_ln368_fu_385_p1;
reg   [30:0] trunc_ln368_reg_837;
wire    ap_CS_fsm_state5;
reg   [4:0] wrIndex_reg_858;
reg   [4:0] rdIndex_reg_863;
wire   [31:0] volRatio_fu_424_p1;
reg   [31:0] volRatio_reg_868;
wire   [31:0] periodRatio_fu_440_p1;
reg   [31:0] periodRatio_reg_873;
wire   [31:0] maxIndex_V_fu_444_p1;
reg   [31:0] maxIndex_V_reg_878;
wire   [0:0] icmp_ln879_fu_447_p2;
reg   [0:0] icmp_ln879_reg_884;
reg   [31:0] wrIndex_load_reg_888;
wire    ap_CS_fsm_state6;
wire   [0:0] grp_fu_301_p2;
reg   [0:0] icmp_ln891_reg_893;
wire    ap_CS_fsm_state7;
wire   [31:0] ret_V_fu_452_p2;
reg   [31:0] ret_V_reg_905;
wire    ap_CS_fsm_state10;
wire   [33:0] zext_ln90_1_fu_457_p1;
reg   [33:0] zext_ln90_1_reg_910;
wire    ap_CS_fsm_state11;
wire   [33:0] zext_ln90_3_fu_472_p1;
reg   [33:0] zext_ln90_3_reg_915;
reg   [31:0] extMemPtr_V_addr_reg_920;
wire  signed [32:0] sext_ln1354_fu_492_p1;
reg  signed [32:0] sext_ln1354_reg_926;
wire   [31:0] select_ln92_fu_507_p3;
reg   [31:0] select_ln92_reg_931;
wire   [33:0] zext_ln91_fu_525_p1;
reg   [33:0] zext_ln91_reg_938;
reg   [31:0] extMemPtr_V_addr_1_reg_943;
wire   [31:0] grp_fu_298_p1;
reg   [31:0] tmp_reg_949;
reg   [7:0] tmp_V_reg_954;
wire    ap_CS_fsm_state16;
wire   [22:0] tmp_V_1_fu_568_p1;
reg   [22:0] tmp_V_1_reg_960;
wire   [0:0] isNeg_fu_581_p3;
reg   [0:0] isNeg_reg_965;
wire    ap_CS_fsm_state17;
wire  signed [8:0] ush_fu_598_p3;
reg  signed [8:0] ush_reg_970;
wire   [0:0] icmp_ln98_fu_698_p2;
reg   [0:0] icmp_ln98_reg_976;
reg   [31:0] extMemPtr_V_addr_2_reg_980;
reg   [31:0] extMemPtr_V_addr_3_reg_986;
reg   [31:0] auxRawL_V_reg_992;
reg   [31:0] auxRawR_V_reg_997;
wire    ap_CS_fsm_state29;
wire   [31:0] grp_fu_286_p2;
reg   [31:0] dst_l_reg_1012;
wire    ap_CS_fsm_state35;
wire   [31:0] grp_fu_290_p2;
reg   [31:0] dst_r_reg_1017;
reg   [31:0] i_op_assign_2_reg_241;
reg   [31:0] i_op_assign_3_reg_252;
reg   [31:0] ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6;
reg   [31:0] agg_result_l_write_a_reg_264;
wire    ap_CS_fsm_state36;
reg   [31:0] ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6;
reg   [31:0] agg_result_r_write_a_reg_275;
wire   [63:0] tmp_17_fu_324_p3;
wire   [63:0] tmp_18_fu_338_p3;
wire   [63:0] tmp_19_fu_352_p3;
wire   [63:0] tmp_s_fu_376_p3;
wire   [63:0] tmp_20_fu_394_p3;
wire   [63:0] tmp_21_fu_408_p3;
wire   [63:0] zext_ln90_4_fu_482_p1;
wire   [63:0] zext_ln91_1_fu_534_p1;
wire   [63:0] zext_ln103_2_fu_725_p1;
wire   [63:0] zext_ln104_fu_740_p1;
wire   [31:0] bitcast_ln705_fu_544_p1;
wire   [31:0] bitcast_ln705_1_fu_549_p1;
wire   [31:0] select_ln107_fu_761_p3;
wire   [31:0] grp_fu_286_p0;
wire   [31:0] grp_fu_290_p0;
reg   [31:0] grp_fu_294_p0;
reg   [31:0] grp_fu_294_p1;
wire    ap_CS_fsm_state9;
wire   [5:0] or_ln71_fu_318_p2;
wire   [5:0] or_ln72_fu_333_p2;
wire   [5:0] or_ln73_fu_347_p2;
wire   [5:0] or_ln74_fu_371_p2;
wire   [5:0] or_ln75_fu_389_p2;
wire   [5:0] or_ln76_fu_403_p2;
wire   [31:0] p_Result_s_fu_417_p3;
wire   [30:0] trunc_ln368_6_fu_428_p1;
wire   [31:0] p_Result_18_fu_432_p3;
wire   [32:0] shl_ln_fu_464_p3;
wire   [33:0] add_ln90_fu_476_p2;
wire   [32:0] zext_ln90_2_fu_460_p1;
wire   [0:0] icmp_ln887_fu_495_p2;
wire   [31:0] add_ln92_fu_501_p2;
wire   [32:0] zext_ln90_fu_516_p1;
wire   [32:0] add_ln91_fu_519_p2;
wire   [33:0] add_ln91_1_fu_529_p2;
wire   [31:0] p_Val2_11_fu_554_p1;
wire   [8:0] zext_ln339_fu_572_p1;
wire   [8:0] add_ln339_fu_575_p2;
wire   [7:0] sub_ln1311_fu_589_p2;
wire  signed [8:0] sext_ln1311_fu_594_p1;
wire   [24:0] mantissa_V_fu_606_p4;
wire  signed [31:0] sext_ln1311_1_fu_619_p1;
wire  signed [24:0] sext_ln1311_2_fu_622_p1;
wire   [78:0] zext_ln682_fu_615_p1;
wire   [78:0] zext_ln1287_fu_625_p1;
wire   [24:0] r_V_fu_629_p2;
wire   [0:0] tmp_10_fu_641_p3;
wire   [78:0] r_V_1_fu_635_p2;
wire   [31:0] zext_ln662_fu_649_p1;
wire   [31:0] tmp_22_fu_653_p4;
wire   [31:0] sub_ln97_1_fu_675_p2;
wire   [0:0] icmp_ln97_fu_670_p2;
wire   [31:0] add_ln97_fu_679_p2;
wire   [31:0] sub_ln97_fu_685_p2;
wire   [31:0] currentPeriod_fu_690_p3;
wire   [31:0] val_V_fu_663_p3;
wire   [32:0] shl_ln1_fu_708_p3;
wire   [33:0] zext_ln103_1_fu_716_p1;
wire   [33:0] add_ln103_fu_720_p2;
wire   [33:0] add_ln104_fu_735_p2;
wire   [32:0] zext_ln103_fu_704_p1;
wire   [0:0] icmp_ln887_1_fu_750_p2;
wire   [31:0] add_ln107_fu_755_p2;
reg    grp_fu_294_ce;
wire    ap_CS_fsm_state15;
reg    grp_fu_298_ce;
wire    ap_CS_fsm_state8;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [35:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'd1;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
end

pynq_dsp_hls_faddbkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_faddbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_286_p0),
    .din1(inData_l),
    .ce(1'b1),
    .dout(grp_fu_286_p2)
);

pynq_dsp_hls_faddbkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_faddbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_290_p0),
    .din1(inData_r),
    .ce(1'b1),
    .dout(grp_fu_290_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_294_p0),
    .din1(grp_fu_294_p1),
    .ce(grp_fu_294_ce),
    .dout(grp_fu_294_p2)
);

pynq_dsp_hls_uitodEe #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_uitodEe_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(memSize_reg_820),
    .ce(grp_fu_298_ce),
    .dout(grp_fu_298_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state36)) begin
            ap_return_0_preg <= ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state36)) begin
            ap_return_1_preg <= ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln879_fu_447_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln98_reg_976 == 1'd1) & (1'b1 == ap_CS_fsm_state19) & (m_axi_extMemPtr_V_BVALID == 1'b1)))) begin
        agg_result_l_write_a_reg_264 <= inData_l;
    end else if (((icmp_ln98_reg_976 == 1'd0) & (icmp_ln879_reg_884 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        agg_result_l_write_a_reg_264 <= dst_l_reg_1012;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln879_fu_447_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln98_reg_976 == 1'd1) & (1'b1 == ap_CS_fsm_state19) & (m_axi_extMemPtr_V_BVALID == 1'b1)))) begin
        agg_result_r_write_a_reg_275 <= inData_r;
    end else if (((icmp_ln98_reg_976 == 1'd0) & (icmp_ln879_reg_884 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        agg_result_r_write_a_reg_275 <= dst_r_reg_1017;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if (((icmp_ln891_reg_893 == 1'd1) & (grp_fu_301_p2 == 1'd1))) begin
            i_op_assign_2_reg_241 <= wrIndex_load_reg_888;
        end else if (((icmp_ln891_reg_893 == 1'd0) | (grp_fu_301_p2 == 1'd0))) begin
            i_op_assign_2_reg_241 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        if (((icmp_ln891_reg_893 == 1'd1) & (grp_fu_301_p2 == 1'd1))) begin
            i_op_assign_3_reg_252 <= config_r_q0;
        end else if (((icmp_ln891_reg_893 == 1'd0) | (grp_fu_301_p2 == 1'd0))) begin
            i_op_assign_3_reg_252 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (m_axi_extMemPtr_V_RVALID == 1'b1))) begin
        auxRawL_V_reg_992 <= m_axi_extMemPtr_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (m_axi_extMemPtr_V_RVALID == 1'b1))) begin
        auxRawR_V_reg_997 <= m_axi_extMemPtr_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        dst_l_reg_1012 <= grp_fu_286_p2;
        dst_r_reg_1017 <= grp_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        extMemPtr_V_addr_1_reg_943 <= zext_ln91_1_fu_534_p1;
        tmp_reg_949 <= grp_fu_298_p1;
        zext_ln91_reg_938[32 : 0] <= zext_ln91_fu_525_p1[32 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_reg_976 == 1'd0) & (1'b1 == ap_CS_fsm_state19) & (m_axi_extMemPtr_V_BVALID == 1'b1))) begin
        extMemPtr_V_addr_2_reg_980 <= zext_ln103_2_fu_725_p1;
        extMemPtr_V_addr_3_reg_986 <= zext_ln104_fu_740_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        extMemPtr_V_addr_reg_920 <= zext_ln90_4_fu_482_p1;
        select_ln92_reg_931 <= select_ln92_fu_507_p3;
        sext_ln1354_reg_926 <= sext_ln1354_fu_492_p1;
        zext_ln90_1_reg_910[31 : 0] <= zext_ln90_1_fu_457_p1[31 : 0];
        zext_ln90_3_reg_915[32 : 1] <= zext_ln90_3_fu_472_p1[32 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln879_reg_884 <= icmp_ln879_fu_447_p2;
        maxIndex_V_reg_878[30 : 0] <= maxIndex_V_fu_444_p1[30 : 0];
        periodRatio_reg_873[30 : 0] <= periodRatio_fu_440_p1[30 : 0];
        rdIndex_reg_863[4 : 3] <= tmp_21_fu_408_p3[4 : 3];
        volRatio_reg_868[30 : 0] <= volRatio_fu_424_p1[30 : 0];
        wrIndex_reg_858[4 : 3] <= tmp_20_fu_394_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln891_reg_893 <= grp_fu_301_p2;
        wrIndex_load_reg_888 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (m_axi_extMemPtr_V_BVALID == 1'b1))) begin
        icmp_ln98_reg_976 <= icmp_ln98_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        isNeg_reg_965 <= add_ln339_fu_575_p2[32'd8];
        ush_reg_970 <= ush_fu_598_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        memAddr_reg_809 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        memSize_reg_820 <= config_r_q0;
        val_assign_9_reg_826 <= {{config_r_q0[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_io)) | ((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        reg_306 <= grp_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ret_V_reg_905 <= ret_V_fu_452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_16_reg_790[5 : 3] <= tmp_16_fu_310_p3[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_V_1_reg_960 <= tmp_V_1_fu_568_p1;
        tmp_V_reg_954 <= {{p_Val2_11_fu_554_p1[30:23]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        trunc_ln368_reg_837 <= trunc_ln368_fu_385_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_976 == 1'd0) & (icmp_ln879_reg_884 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6 = dst_l_reg_1012;
    end else begin
        ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6 = agg_result_l_write_a_reg_264;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_976 == 1'd0) & (icmp_ln879_reg_884 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6 = dst_r_reg_1017;
    end else begin
        ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6 = agg_result_r_write_a_reg_275;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ap_return_0 = ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ap_return_1 = ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        config_r_address0 = wrIndex_reg_858;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state19))) begin
        config_r_address0 = rdIndex_reg_863;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        config_r_address0 = tmp_20_fu_394_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        config_r_address0 = tmp_s_fu_376_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        config_r_address0 = tmp_19_fu_352_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        config_r_address0 = tmp_18_fu_338_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        config_r_address0 = tmp_17_fu_324_p3;
    end else begin
        config_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state19) & (m_axi_extMemPtr_V_BVALID == 1'b1)))) begin
        config_r_ce0 = 1'b1;
    end else begin
        config_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        config_r_d0 = select_ln107_fu_761_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        config_r_d0 = select_ln92_fu_507_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        config_r_d0 = 32'd0;
    end else begin
        config_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state7) & ((icmp_ln891_reg_893 == 1'd0) | (grp_fu_301_p2 == 1'd0))) | ((icmp_ln98_reg_976 == 1'd0) & (1'b1 == ap_CS_fsm_state19) & (m_axi_extMemPtr_V_BVALID == 1'b1)))) begin
        config_r_we0 = 1'b1;
    end else begin
        config_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        extMemPtr_V_blk_n_AR = m_axi_extMemPtr_V_ARREADY;
    end else begin
        extMemPtr_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        extMemPtr_V_blk_n_AW = m_axi_extMemPtr_V_AWREADY;
    end else begin
        extMemPtr_V_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        extMemPtr_V_blk_n_B = m_axi_extMemPtr_V_BVALID;
    end else begin
        extMemPtr_V_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        extMemPtr_V_blk_n_R = m_axi_extMemPtr_V_RVALID;
    end else begin
        extMemPtr_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        extMemPtr_V_blk_n_W = m_axi_extMemPtr_V_WREADY;
    end else begin
        extMemPtr_V_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | ((m_axi_extMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_io)) | ((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        grp_fu_294_ce = 1'b1;
    end else begin
        grp_fu_294_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_294_p0 = tmp_reg_949;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_294_p0 = volRatio_reg_868;
    end else begin
        grp_fu_294_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_294_p1 = periodRatio_reg_873;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_294_p1 = inData_r;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_294_p1 = inData_l;
    end else begin
        grp_fu_294_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | ((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        grp_fu_298_ce = 1'b1;
    end else begin
        grp_fu_298_ce = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_extMemPtr_V_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            m_axi_extMemPtr_V_ARADDR = extMemPtr_V_addr_3_reg_986;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            m_axi_extMemPtr_V_ARADDR = extMemPtr_V_addr_2_reg_980;
        end else begin
            m_axi_extMemPtr_V_ARADDR = 'bx;
        end
    end else begin
        m_axi_extMemPtr_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((m_axi_extMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21)) | ((m_axi_extMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state20)))) begin
        m_axi_extMemPtr_V_ARVALID = 1'b1;
    end else begin
        m_axi_extMemPtr_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_io))) begin
        m_axi_extMemPtr_V_AWADDR = extMemPtr_V_addr_1_reg_943;
    end else if (((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        m_axi_extMemPtr_V_AWADDR = extMemPtr_V_addr_reg_920;
    end else begin
        m_axi_extMemPtr_V_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_io)) | ((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12)))) begin
        m_axi_extMemPtr_V_AWVALID = 1'b1;
    end else begin
        m_axi_extMemPtr_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state19) & (m_axi_extMemPtr_V_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state18) & (m_axi_extMemPtr_V_BVALID == 1'b1)))) begin
        m_axi_extMemPtr_V_BREADY = 1'b1;
    end else begin
        m_axi_extMemPtr_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state28) & (m_axi_extMemPtr_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state27) & (m_axi_extMemPtr_V_RVALID == 1'b1)))) begin
        m_axi_extMemPtr_V_RREADY = 1'b1;
    end else begin
        m_axi_extMemPtr_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        m_axi_extMemPtr_V_WDATA = bitcast_ln705_1_fu_549_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        m_axi_extMemPtr_V_WDATA = bitcast_ln705_fu_544_p1;
    end else begin
        m_axi_extMemPtr_V_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((m_axi_extMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_io)))) begin
        m_axi_extMemPtr_V_WVALID = 1'b1;
    end else begin
        m_axi_extMemPtr_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln879_fu_447_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_io))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((m_axi_extMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (m_axi_extMemPtr_V_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln98_reg_976 == 1'd1) & (1'b1 == ap_CS_fsm_state19) & (m_axi_extMemPtr_V_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else if (((icmp_ln98_reg_976 == 1'd0) & (1'b1 == ap_CS_fsm_state19) & (m_axi_extMemPtr_V_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((m_axi_extMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((m_axi_extMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (m_axi_extMemPtr_V_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (m_axi_extMemPtr_V_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln103_fu_720_p2 = (zext_ln90_1_reg_910 + zext_ln103_1_fu_716_p1);

assign add_ln104_fu_735_p2 = (zext_ln91_reg_938 + zext_ln103_1_fu_716_p1);

assign add_ln107_fu_755_p2 = (i_op_assign_3_reg_252 + 32'd1);

assign add_ln339_fu_575_p2 = ($signed(9'd385) + $signed(zext_ln339_fu_572_p1));

assign add_ln90_fu_476_p2 = (zext_ln90_1_fu_457_p1 + zext_ln90_3_fu_472_p1);

assign add_ln91_1_fu_529_p2 = (zext_ln91_fu_525_p1 + zext_ln90_3_reg_915);

assign add_ln91_fu_519_p2 = (33'd1 + zext_ln90_fu_516_p1);

assign add_ln92_fu_501_p2 = (32'd1 + i_op_assign_2_reg_241);

assign add_ln97_fu_679_p2 = (i_op_assign_3_reg_252 + sub_ln97_1_fu_675_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state13_io = ((m_axi_extMemPtr_V_WREADY == 1'b0) | (m_axi_extMemPtr_V_AWREADY == 1'b0));
end

assign bitcast_ln705_1_fu_549_p1 = reg_306;

assign bitcast_ln705_fu_544_p1 = reg_306;

assign currentPeriod_fu_690_p3 = ((icmp_ln97_fu_670_p2[0:0] === 1'b1) ? add_ln97_fu_679_p2 : sub_ln97_fu_685_p2);

assign grp_fu_286_p0 = auxRawL_V_reg_992;

assign grp_fu_290_p0 = auxRawR_V_reg_997;

assign grp_fu_301_p2 = ((config_r_q0 < maxIndex_V_reg_878) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_447_p2 = ((val_assign_9_reg_826 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln887_1_fu_750_p2 = (($signed(zext_ln103_fu_704_p1) < $signed(sext_ln1354_reg_926)) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_495_p2 = (($signed(zext_ln90_2_fu_460_p1) < $signed(sext_ln1354_fu_492_p1)) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_670_p2 = ((select_ln92_reg_931 < i_op_assign_3_reg_252) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_698_p2 = ((currentPeriod_fu_690_p3 < val_V_fu_663_p3) ? 1'b1 : 1'b0);

assign isNeg_fu_581_p3 = add_ln339_fu_575_p2[32'd8];

assign m_axi_extMemPtr_V_ARBURST = 2'd0;

assign m_axi_extMemPtr_V_ARCACHE = 4'd0;

assign m_axi_extMemPtr_V_ARID = 1'd0;

assign m_axi_extMemPtr_V_ARLEN = 32'd1;

assign m_axi_extMemPtr_V_ARLOCK = 2'd0;

assign m_axi_extMemPtr_V_ARPROT = 3'd0;

assign m_axi_extMemPtr_V_ARQOS = 4'd0;

assign m_axi_extMemPtr_V_ARREGION = 4'd0;

assign m_axi_extMemPtr_V_ARSIZE = 3'd0;

assign m_axi_extMemPtr_V_ARUSER = 1'd0;

assign m_axi_extMemPtr_V_AWBURST = 2'd0;

assign m_axi_extMemPtr_V_AWCACHE = 4'd0;

assign m_axi_extMemPtr_V_AWID = 1'd0;

assign m_axi_extMemPtr_V_AWLEN = 32'd1;

assign m_axi_extMemPtr_V_AWLOCK = 2'd0;

assign m_axi_extMemPtr_V_AWPROT = 3'd0;

assign m_axi_extMemPtr_V_AWQOS = 4'd0;

assign m_axi_extMemPtr_V_AWREGION = 4'd0;

assign m_axi_extMemPtr_V_AWSIZE = 3'd0;

assign m_axi_extMemPtr_V_AWUSER = 1'd0;

assign m_axi_extMemPtr_V_WID = 1'd0;

assign m_axi_extMemPtr_V_WLAST = 1'b0;

assign m_axi_extMemPtr_V_WSTRB = 4'd15;

assign m_axi_extMemPtr_V_WUSER = 1'd0;

assign mantissa_V_fu_606_p4 = {{{{1'd1}, {tmp_V_1_reg_960}}}, {1'd0}};

assign maxIndex_V_fu_444_p1 = val_assign_9_reg_826;

assign or_ln71_fu_318_p2 = (tmp_16_fu_310_p3 | 6'd1);

assign or_ln72_fu_333_p2 = (tmp_16_reg_790 | 6'd2);

assign or_ln73_fu_347_p2 = (tmp_16_reg_790 | 6'd3);

assign or_ln74_fu_371_p2 = (tmp_16_reg_790 | 6'd4);

assign or_ln75_fu_389_p2 = (tmp_16_reg_790 | 6'd5);

assign or_ln76_fu_403_p2 = (tmp_16_reg_790 | 6'd6);

assign p_Result_18_fu_432_p3 = {{1'd0}, {trunc_ln368_6_fu_428_p1}};

assign p_Result_s_fu_417_p3 = {{1'd0}, {trunc_ln368_reg_837}};

assign p_Val2_11_fu_554_p1 = grp_fu_294_p2;

assign periodRatio_fu_440_p1 = p_Result_18_fu_432_p3;

assign r_V_1_fu_635_p2 = zext_ln682_fu_615_p1 << zext_ln1287_fu_625_p1;

assign r_V_fu_629_p2 = mantissa_V_fu_606_p4 >> sext_ln1311_2_fu_622_p1;

assign ret_V_fu_452_p2 = ($signed(32'd4294967294) + $signed(maxIndex_V_reg_878));

assign select_ln107_fu_761_p3 = ((icmp_ln887_1_fu_750_p2[0:0] === 1'b1) ? add_ln107_fu_755_p2 : 32'd0);

assign select_ln92_fu_507_p3 = ((icmp_ln887_fu_495_p2[0:0] === 1'b1) ? add_ln92_fu_501_p2 : 32'd0);

assign sext_ln1311_1_fu_619_p1 = ush_reg_970;

assign sext_ln1311_2_fu_622_p1 = ush_reg_970;

assign sext_ln1311_fu_594_p1 = $signed(sub_ln1311_fu_589_p2);

assign sext_ln1354_fu_492_p1 = $signed(ret_V_reg_905);

assign shl_ln1_fu_708_p3 = {{i_op_assign_3_reg_252}, {1'd0}};

assign shl_ln_fu_464_p3 = {{i_op_assign_2_reg_241}, {1'd0}};

assign sub_ln1311_fu_589_p2 = (8'd127 - tmp_V_reg_954);

assign sub_ln97_1_fu_675_p2 = (select_ln92_reg_931 - memSize_reg_820);

assign sub_ln97_fu_685_p2 = (select_ln92_reg_931 - i_op_assign_3_reg_252);

assign tmp_10_fu_641_p3 = r_V_fu_629_p2[32'd24];

assign tmp_16_fu_310_p3 = {{config_offset}, {3'd0}};

assign tmp_17_fu_324_p3 = {{58'd0}, {or_ln71_fu_318_p2}};

assign tmp_18_fu_338_p3 = {{58'd0}, {or_ln72_fu_333_p2}};

assign tmp_19_fu_352_p3 = {{58'd0}, {or_ln73_fu_347_p2}};

assign tmp_20_fu_394_p3 = {{58'd0}, {or_ln75_fu_389_p2}};

assign tmp_21_fu_408_p3 = {{58'd0}, {or_ln76_fu_403_p2}};

assign tmp_22_fu_653_p4 = {{r_V_1_fu_635_p2[55:24]}};

assign tmp_V_1_fu_568_p1 = p_Val2_11_fu_554_p1[22:0];

assign tmp_s_fu_376_p3 = {{58'd0}, {or_ln74_fu_371_p2}};

assign trunc_ln368_6_fu_428_p1 = config_r_q0[30:0];

assign trunc_ln368_fu_385_p1 = config_r_q0[30:0];

assign ush_fu_598_p3 = ((isNeg_fu_581_p3[0:0] === 1'b1) ? sext_ln1311_fu_594_p1 : add_ln339_fu_575_p2);

assign val_V_fu_663_p3 = ((isNeg_reg_965[0:0] === 1'b1) ? zext_ln662_fu_649_p1 : tmp_22_fu_653_p4);

assign volRatio_fu_424_p1 = p_Result_s_fu_417_p3;

assign zext_ln103_1_fu_716_p1 = shl_ln1_fu_708_p3;

assign zext_ln103_2_fu_725_p1 = add_ln103_fu_720_p2;

assign zext_ln103_fu_704_p1 = i_op_assign_3_reg_252;

assign zext_ln104_fu_740_p1 = add_ln104_fu_735_p2;

assign zext_ln1287_fu_625_p1 = $unsigned(sext_ln1311_1_fu_619_p1);

assign zext_ln339_fu_572_p1 = tmp_V_reg_954;

assign zext_ln662_fu_649_p1 = tmp_10_fu_641_p3;

assign zext_ln682_fu_615_p1 = mantissa_V_fu_606_p4;

assign zext_ln90_1_fu_457_p1 = memAddr_reg_809;

assign zext_ln90_2_fu_460_p1 = i_op_assign_2_reg_241;

assign zext_ln90_3_fu_472_p1 = shl_ln_fu_464_p3;

assign zext_ln90_4_fu_482_p1 = add_ln90_fu_476_p2;

assign zext_ln90_fu_516_p1 = memAddr_reg_809;

assign zext_ln91_1_fu_534_p1 = add_ln91_1_fu_529_p2;

assign zext_ln91_fu_525_p1 = add_ln91_fu_519_p2;

always @ (posedge ap_clk) begin
    tmp_16_reg_790[2:0] <= 3'b000;
    wrIndex_reg_858[2:0] <= 3'b101;
    rdIndex_reg_863[2:0] <= 3'b110;
    volRatio_reg_868[31] <= 1'b0;
    periodRatio_reg_873[31] <= 1'b0;
    maxIndex_V_reg_878[31] <= 1'b0;
    zext_ln90_1_reg_910[33:32] <= 2'b00;
    zext_ln90_3_reg_915[0] <= 1'b0;
    zext_ln90_3_reg_915[33] <= 1'b0;
    zext_ln91_reg_938[33] <= 1'b0;
end

endmodule //effect_delay
