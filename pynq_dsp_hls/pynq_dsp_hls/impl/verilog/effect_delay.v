// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module effect_delay (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inData_l,
        inData_r,
        config_r_address0,
        config_r_ce0,
        config_r_we0,
        config_r_d0,
        config_r_q0,
        config_offset,
        m_axi_extMemPtr_V_AWVALID,
        m_axi_extMemPtr_V_AWREADY,
        m_axi_extMemPtr_V_AWADDR,
        m_axi_extMemPtr_V_AWID,
        m_axi_extMemPtr_V_AWLEN,
        m_axi_extMemPtr_V_AWSIZE,
        m_axi_extMemPtr_V_AWBURST,
        m_axi_extMemPtr_V_AWLOCK,
        m_axi_extMemPtr_V_AWCACHE,
        m_axi_extMemPtr_V_AWPROT,
        m_axi_extMemPtr_V_AWQOS,
        m_axi_extMemPtr_V_AWREGION,
        m_axi_extMemPtr_V_AWUSER,
        m_axi_extMemPtr_V_WVALID,
        m_axi_extMemPtr_V_WREADY,
        m_axi_extMemPtr_V_WDATA,
        m_axi_extMemPtr_V_WSTRB,
        m_axi_extMemPtr_V_WLAST,
        m_axi_extMemPtr_V_WID,
        m_axi_extMemPtr_V_WUSER,
        m_axi_extMemPtr_V_ARVALID,
        m_axi_extMemPtr_V_ARREADY,
        m_axi_extMemPtr_V_ARADDR,
        m_axi_extMemPtr_V_ARID,
        m_axi_extMemPtr_V_ARLEN,
        m_axi_extMemPtr_V_ARSIZE,
        m_axi_extMemPtr_V_ARBURST,
        m_axi_extMemPtr_V_ARLOCK,
        m_axi_extMemPtr_V_ARCACHE,
        m_axi_extMemPtr_V_ARPROT,
        m_axi_extMemPtr_V_ARQOS,
        m_axi_extMemPtr_V_ARREGION,
        m_axi_extMemPtr_V_ARUSER,
        m_axi_extMemPtr_V_RVALID,
        m_axi_extMemPtr_V_RREADY,
        m_axi_extMemPtr_V_RDATA,
        m_axi_extMemPtr_V_RLAST,
        m_axi_extMemPtr_V_RID,
        m_axi_extMemPtr_V_RUSER,
        m_axi_extMemPtr_V_RRESP,
        m_axi_extMemPtr_V_BVALID,
        m_axi_extMemPtr_V_BREADY,
        m_axi_extMemPtr_V_BRESP,
        m_axi_extMemPtr_V_BID,
        m_axi_extMemPtr_V_BUSER,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 51'd1;
parameter    ap_ST_fsm_state2 = 51'd2;
parameter    ap_ST_fsm_state3 = 51'd4;
parameter    ap_ST_fsm_state4 = 51'd8;
parameter    ap_ST_fsm_state5 = 51'd16;
parameter    ap_ST_fsm_state6 = 51'd32;
parameter    ap_ST_fsm_state7 = 51'd64;
parameter    ap_ST_fsm_state8 = 51'd128;
parameter    ap_ST_fsm_state9 = 51'd256;
parameter    ap_ST_fsm_state10 = 51'd512;
parameter    ap_ST_fsm_state11 = 51'd1024;
parameter    ap_ST_fsm_state12 = 51'd2048;
parameter    ap_ST_fsm_state13 = 51'd4096;
parameter    ap_ST_fsm_state14 = 51'd8192;
parameter    ap_ST_fsm_state15 = 51'd16384;
parameter    ap_ST_fsm_state16 = 51'd32768;
parameter    ap_ST_fsm_state17 = 51'd65536;
parameter    ap_ST_fsm_state18 = 51'd131072;
parameter    ap_ST_fsm_state19 = 51'd262144;
parameter    ap_ST_fsm_state20 = 51'd524288;
parameter    ap_ST_fsm_state21 = 51'd1048576;
parameter    ap_ST_fsm_state22 = 51'd2097152;
parameter    ap_ST_fsm_state23 = 51'd4194304;
parameter    ap_ST_fsm_state24 = 51'd8388608;
parameter    ap_ST_fsm_state25 = 51'd16777216;
parameter    ap_ST_fsm_state26 = 51'd33554432;
parameter    ap_ST_fsm_state27 = 51'd67108864;
parameter    ap_ST_fsm_state28 = 51'd134217728;
parameter    ap_ST_fsm_state29 = 51'd268435456;
parameter    ap_ST_fsm_state30 = 51'd536870912;
parameter    ap_ST_fsm_state31 = 51'd1073741824;
parameter    ap_ST_fsm_state32 = 51'd2147483648;
parameter    ap_ST_fsm_state33 = 51'd4294967296;
parameter    ap_ST_fsm_state34 = 51'd8589934592;
parameter    ap_ST_fsm_state35 = 51'd17179869184;
parameter    ap_ST_fsm_state36 = 51'd34359738368;
parameter    ap_ST_fsm_state37 = 51'd68719476736;
parameter    ap_ST_fsm_state38 = 51'd137438953472;
parameter    ap_ST_fsm_state39 = 51'd274877906944;
parameter    ap_ST_fsm_state40 = 51'd549755813888;
parameter    ap_ST_fsm_state41 = 51'd1099511627776;
parameter    ap_ST_fsm_state42 = 51'd2199023255552;
parameter    ap_ST_fsm_state43 = 51'd4398046511104;
parameter    ap_ST_fsm_state44 = 51'd8796093022208;
parameter    ap_ST_fsm_state45 = 51'd17592186044416;
parameter    ap_ST_fsm_state46 = 51'd35184372088832;
parameter    ap_ST_fsm_state47 = 51'd70368744177664;
parameter    ap_ST_fsm_state48 = 51'd140737488355328;
parameter    ap_ST_fsm_state49 = 51'd281474976710656;
parameter    ap_ST_fsm_state50 = 51'd562949953421312;
parameter    ap_ST_fsm_state51 = 51'd1125899906842624;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] inData_l;
input  [31:0] inData_r;
output  [5:0] config_r_address0;
output   config_r_ce0;
output   config_r_we0;
output  [31:0] config_r_d0;
input  [31:0] config_r_q0;
input  [2:0] config_offset;
output   m_axi_extMemPtr_V_AWVALID;
input   m_axi_extMemPtr_V_AWREADY;
output  [31:0] m_axi_extMemPtr_V_AWADDR;
output  [0:0] m_axi_extMemPtr_V_AWID;
output  [31:0] m_axi_extMemPtr_V_AWLEN;
output  [2:0] m_axi_extMemPtr_V_AWSIZE;
output  [1:0] m_axi_extMemPtr_V_AWBURST;
output  [1:0] m_axi_extMemPtr_V_AWLOCK;
output  [3:0] m_axi_extMemPtr_V_AWCACHE;
output  [2:0] m_axi_extMemPtr_V_AWPROT;
output  [3:0] m_axi_extMemPtr_V_AWQOS;
output  [3:0] m_axi_extMemPtr_V_AWREGION;
output  [0:0] m_axi_extMemPtr_V_AWUSER;
output   m_axi_extMemPtr_V_WVALID;
input   m_axi_extMemPtr_V_WREADY;
output  [31:0] m_axi_extMemPtr_V_WDATA;
output  [3:0] m_axi_extMemPtr_V_WSTRB;
output   m_axi_extMemPtr_V_WLAST;
output  [0:0] m_axi_extMemPtr_V_WID;
output  [0:0] m_axi_extMemPtr_V_WUSER;
output   m_axi_extMemPtr_V_ARVALID;
input   m_axi_extMemPtr_V_ARREADY;
output  [31:0] m_axi_extMemPtr_V_ARADDR;
output  [0:0] m_axi_extMemPtr_V_ARID;
output  [31:0] m_axi_extMemPtr_V_ARLEN;
output  [2:0] m_axi_extMemPtr_V_ARSIZE;
output  [1:0] m_axi_extMemPtr_V_ARBURST;
output  [1:0] m_axi_extMemPtr_V_ARLOCK;
output  [3:0] m_axi_extMemPtr_V_ARCACHE;
output  [2:0] m_axi_extMemPtr_V_ARPROT;
output  [3:0] m_axi_extMemPtr_V_ARQOS;
output  [3:0] m_axi_extMemPtr_V_ARREGION;
output  [0:0] m_axi_extMemPtr_V_ARUSER;
input   m_axi_extMemPtr_V_RVALID;
output   m_axi_extMemPtr_V_RREADY;
input  [31:0] m_axi_extMemPtr_V_RDATA;
input   m_axi_extMemPtr_V_RLAST;
input  [0:0] m_axi_extMemPtr_V_RID;
input  [0:0] m_axi_extMemPtr_V_RUSER;
input  [1:0] m_axi_extMemPtr_V_RRESP;
input   m_axi_extMemPtr_V_BVALID;
output   m_axi_extMemPtr_V_BREADY;
input  [1:0] m_axi_extMemPtr_V_BRESP;
input  [0:0] m_axi_extMemPtr_V_BID;
input  [0:0] m_axi_extMemPtr_V_BUSER;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] config_r_address0;
reg config_r_ce0;
reg config_r_we0;
reg[31:0] config_r_d0;
reg m_axi_extMemPtr_V_AWVALID;
reg[31:0] m_axi_extMemPtr_V_AWADDR;
reg m_axi_extMemPtr_V_WVALID;
reg[31:0] m_axi_extMemPtr_V_WDATA;
reg m_axi_extMemPtr_V_ARVALID;
reg[31:0] m_axi_extMemPtr_V_ARADDR;
reg m_axi_extMemPtr_V_RREADY;
reg m_axi_extMemPtr_V_BREADY;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [50:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    extMemPtr_V_blk_n_AR;
wire    ap_CS_fsm_state24;
reg    extMemPtr_V_blk_n_R;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state32;
reg    extMemPtr_V_blk_n_AW;
wire    ap_CS_fsm_state44;
reg    extMemPtr_V_blk_n_W;
wire    ap_CS_fsm_state45;
reg    extMemPtr_V_blk_n_B;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state51;
reg   [0:0] or_ln49_reg_1108;
reg   [31:0] reg_401;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
reg   [31:0] reg_406;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state9;
reg   [31:0] reg_411;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state10;
reg   [0:0] icmp_ln891_reg_1169;
wire   [31:0] grp_fu_343_p2;
reg   [31:0] reg_416;
reg    ap_block_state45_io;
wire   [6:0] tmp_16_fu_420_p3;
reg   [6:0] tmp_16_reg_1031;
wire    ap_CS_fsm_state2;
wire   [30:0] trunc_ln368_fu_457_p1;
reg   [30:0] trunc_ln368_reg_1053;
wire   [0:0] icmp_ln257_fu_475_p2;
reg   [0:0] icmp_ln257_reg_1058;
wire   [0:0] icmp_ln257_6_fu_481_p2;
reg   [0:0] icmp_ln257_6_reg_1063;
wire   [31:0] bitcast_ln348_fu_508_p1;
reg   [31:0] bitcast_ln348_reg_1073;
wire    ap_CS_fsm_state4;
reg   [31:0] memAddr_reg_1084;
wire   [31:0] feedbackVolRatio_fu_537_p3;
reg   [31:0] feedbackVolRatio_reg_1092;
wire   [30:0] val_assign_s_fu_562_p4;
reg   [30:0] val_assign_s_reg_1103;
wire   [0:0] or_ln49_fu_584_p2;
wire    ap_CS_fsm_state8;
reg   [5:0] wrIndex_reg_1136;
reg   [5:0] rdIndex_reg_1141;
wire   [31:0] directVolRatio_fu_646_p1;
reg   [31:0] directVolRatio_reg_1146;
wire   [31:0] delayVolRatio_fu_650_p1;
reg   [31:0] delayVolRatio_reg_1152;
wire   [31:0] periodRatio_fu_666_p1;
reg   [31:0] periodRatio_reg_1158;
wire   [31:0] maxIndex_V_fu_670_p1;
reg   [31:0] maxIndex_V_reg_1163;
wire   [0:0] grp_fu_391_p2;
reg   [0:0] icmp_ln891_1_reg_1173;
wire   [31:0] grp_fu_383_p1;
reg   [31:0] tmp_7_reg_1177;
wire    ap_CS_fsm_state16;
reg   [7:0] tmp_V_reg_1182;
wire    ap_CS_fsm_state20;
wire   [22:0] tmp_V_1_fu_687_p1;
reg   [22:0] tmp_V_1_reg_1188;
wire   [0:0] isNeg_fu_700_p3;
reg   [0:0] isNeg_reg_1193;
wire    ap_CS_fsm_state21;
wire  signed [8:0] ush_fu_717_p3;
reg  signed [8:0] ush_reg_1198;
wire   [0:0] icmp_ln63_fu_821_p2;
reg   [0:0] icmp_ln63_reg_1204;
wire    ap_CS_fsm_state22;
reg   [31:0] extMemPtr_V_addr_reg_1208;
wire    ap_CS_fsm_state23;
reg   [31:0] extMemPtr_V_addr_1_reg_1214;
wire   [31:0] select_ln69_fu_907_p3;
reg   [31:0] select_ln69_reg_1220;
reg   [31:0] auxRawL_V_reg_1225;
reg   [31:0] auxRawR_V_reg_1230;
wire   [31:0] auxL_fu_915_p1;
wire    ap_CS_fsm_state33;
wire   [31:0] auxR_fu_918_p1;
wire   [0:0] icmp_ln887_1_fu_929_p2;
reg   [0:0] icmp_ln887_1_reg_1245;
wire   [31:0] grp_fu_355_p2;
reg   [31:0] tmp_9_reg_1250;
wire    ap_CS_fsm_state37;
wire   [31:0] grp_fu_360_p2;
reg   [31:0] tmp_s_reg_1255;
wire   [31:0] grp_fu_365_p2;
reg   [31:0] tmp_1_reg_1260;
wire   [31:0] grp_fu_369_p2;
reg   [31:0] tmp_2_reg_1265;
wire   [31:0] grp_fu_374_p2;
reg   [31:0] tmp_3_reg_1270;
wire   [31:0] grp_fu_378_p2;
reg   [31:0] tmp_4_reg_1275;
reg   [31:0] extMemPtr_V_addr_2_reg_1280;
wire    ap_CS_fsm_state43;
reg   [31:0] extMemPtr_V_addr_3_reg_1286;
wire   [31:0] grp_fu_347_p2;
reg   [31:0] dst_l_reg_1292;
wire   [31:0] grp_fu_351_p2;
reg   [31:0] dst_r_reg_1297;
reg   [31:0] i_op_assign_2_reg_279;
wire    ap_CS_fsm_state11;
reg   [31:0] i_op_assign_3_reg_290;
reg   [31:0] auxL_0_reg_301;
reg   [31:0] auxR_0_reg_313;
reg   [31:0] ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4;
reg   [31:0] agg_result_l_write_a_reg_325;
reg    ap_block_state51;
reg   [31:0] ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4;
reg   [31:0] agg_result_r_write_a_reg_334;
wire   [63:0] tmp_22_fu_434_p3;
wire   [63:0] tmp_17_fu_448_p3;
wire   [63:0] tmp_18_fu_492_p3;
wire   [63:0] tmp_19_fu_518_p3;
wire   [63:0] tmp_20_fu_549_p3;
wire   [63:0] tmp_21_fu_595_p3;
wire   [63:0] tmp_23_fu_609_p3;
wire   [63:0] tmp_24_fu_623_p3;
wire   [63:0] tmp_25_fu_637_p3;
wire   [63:0] zext_ln65_4_fu_855_p1;
wire   [63:0] zext_ln66_1_fu_881_p1;
wire   [63:0] zext_ln76_4_fu_973_p1;
wire   [63:0] zext_ln77_1_fu_999_p1;
wire   [31:0] bitcast_ln705_fu_1009_p1;
wire   [31:0] bitcast_ln705_1_fu_1014_p1;
wire    ap_CS_fsm_state34;
wire   [31:0] select_ln78_fu_941_p3;
reg   [31:0] grp_fu_343_p0;
reg   [31:0] grp_fu_343_p1;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
reg   [31:0] grp_fu_355_p0;
reg   [31:0] grp_fu_355_p1;
wire    ap_CS_fsm_state17;
wire   [31:0] grp_fu_386_p0;
wire   [6:0] or_ln39_fu_428_p2;
wire   [6:0] or_ln33_fu_443_p2;
wire   [7:0] tmp_26_fu_465_p4;
wire   [22:0] trunc_ln257_fu_461_p1;
wire   [6:0] or_ln35_fu_487_p2;
wire   [31:0] p_Result_s_fu_501_p3;
wire   [6:0] or_ln36_fu_513_p2;
wire   [0:0] or_ln257_fu_527_p2;
wire   [0:0] grp_fu_386_p2;
wire   [0:0] and_ln257_fu_531_p2;
wire   [6:0] or_ln37_fu_544_p2;
wire   [0:0] trunc_ln302_fu_558_p1;
wire   [0:0] hasMemSizeError_fu_578_p2;
wire   [0:0] isNotRunning_fu_572_p2;
wire   [6:0] or_ln38_fu_590_p2;
wire   [6:0] or_ln40_fu_604_p2;
wire   [6:0] or_ln42_fu_618_p2;
wire   [6:0] or_ln43_fu_632_p2;
wire   [30:0] trunc_ln368_7_fu_654_p1;
wire   [31:0] p_Result_20_fu_658_p3;
wire   [31:0] p_Val2_13_fu_673_p1;
wire   [8:0] zext_ln339_fu_691_p1;
wire   [8:0] add_ln339_fu_694_p2;
wire   [7:0] sub_ln1311_fu_708_p2;
wire  signed [8:0] sext_ln1311_fu_713_p1;
wire   [24:0] mantissa_V_fu_725_p4;
wire  signed [31:0] sext_ln1311_1_fu_738_p1;
wire  signed [24:0] sext_ln1311_2_fu_741_p1;
wire   [78:0] zext_ln682_fu_734_p1;
wire   [78:0] zext_ln1287_fu_744_p1;
wire   [24:0] r_V_fu_748_p2;
wire   [0:0] tmp_fu_760_p3;
wire   [78:0] r_V_1_fu_754_p2;
wire   [31:0] zext_ln662_fu_768_p1;
wire   [31:0] tmp_28_fu_772_p4;
wire   [31:0] sub_ln59_1_fu_795_p2;
wire   [0:0] icmp_ln59_fu_789_p2;
wire   [31:0] add_ln59_fu_801_p2;
wire   [31:0] sub_ln59_fu_807_p2;
wire   [31:0] currentPeriod_fu_813_p3;
wire   [31:0] val_V_fu_782_p3;
wire   [32:0] shl_ln_fu_837_p3;
wire   [33:0] zext_ln65_1_fu_830_p1;
wire   [33:0] zext_ln65_3_fu_845_p1;
wire   [33:0] add_ln65_fu_849_p2;
wire   [32:0] zext_ln65_fu_827_p1;
wire   [32:0] add_ln66_fu_865_p2;
wire   [33:0] zext_ln66_fu_871_p1;
wire   [33:0] add_ln66_1_fu_875_p2;
wire   [31:0] grp_fu_396_p2;
wire   [32:0] zext_ln65_2_fu_833_p1;
wire  signed [32:0] sext_ln1354_fu_891_p1;
wire   [0:0] icmp_ln887_fu_895_p2;
wire   [31:0] add_ln69_fu_901_p2;
wire   [32:0] zext_ln76_2_fu_921_p1;
wire  signed [32:0] sext_ln1354_1_fu_925_p1;
wire   [31:0] add_ln78_fu_935_p2;
wire   [32:0] shl_ln1_fu_955_p3;
wire   [33:0] zext_ln76_1_fu_952_p1;
wire   [33:0] zext_ln76_3_fu_963_p1;
wire   [33:0] add_ln76_fu_967_p2;
wire   [32:0] zext_ln76_fu_949_p1;
wire   [32:0] add_ln77_fu_983_p2;
wire   [33:0] zext_ln77_fu_989_p1;
wire   [33:0] add_ln77_1_fu_993_p2;
reg    grp_fu_343_ce;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
reg    grp_fu_347_ce;
reg    grp_fu_351_ce;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [50:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 51'd1;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
end

pynq_dsp_hls_faddbkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_faddbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_343_p0),
    .din1(grp_fu_343_p1),
    .ce(grp_fu_343_ce),
    .dout(grp_fu_343_p2)
);

pynq_dsp_hls_faddbkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_faddbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_reg_1260),
    .din1(tmp_2_reg_1265),
    .ce(grp_fu_347_ce),
    .dout(grp_fu_347_p2)
);

pynq_dsp_hls_faddbkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_faddbkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_1270),
    .din1(tmp_4_reg_1275),
    .ce(grp_fu_351_ce),
    .dout(grp_fu_351_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_355_p0),
    .din1(grp_fu_355_p1),
    .ce(1'b1),
    .dout(grp_fu_355_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(auxR_0_reg_313),
    .din1(feedbackVolRatio_reg_1092),
    .ce(1'b1),
    .dout(grp_fu_360_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(directVolRatio_reg_1146),
    .din1(inData_l),
    .ce(1'b1),
    .dout(grp_fu_365_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(auxL_0_reg_301),
    .din1(delayVolRatio_reg_1152),
    .ce(1'b1),
    .dout(grp_fu_369_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(directVolRatio_reg_1146),
    .din1(inData_r),
    .ce(1'b1),
    .dout(grp_fu_374_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(auxR_0_reg_313),
    .din1(delayVolRatio_reg_1152),
    .ce(1'b1),
    .dout(grp_fu_378_p2)
);

pynq_dsp_hls_uitodEe #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_uitodEe_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_401),
    .ce(1'b1),
    .dout(grp_fu_383_p1)
);

pynq_dsp_hls_fcmpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pynq_dsp_hls_fcmpeOg_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_386_p0),
    .din1(32'd1061997773),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_386_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if ((~((m_axi_extMemPtr_V_BVALID == 1'b0) & (or_ln49_reg_1108 == 1'd0)) & (1'b1 == ap_CS_fsm_state51))) begin
            ap_return_0_preg <= ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if ((~((m_axi_extMemPtr_V_BVALID == 1'b0) & (or_ln49_reg_1108 == 1'd0)) & (1'b1 == ap_CS_fsm_state51))) begin
            ap_return_1_preg <= ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (or_ln49_reg_1108 == 1'd1))) begin
        agg_result_l_write_a_reg_325 <= inData_l;
    end else if ((~((m_axi_extMemPtr_V_BVALID == 1'b0) & (or_ln49_reg_1108 == 1'd0)) & (1'b1 == ap_CS_fsm_state51) & (or_ln49_reg_1108 == 1'd0))) begin
        agg_result_l_write_a_reg_325 <= dst_l_reg_1292;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (or_ln49_reg_1108 == 1'd1))) begin
        agg_result_r_write_a_reg_334 <= inData_r;
    end else if ((~((m_axi_extMemPtr_V_BVALID == 1'b0) & (or_ln49_reg_1108 == 1'd0)) & (1'b1 == ap_CS_fsm_state51) & (or_ln49_reg_1108 == 1'd0))) begin
        agg_result_r_write_a_reg_334 <= dst_r_reg_1297;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_reg_1204 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        auxL_0_reg_301 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln63_reg_1204 == 1'd0))) begin
        auxL_0_reg_301 <= auxL_fu_915_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_reg_1204 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        auxR_0_reg_313 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln63_reg_1204 == 1'd0))) begin
        auxR_0_reg_313 <= auxR_fu_918_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_391_p2 == 1'd1) & (icmp_ln891_reg_1169 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (or_ln49_reg_1108 == 1'd0))) begin
        i_op_assign_2_reg_279 <= config_r_q0;
    end else if (((1'b1 == ap_CS_fsm_state11) & ((or_ln49_reg_1108 == 1'd1) | ((icmp_ln891_1_reg_1173 == 1'd0) | (icmp_ln891_reg_1169 == 1'd0))))) begin
        i_op_assign_2_reg_279 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_391_p2 == 1'd1) & (icmp_ln891_reg_1169 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (or_ln49_reg_1108 == 1'd0))) begin
        i_op_assign_3_reg_290 <= reg_406;
    end else if (((1'b1 == ap_CS_fsm_state11) & ((or_ln49_reg_1108 == 1'd1) | ((icmp_ln891_1_reg_1173 == 1'd0) | (icmp_ln891_reg_1169 == 1'd0))))) begin
        i_op_assign_3_reg_290 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (m_axi_extMemPtr_V_RVALID == 1'b1))) begin
        auxRawL_V_reg_1225 <= m_axi_extMemPtr_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (m_axi_extMemPtr_V_RVALID == 1'b1))) begin
        auxRawR_V_reg_1230 <= m_axi_extMemPtr_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bitcast_ln348_reg_1073[30 : 0] <= bitcast_ln348_fu_508_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        delayVolRatio_reg_1152 <= delayVolRatio_fu_650_p1;
        directVolRatio_reg_1146 <= directVolRatio_fu_646_p1;
        maxIndex_V_reg_1163[30 : 0] <= maxIndex_V_fu_670_p1[30 : 0];
        periodRatio_reg_1158[30 : 0] <= periodRatio_fu_666_p1[30 : 0];
        rdIndex_reg_1141[5 : 4] <= tmp_25_fu_637_p3[5 : 4];
        wrIndex_reg_1136[5 : 4] <= tmp_24_fu_623_p3[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
        dst_l_reg_1292 <= grp_fu_347_p2;
        dst_r_reg_1297 <= grp_fu_351_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln63_reg_1204 == 1'd0))) begin
        extMemPtr_V_addr_1_reg_1214 <= zext_ln66_1_fu_881_p1;
        extMemPtr_V_addr_reg_1208 <= zext_ln65_4_fu_855_p1;
        select_ln69_reg_1220 <= select_ln69_fu_907_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        extMemPtr_V_addr_2_reg_1280 <= zext_ln76_4_fu_973_p1;
        extMemPtr_V_addr_3_reg_1286 <= zext_ln77_1_fu_999_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        feedbackVolRatio_reg_1092[30 : 0] <= feedbackVolRatio_fu_537_p3[30 : 0];
        memAddr_reg_1084 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln257_6_reg_1063 <= icmp_ln257_6_fu_481_p2;
        icmp_ln257_reg_1058 <= icmp_ln257_fu_475_p2;
        trunc_ln368_reg_1053 <= trunc_ln368_fu_457_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        icmp_ln63_reg_1204 <= icmp_ln63_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        icmp_ln887_1_reg_1245 <= icmp_ln887_1_fu_929_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln891_reg_1169 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (or_ln49_reg_1108 == 1'd0))) begin
        icmp_ln891_1_reg_1173 <= grp_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln891_reg_1169 <= grp_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        isNeg_reg_1193 <= add_ln339_fu_694_p2[32'd8];
        ush_reg_1198 <= ush_fu_717_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        or_ln49_reg_1108 <= or_ln49_fu_584_p2;
        val_assign_s_reg_1103 <= {{config_r_q0[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_401 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_406 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((icmp_ln891_reg_1169 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (or_ln49_reg_1108 == 1'd0)))) begin
        reg_411 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state45_io) & (1'b1 == ap_CS_fsm_state45)) | ((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)))) begin
        reg_416 <= grp_fu_343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_16_reg_1031[6 : 4] <= tmp_16_fu_420_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        tmp_1_reg_1260 <= grp_fu_365_p2;
        tmp_2_reg_1265 <= grp_fu_369_p2;
        tmp_3_reg_1270 <= grp_fu_374_p2;
        tmp_4_reg_1275 <= grp_fu_378_p2;
        tmp_9_reg_1250 <= grp_fu_355_p2;
        tmp_s_reg_1255 <= grp_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_7_reg_1177 <= grp_fu_383_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_V_1_reg_1188 <= tmp_V_1_fu_687_p1;
        tmp_V_reg_1182 <= {{p_Val2_13_fu_673_p1[30:23]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | (~((m_axi_extMemPtr_V_BVALID == 1'b0) & (or_ln49_reg_1108 == 1'd0)) & (1'b1 == ap_CS_fsm_state51)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) & (or_ln49_reg_1108 == 1'd0))) begin
        ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4 = dst_l_reg_1292;
    end else begin
        ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4 = agg_result_l_write_a_reg_325;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) & (or_ln49_reg_1108 == 1'd0))) begin
        ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4 = dst_r_reg_1297;
    end else begin
        ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4 = agg_result_r_write_a_reg_334;
    end
end

always @ (*) begin
    if ((~((m_axi_extMemPtr_V_BVALID == 1'b0) & (or_ln49_reg_1108 == 1'd0)) & (1'b1 == ap_CS_fsm_state51))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((m_axi_extMemPtr_V_BVALID == 1'b0) & (or_ln49_reg_1108 == 1'd0)) & (1'b1 == ap_CS_fsm_state51))) begin
        ap_return_0 = ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((~((m_axi_extMemPtr_V_BVALID == 1'b0) & (or_ln49_reg_1108 == 1'd0)) & (1'b1 == ap_CS_fsm_state51))) begin
        ap_return_1 = ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state10))) begin
        config_r_address0 = wrIndex_reg_1136;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state24))) begin
        config_r_address0 = rdIndex_reg_1141;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        config_r_address0 = tmp_24_fu_623_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        config_r_address0 = tmp_23_fu_609_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        config_r_address0 = tmp_21_fu_595_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        config_r_address0 = tmp_20_fu_549_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        config_r_address0 = tmp_19_fu_518_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        config_r_address0 = tmp_18_fu_492_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        config_r_address0 = tmp_17_fu_448_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        config_r_address0 = tmp_22_fu_434_p3;
    end else begin
        config_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state24) & (m_axi_extMemPtr_V_ARREADY == 1'b1)))) begin
        config_r_ce0 = 1'b1;
    end else begin
        config_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        config_r_d0 = select_ln78_fu_941_p3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        config_r_d0 = select_ln69_reg_1220;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        config_r_d0 = 32'd0;
    end else begin
        config_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | ((1'b1 == ap_CS_fsm_state11) & ((or_ln49_reg_1108 == 1'd1) | ((icmp_ln891_1_reg_1173 == 1'd0) | (icmp_ln891_reg_1169 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state10) & ((or_ln49_reg_1108 == 1'd1) | ((grp_fu_391_p2 == 1'd0) | (icmp_ln891_reg_1169 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state24) & (m_axi_extMemPtr_V_ARREADY == 1'b1)))) begin
        config_r_we0 = 1'b1;
    end else begin
        config_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        extMemPtr_V_blk_n_AR = m_axi_extMemPtr_V_ARREADY;
    end else begin
        extMemPtr_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44))) begin
        extMemPtr_V_blk_n_AW = m_axi_extMemPtr_V_AWREADY;
    end else begin
        extMemPtr_V_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | ((1'b1 == ap_CS_fsm_state51) & (or_ln49_reg_1108 == 1'd0)))) begin
        extMemPtr_V_blk_n_B = m_axi_extMemPtr_V_BVALID;
    end else begin
        extMemPtr_V_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31))) begin
        extMemPtr_V_blk_n_R = m_axi_extMemPtr_V_RVALID;
    end else begin
        extMemPtr_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45))) begin
        extMemPtr_V_blk_n_W = m_axi_extMemPtr_V_WREADY;
    end else begin
        extMemPtr_V_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state43) | ((1'b0 == ap_block_state45_io) & (1'b1 == ap_CS_fsm_state45)) | ((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)))) begin
        grp_fu_343_ce = 1'b1;
    end else begin
        grp_fu_343_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_343_p0 = tmp_s_reg_1255;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_343_p0 = tmp_9_reg_1250;
    end else begin
        grp_fu_343_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_343_p1 = inData_r;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_343_p1 = inData_l;
    end else begin
        grp_fu_343_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state43) | ((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)))) begin
        grp_fu_347_ce = 1'b1;
    end else begin
        grp_fu_347_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state43) | ((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)))) begin
        grp_fu_351_ce = 1'b1;
    end else begin
        grp_fu_351_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_355_p0 = auxL_0_reg_301;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_355_p0 = tmp_7_reg_1177;
    end else begin
        grp_fu_355_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_355_p1 = feedbackVolRatio_reg_1092;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_355_p1 = periodRatio_reg_1158;
    end else begin
        grp_fu_355_p1 = 'bx;
    end
end

always @ (*) begin
    if ((m_axi_extMemPtr_V_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state25)) begin
            m_axi_extMemPtr_V_ARADDR = extMemPtr_V_addr_1_reg_1214;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            m_axi_extMemPtr_V_ARADDR = extMemPtr_V_addr_reg_1208;
        end else begin
            m_axi_extMemPtr_V_ARADDR = 'bx;
        end
    end else begin
        m_axi_extMemPtr_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state25) & (m_axi_extMemPtr_V_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (m_axi_extMemPtr_V_ARREADY == 1'b1)))) begin
        m_axi_extMemPtr_V_ARVALID = 1'b1;
    end else begin
        m_axi_extMemPtr_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state45_io) & (1'b1 == ap_CS_fsm_state45))) begin
        m_axi_extMemPtr_V_AWADDR = extMemPtr_V_addr_3_reg_1286;
    end else if (((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
        m_axi_extMemPtr_V_AWADDR = extMemPtr_V_addr_2_reg_1280;
    end else begin
        m_axi_extMemPtr_V_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state45_io) & (1'b1 == ap_CS_fsm_state45)) | ((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44)))) begin
        m_axi_extMemPtr_V_AWVALID = 1'b1;
    end else begin
        m_axi_extMemPtr_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((m_axi_extMemPtr_V_BVALID == 1'b0) & (or_ln49_reg_1108 == 1'd0)) & (1'b1 == ap_CS_fsm_state51) & (or_ln49_reg_1108 == 1'd0)) | ((1'b1 == ap_CS_fsm_state50) & (m_axi_extMemPtr_V_BVALID == 1'b1)))) begin
        m_axi_extMemPtr_V_BREADY = 1'b1;
    end else begin
        m_axi_extMemPtr_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state32) & (m_axi_extMemPtr_V_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state31) & (m_axi_extMemPtr_V_RVALID == 1'b1)))) begin
        m_axi_extMemPtr_V_RREADY = 1'b1;
    end else begin
        m_axi_extMemPtr_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        m_axi_extMemPtr_V_WDATA = bitcast_ln705_1_fu_1014_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        m_axi_extMemPtr_V_WDATA = bitcast_ln705_fu_1009_p1;
    end else begin
        m_axi_extMemPtr_V_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((m_axi_extMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state46)) | ((1'b0 == ap_block_state45_io) & (1'b1 == ap_CS_fsm_state45)))) begin
        m_axi_extMemPtr_V_WVALID = 1'b1;
    end else begin
        m_axi_extMemPtr_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (or_ln49_reg_1108 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (or_ln49_reg_1108 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln63_reg_1204 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (m_axi_extMemPtr_V_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (m_axi_extMemPtr_V_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (m_axi_extMemPtr_V_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (m_axi_extMemPtr_V_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((m_axi_extMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b0 == ap_block_state45_io) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((m_axi_extMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((1'b1 == ap_CS_fsm_state50) & (m_axi_extMemPtr_V_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if ((~((m_axi_extMemPtr_V_BVALID == 1'b0) & (or_ln49_reg_1108 == 1'd0)) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln339_fu_694_p2 = ($signed(9'd385) + $signed(zext_ln339_fu_691_p1));

assign add_ln59_fu_801_p2 = (i_op_assign_2_reg_279 + sub_ln59_1_fu_795_p2);

assign add_ln65_fu_849_p2 = (zext_ln65_1_fu_830_p1 + zext_ln65_3_fu_845_p1);

assign add_ln66_1_fu_875_p2 = (zext_ln65_3_fu_845_p1 + zext_ln66_fu_871_p1);

assign add_ln66_fu_865_p2 = (zext_ln65_fu_827_p1 + 33'd1);

assign add_ln69_fu_901_p2 = (i_op_assign_2_reg_279 + 32'd1);

assign add_ln76_fu_967_p2 = (zext_ln76_1_fu_952_p1 + zext_ln76_3_fu_963_p1);

assign add_ln77_1_fu_993_p2 = (zext_ln76_3_fu_963_p1 + zext_ln77_fu_989_p1);

assign add_ln77_fu_983_p2 = (zext_ln76_fu_949_p1 + 33'd1);

assign add_ln78_fu_935_p2 = (i_op_assign_3_reg_290 + 32'd1);

assign and_ln257_fu_531_p2 = (or_ln257_fu_527_p2 & grp_fu_386_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state45_io = ((m_axi_extMemPtr_V_WREADY == 1'b0) | (m_axi_extMemPtr_V_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state51 = ((m_axi_extMemPtr_V_BVALID == 1'b0) & (or_ln49_reg_1108 == 1'd0));
end

assign auxL_fu_915_p1 = auxRawL_V_reg_1225;

assign auxR_fu_918_p1 = auxRawR_V_reg_1230;

assign bitcast_ln348_fu_508_p1 = p_Result_s_fu_501_p3;

assign bitcast_ln705_1_fu_1014_p1 = reg_416;

assign bitcast_ln705_fu_1009_p1 = reg_416;

assign currentPeriod_fu_813_p3 = ((icmp_ln59_fu_789_p2[0:0] === 1'b1) ? add_ln59_fu_801_p2 : sub_ln59_fu_807_p2);

assign delayVolRatio_fu_650_p1 = reg_411;

assign directVolRatio_fu_646_p1 = reg_406;

assign feedbackVolRatio_fu_537_p3 = ((and_ln257_fu_531_p2[0:0] === 1'b1) ? 32'd1061997773 : bitcast_ln348_reg_1073);

assign grp_fu_386_p0 = p_Result_s_fu_501_p3;

assign grp_fu_391_p2 = ((config_r_q0 < maxIndex_V_reg_1163) ? 1'b1 : 1'b0);

assign grp_fu_396_p2 = ($signed(maxIndex_V_reg_1163) + $signed(32'd4294967294));

assign hasMemSizeError_fu_578_p2 = ((val_assign_s_fu_562_p4 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln257_6_fu_481_p2 = ((trunc_ln257_fu_461_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln257_fu_475_p2 = ((tmp_26_fu_465_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_789_p2 = ((i_op_assign_3_reg_290 < i_op_assign_2_reg_279) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_821_p2 = ((currentPeriod_fu_813_p3 < val_V_fu_782_p3) ? 1'b1 : 1'b0);

assign icmp_ln887_1_fu_929_p2 = (($signed(zext_ln76_2_fu_921_p1) < $signed(sext_ln1354_1_fu_925_p1)) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_895_p2 = (($signed(zext_ln65_2_fu_833_p1) < $signed(sext_ln1354_fu_891_p1)) ? 1'b1 : 1'b0);

assign isNeg_fu_700_p3 = add_ln339_fu_694_p2[32'd8];

assign isNotRunning_fu_572_p2 = (trunc_ln302_fu_558_p1 ^ 1'd1);

assign m_axi_extMemPtr_V_ARBURST = 2'd0;

assign m_axi_extMemPtr_V_ARCACHE = 4'd0;

assign m_axi_extMemPtr_V_ARID = 1'd0;

assign m_axi_extMemPtr_V_ARLEN = 32'd1;

assign m_axi_extMemPtr_V_ARLOCK = 2'd0;

assign m_axi_extMemPtr_V_ARPROT = 3'd0;

assign m_axi_extMemPtr_V_ARQOS = 4'd0;

assign m_axi_extMemPtr_V_ARREGION = 4'd0;

assign m_axi_extMemPtr_V_ARSIZE = 3'd0;

assign m_axi_extMemPtr_V_ARUSER = 1'd0;

assign m_axi_extMemPtr_V_AWBURST = 2'd0;

assign m_axi_extMemPtr_V_AWCACHE = 4'd0;

assign m_axi_extMemPtr_V_AWID = 1'd0;

assign m_axi_extMemPtr_V_AWLEN = 32'd1;

assign m_axi_extMemPtr_V_AWLOCK = 2'd0;

assign m_axi_extMemPtr_V_AWPROT = 3'd0;

assign m_axi_extMemPtr_V_AWQOS = 4'd0;

assign m_axi_extMemPtr_V_AWREGION = 4'd0;

assign m_axi_extMemPtr_V_AWSIZE = 3'd0;

assign m_axi_extMemPtr_V_AWUSER = 1'd0;

assign m_axi_extMemPtr_V_WID = 1'd0;

assign m_axi_extMemPtr_V_WLAST = 1'b0;

assign m_axi_extMemPtr_V_WSTRB = 4'd15;

assign m_axi_extMemPtr_V_WUSER = 1'd0;

assign mantissa_V_fu_725_p4 = {{{{1'd1}, {tmp_V_1_reg_1188}}}, {1'd0}};

assign maxIndex_V_fu_670_p1 = val_assign_s_reg_1103;

assign or_ln257_fu_527_p2 = (icmp_ln257_reg_1058 | icmp_ln257_6_reg_1063);

assign or_ln33_fu_443_p2 = (tmp_16_reg_1031 | 7'd1);

assign or_ln35_fu_487_p2 = (tmp_16_reg_1031 | 7'd2);

assign or_ln36_fu_513_p2 = (tmp_16_reg_1031 | 7'd3);

assign or_ln37_fu_544_p2 = (tmp_16_reg_1031 | 7'd4);

assign or_ln38_fu_590_p2 = (tmp_16_reg_1031 | 7'd5);

assign or_ln39_fu_428_p2 = (tmp_16_fu_420_p3 | 7'd6);

assign or_ln40_fu_604_p2 = (tmp_16_reg_1031 | 7'd7);

assign or_ln42_fu_618_p2 = (tmp_16_reg_1031 | 7'd8);

assign or_ln43_fu_632_p2 = (tmp_16_reg_1031 | 7'd9);

assign or_ln49_fu_584_p2 = (isNotRunning_fu_572_p2 | hasMemSizeError_fu_578_p2);

assign p_Result_20_fu_658_p3 = {{1'd0}, {trunc_ln368_7_fu_654_p1}};

assign p_Result_s_fu_501_p3 = {{1'd0}, {trunc_ln368_reg_1053}};

assign p_Val2_13_fu_673_p1 = grp_fu_355_p2;

assign periodRatio_fu_666_p1 = p_Result_20_fu_658_p3;

assign r_V_1_fu_754_p2 = zext_ln682_fu_734_p1 << zext_ln1287_fu_744_p1;

assign r_V_fu_748_p2 = mantissa_V_fu_725_p4 >> sext_ln1311_2_fu_741_p1;

assign select_ln69_fu_907_p3 = ((icmp_ln887_fu_895_p2[0:0] === 1'b1) ? add_ln69_fu_901_p2 : 32'd0);

assign select_ln78_fu_941_p3 = ((icmp_ln887_1_reg_1245[0:0] === 1'b1) ? add_ln78_fu_935_p2 : 32'd0);

assign sext_ln1311_1_fu_738_p1 = ush_reg_1198;

assign sext_ln1311_2_fu_741_p1 = ush_reg_1198;

assign sext_ln1311_fu_713_p1 = $signed(sub_ln1311_fu_708_p2);

assign sext_ln1354_1_fu_925_p1 = $signed(grp_fu_396_p2);

assign sext_ln1354_fu_891_p1 = $signed(grp_fu_396_p2);

assign shl_ln1_fu_955_p3 = {{i_op_assign_3_reg_290}, {1'd0}};

assign shl_ln_fu_837_p3 = {{i_op_assign_2_reg_279}, {1'd0}};

assign sub_ln1311_fu_708_p2 = (8'd127 - tmp_V_reg_1182);

assign sub_ln59_1_fu_795_p2 = (i_op_assign_3_reg_290 - reg_401);

assign sub_ln59_fu_807_p2 = (i_op_assign_3_reg_290 - i_op_assign_2_reg_279);

assign tmp_16_fu_420_p3 = {{config_offset}, {4'd0}};

assign tmp_17_fu_448_p3 = {{57'd0}, {or_ln33_fu_443_p2}};

assign tmp_18_fu_492_p3 = {{57'd0}, {or_ln35_fu_487_p2}};

assign tmp_19_fu_518_p3 = {{57'd0}, {or_ln36_fu_513_p2}};

assign tmp_20_fu_549_p3 = {{57'd0}, {or_ln37_fu_544_p2}};

assign tmp_21_fu_595_p3 = {{57'd0}, {or_ln38_fu_590_p2}};

assign tmp_22_fu_434_p3 = {{57'd0}, {or_ln39_fu_428_p2}};

assign tmp_23_fu_609_p3 = {{57'd0}, {or_ln40_fu_604_p2}};

assign tmp_24_fu_623_p3 = {{57'd0}, {or_ln42_fu_618_p2}};

assign tmp_25_fu_637_p3 = {{57'd0}, {or_ln43_fu_632_p2}};

assign tmp_26_fu_465_p4 = {{config_r_q0[30:23]}};

assign tmp_28_fu_772_p4 = {{r_V_1_fu_754_p2[55:24]}};

assign tmp_V_1_fu_687_p1 = p_Val2_13_fu_673_p1[22:0];

assign tmp_fu_760_p3 = r_V_fu_748_p2[32'd24];

assign trunc_ln257_fu_461_p1 = config_r_q0[22:0];

assign trunc_ln302_fu_558_p1 = reg_401[0:0];

assign trunc_ln368_7_fu_654_p1 = config_r_q0[30:0];

assign trunc_ln368_fu_457_p1 = config_r_q0[30:0];

assign ush_fu_717_p3 = ((isNeg_fu_700_p3[0:0] === 1'b1) ? sext_ln1311_fu_713_p1 : add_ln339_fu_694_p2);

assign val_V_fu_782_p3 = ((isNeg_reg_1193[0:0] === 1'b1) ? zext_ln662_fu_768_p1 : tmp_28_fu_772_p4);

assign val_assign_s_fu_562_p4 = {{config_r_q0[31:1]}};

assign zext_ln1287_fu_744_p1 = $unsigned(sext_ln1311_1_fu_738_p1);

assign zext_ln339_fu_691_p1 = tmp_V_reg_1182;

assign zext_ln65_1_fu_830_p1 = memAddr_reg_1084;

assign zext_ln65_2_fu_833_p1 = i_op_assign_2_reg_279;

assign zext_ln65_3_fu_845_p1 = shl_ln_fu_837_p3;

assign zext_ln65_4_fu_855_p1 = add_ln65_fu_849_p2;

assign zext_ln65_fu_827_p1 = memAddr_reg_1084;

assign zext_ln662_fu_768_p1 = tmp_fu_760_p3;

assign zext_ln66_1_fu_881_p1 = add_ln66_1_fu_875_p2;

assign zext_ln66_fu_871_p1 = add_ln66_fu_865_p2;

assign zext_ln682_fu_734_p1 = mantissa_V_fu_725_p4;

assign zext_ln76_1_fu_952_p1 = memAddr_reg_1084;

assign zext_ln76_2_fu_921_p1 = i_op_assign_3_reg_290;

assign zext_ln76_3_fu_963_p1 = shl_ln1_fu_955_p3;

assign zext_ln76_4_fu_973_p1 = add_ln76_fu_967_p2;

assign zext_ln76_fu_949_p1 = memAddr_reg_1084;

assign zext_ln77_1_fu_999_p1 = add_ln77_1_fu_993_p2;

assign zext_ln77_fu_989_p1 = add_ln77_fu_983_p2;

always @ (posedge ap_clk) begin
    tmp_16_reg_1031[3:0] <= 4'b0000;
    bitcast_ln348_reg_1073[31] <= 1'b0;
    feedbackVolRatio_reg_1092[31] <= 1'b0;
    wrIndex_reg_1136[3:0] <= 4'b1000;
    rdIndex_reg_1141[3:0] <= 4'b1001;
    periodRatio_reg_1158[31] <= 1'b0;
    maxIndex_V_reg_1163[31] <= 1'b0;
end

endmodule //effect_delay
