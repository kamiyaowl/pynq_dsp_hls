// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pynq_dsp_hls,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.503400,HLS_SYN_LAT=58,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=40,HLS_SYN_FF=12259,HLS_SYN_LUT=17592,HLS_VERSION=2019_1_3}" *)

module pynq_dsp_hls (
        ap_clk,
        ap_rst_n,
        lrclk,
        m_axi_physMemPtr_V_AWVALID,
        m_axi_physMemPtr_V_AWREADY,
        m_axi_physMemPtr_V_AWADDR,
        m_axi_physMemPtr_V_AWID,
        m_axi_physMemPtr_V_AWLEN,
        m_axi_physMemPtr_V_AWSIZE,
        m_axi_physMemPtr_V_AWBURST,
        m_axi_physMemPtr_V_AWLOCK,
        m_axi_physMemPtr_V_AWCACHE,
        m_axi_physMemPtr_V_AWPROT,
        m_axi_physMemPtr_V_AWQOS,
        m_axi_physMemPtr_V_AWREGION,
        m_axi_physMemPtr_V_AWUSER,
        m_axi_physMemPtr_V_WVALID,
        m_axi_physMemPtr_V_WREADY,
        m_axi_physMemPtr_V_WDATA,
        m_axi_physMemPtr_V_WSTRB,
        m_axi_physMemPtr_V_WLAST,
        m_axi_physMemPtr_V_WID,
        m_axi_physMemPtr_V_WUSER,
        m_axi_physMemPtr_V_ARVALID,
        m_axi_physMemPtr_V_ARREADY,
        m_axi_physMemPtr_V_ARADDR,
        m_axi_physMemPtr_V_ARID,
        m_axi_physMemPtr_V_ARLEN,
        m_axi_physMemPtr_V_ARSIZE,
        m_axi_physMemPtr_V_ARBURST,
        m_axi_physMemPtr_V_ARLOCK,
        m_axi_physMemPtr_V_ARCACHE,
        m_axi_physMemPtr_V_ARPROT,
        m_axi_physMemPtr_V_ARQOS,
        m_axi_physMemPtr_V_ARREGION,
        m_axi_physMemPtr_V_ARUSER,
        m_axi_physMemPtr_V_RVALID,
        m_axi_physMemPtr_V_RREADY,
        m_axi_physMemPtr_V_RDATA,
        m_axi_physMemPtr_V_RLAST,
        m_axi_physMemPtr_V_RID,
        m_axi_physMemPtr_V_RUSER,
        m_axi_physMemPtr_V_RRESP,
        m_axi_physMemPtr_V_BVALID,
        m_axi_physMemPtr_V_BREADY,
        m_axi_physMemPtr_V_BRESP,
        m_axi_physMemPtr_V_BID,
        m_axi_physMemPtr_V_BUSER,
        m_axi_extMemPtr_V_AWVALID,
        m_axi_extMemPtr_V_AWREADY,
        m_axi_extMemPtr_V_AWADDR,
        m_axi_extMemPtr_V_AWID,
        m_axi_extMemPtr_V_AWLEN,
        m_axi_extMemPtr_V_AWSIZE,
        m_axi_extMemPtr_V_AWBURST,
        m_axi_extMemPtr_V_AWLOCK,
        m_axi_extMemPtr_V_AWCACHE,
        m_axi_extMemPtr_V_AWPROT,
        m_axi_extMemPtr_V_AWQOS,
        m_axi_extMemPtr_V_AWREGION,
        m_axi_extMemPtr_V_AWUSER,
        m_axi_extMemPtr_V_WVALID,
        m_axi_extMemPtr_V_WREADY,
        m_axi_extMemPtr_V_WDATA,
        m_axi_extMemPtr_V_WSTRB,
        m_axi_extMemPtr_V_WLAST,
        m_axi_extMemPtr_V_WID,
        m_axi_extMemPtr_V_WUSER,
        m_axi_extMemPtr_V_ARVALID,
        m_axi_extMemPtr_V_ARREADY,
        m_axi_extMemPtr_V_ARADDR,
        m_axi_extMemPtr_V_ARID,
        m_axi_extMemPtr_V_ARLEN,
        m_axi_extMemPtr_V_ARSIZE,
        m_axi_extMemPtr_V_ARBURST,
        m_axi_extMemPtr_V_ARLOCK,
        m_axi_extMemPtr_V_ARCACHE,
        m_axi_extMemPtr_V_ARPROT,
        m_axi_extMemPtr_V_ARQOS,
        m_axi_extMemPtr_V_ARREGION,
        m_axi_extMemPtr_V_ARUSER,
        m_axi_extMemPtr_V_RVALID,
        m_axi_extMemPtr_V_RREADY,
        m_axi_extMemPtr_V_RDATA,
        m_axi_extMemPtr_V_RLAST,
        m_axi_extMemPtr_V_RID,
        m_axi_extMemPtr_V_RUSER,
        m_axi_extMemPtr_V_RRESP,
        m_axi_extMemPtr_V_BVALID,
        m_axi_extMemPtr_V_BREADY,
        m_axi_extMemPtr_V_BRESP,
        m_axi_extMemPtr_V_BID,
        m_axi_extMemPtr_V_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 130'd1;
parameter    ap_ST_fsm_state2 = 130'd2;
parameter    ap_ST_fsm_state3 = 130'd4;
parameter    ap_ST_fsm_state4 = 130'd8;
parameter    ap_ST_fsm_state5 = 130'd16;
parameter    ap_ST_fsm_state6 = 130'd32;
parameter    ap_ST_fsm_state7 = 130'd64;
parameter    ap_ST_fsm_state8 = 130'd128;
parameter    ap_ST_fsm_state9 = 130'd256;
parameter    ap_ST_fsm_state10 = 130'd512;
parameter    ap_ST_fsm_state11 = 130'd1024;
parameter    ap_ST_fsm_state12 = 130'd2048;
parameter    ap_ST_fsm_state13 = 130'd4096;
parameter    ap_ST_fsm_state14 = 130'd8192;
parameter    ap_ST_fsm_state15 = 130'd16384;
parameter    ap_ST_fsm_state16 = 130'd32768;
parameter    ap_ST_fsm_state17 = 130'd65536;
parameter    ap_ST_fsm_state18 = 130'd131072;
parameter    ap_ST_fsm_state19 = 130'd262144;
parameter    ap_ST_fsm_state20 = 130'd524288;
parameter    ap_ST_fsm_state21 = 130'd1048576;
parameter    ap_ST_fsm_state22 = 130'd2097152;
parameter    ap_ST_fsm_state23 = 130'd4194304;
parameter    ap_ST_fsm_state24 = 130'd8388608;
parameter    ap_ST_fsm_state25 = 130'd16777216;
parameter    ap_ST_fsm_state26 = 130'd33554432;
parameter    ap_ST_fsm_state27 = 130'd67108864;
parameter    ap_ST_fsm_state28 = 130'd134217728;
parameter    ap_ST_fsm_state29 = 130'd268435456;
parameter    ap_ST_fsm_state30 = 130'd536870912;
parameter    ap_ST_fsm_state31 = 130'd1073741824;
parameter    ap_ST_fsm_state32 = 130'd2147483648;
parameter    ap_ST_fsm_state33 = 130'd4294967296;
parameter    ap_ST_fsm_state34 = 130'd8589934592;
parameter    ap_ST_fsm_state35 = 130'd17179869184;
parameter    ap_ST_fsm_state36 = 130'd34359738368;
parameter    ap_ST_fsm_state37 = 130'd68719476736;
parameter    ap_ST_fsm_state38 = 130'd137438953472;
parameter    ap_ST_fsm_state39 = 130'd274877906944;
parameter    ap_ST_fsm_state40 = 130'd549755813888;
parameter    ap_ST_fsm_state41 = 130'd1099511627776;
parameter    ap_ST_fsm_state42 = 130'd2199023255552;
parameter    ap_ST_fsm_state43 = 130'd4398046511104;
parameter    ap_ST_fsm_state44 = 130'd8796093022208;
parameter    ap_ST_fsm_state45 = 130'd17592186044416;
parameter    ap_ST_fsm_state46 = 130'd35184372088832;
parameter    ap_ST_fsm_state47 = 130'd70368744177664;
parameter    ap_ST_fsm_state48 = 130'd140737488355328;
parameter    ap_ST_fsm_state49 = 130'd281474976710656;
parameter    ap_ST_fsm_state50 = 130'd562949953421312;
parameter    ap_ST_fsm_state51 = 130'd1125899906842624;
parameter    ap_ST_fsm_state52 = 130'd2251799813685248;
parameter    ap_ST_fsm_state53 = 130'd4503599627370496;
parameter    ap_ST_fsm_state54 = 130'd9007199254740992;
parameter    ap_ST_fsm_state55 = 130'd18014398509481984;
parameter    ap_ST_fsm_state56 = 130'd36028797018963968;
parameter    ap_ST_fsm_state57 = 130'd72057594037927936;
parameter    ap_ST_fsm_state58 = 130'd144115188075855872;
parameter    ap_ST_fsm_state59 = 130'd288230376151711744;
parameter    ap_ST_fsm_state60 = 130'd576460752303423488;
parameter    ap_ST_fsm_state61 = 130'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 130'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 130'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 130'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 130'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 130'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 130'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 130'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 130'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 130'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 130'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 130'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 130'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 130'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 130'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 130'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 130'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 130'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 130'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 130'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 130'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 130'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 130'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 130'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 130'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 130'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 130'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 130'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 130'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 130'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 130'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 130'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 130'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 130'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 130'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 130'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 130'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 130'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 130'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 130'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 130'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 130'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 130'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 130'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 130'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 130'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 130'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 130'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 130'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 130'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 130'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 130'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 130'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 130'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 130'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 130'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 130'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 130'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 130'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 130'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 130'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 130'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 130'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 130'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 130'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 130'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 130'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 130'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 130'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 130'd680564733841876926926749214863536422912;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 9;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_PHYSMEMPTR_V_ID_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH = 32;
parameter    C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH = 32;
parameter    C_M_AXI_PHYSMEMPTR_V_AWUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_ARUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_WUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_RUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_BUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_TARGET_ADDR = 0;
parameter    C_M_AXI_PHYSMEMPTR_V_USER_VALUE = 0;
parameter    C_M_AXI_PHYSMEMPTR_V_PROT_VALUE = 0;
parameter    C_M_AXI_PHYSMEMPTR_V_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_EXTMEMPTR_V_ID_WIDTH = 1;
parameter    C_M_AXI_EXTMEMPTR_V_ADDR_WIDTH = 32;
parameter    C_M_AXI_EXTMEMPTR_V_DATA_WIDTH = 32;
parameter    C_M_AXI_EXTMEMPTR_V_AWUSER_WIDTH = 1;
parameter    C_M_AXI_EXTMEMPTR_V_ARUSER_WIDTH = 1;
parameter    C_M_AXI_EXTMEMPTR_V_WUSER_WIDTH = 1;
parameter    C_M_AXI_EXTMEMPTR_V_RUSER_WIDTH = 1;
parameter    C_M_AXI_EXTMEMPTR_V_BUSER_WIDTH = 1;
parameter    C_M_AXI_EXTMEMPTR_V_TARGET_ADDR = 0;
parameter    C_M_AXI_EXTMEMPTR_V_USER_VALUE = 0;
parameter    C_M_AXI_EXTMEMPTR_V_PROT_VALUE = 0;
parameter    C_M_AXI_EXTMEMPTR_V_CACHE_VALUE = 3;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_PHYSMEMPTR_V_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_EXTMEMPTR_V_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   lrclk;
output   m_axi_physMemPtr_V_AWVALID;
input   m_axi_physMemPtr_V_AWREADY;
output  [C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH - 1:0] m_axi_physMemPtr_V_AWADDR;
output  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_AWID;
output  [7:0] m_axi_physMemPtr_V_AWLEN;
output  [2:0] m_axi_physMemPtr_V_AWSIZE;
output  [1:0] m_axi_physMemPtr_V_AWBURST;
output  [1:0] m_axi_physMemPtr_V_AWLOCK;
output  [3:0] m_axi_physMemPtr_V_AWCACHE;
output  [2:0] m_axi_physMemPtr_V_AWPROT;
output  [3:0] m_axi_physMemPtr_V_AWQOS;
output  [3:0] m_axi_physMemPtr_V_AWREGION;
output  [C_M_AXI_PHYSMEMPTR_V_AWUSER_WIDTH - 1:0] m_axi_physMemPtr_V_AWUSER;
output   m_axi_physMemPtr_V_WVALID;
input   m_axi_physMemPtr_V_WREADY;
output  [C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH - 1:0] m_axi_physMemPtr_V_WDATA;
output  [C_M_AXI_PHYSMEMPTR_V_WSTRB_WIDTH - 1:0] m_axi_physMemPtr_V_WSTRB;
output   m_axi_physMemPtr_V_WLAST;
output  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_WID;
output  [C_M_AXI_PHYSMEMPTR_V_WUSER_WIDTH - 1:0] m_axi_physMemPtr_V_WUSER;
output   m_axi_physMemPtr_V_ARVALID;
input   m_axi_physMemPtr_V_ARREADY;
output  [C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH - 1:0] m_axi_physMemPtr_V_ARADDR;
output  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_ARID;
output  [7:0] m_axi_physMemPtr_V_ARLEN;
output  [2:0] m_axi_physMemPtr_V_ARSIZE;
output  [1:0] m_axi_physMemPtr_V_ARBURST;
output  [1:0] m_axi_physMemPtr_V_ARLOCK;
output  [3:0] m_axi_physMemPtr_V_ARCACHE;
output  [2:0] m_axi_physMemPtr_V_ARPROT;
output  [3:0] m_axi_physMemPtr_V_ARQOS;
output  [3:0] m_axi_physMemPtr_V_ARREGION;
output  [C_M_AXI_PHYSMEMPTR_V_ARUSER_WIDTH - 1:0] m_axi_physMemPtr_V_ARUSER;
input   m_axi_physMemPtr_V_RVALID;
output   m_axi_physMemPtr_V_RREADY;
input  [C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH - 1:0] m_axi_physMemPtr_V_RDATA;
input   m_axi_physMemPtr_V_RLAST;
input  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_RID;
input  [C_M_AXI_PHYSMEMPTR_V_RUSER_WIDTH - 1:0] m_axi_physMemPtr_V_RUSER;
input  [1:0] m_axi_physMemPtr_V_RRESP;
input   m_axi_physMemPtr_V_BVALID;
output   m_axi_physMemPtr_V_BREADY;
input  [1:0] m_axi_physMemPtr_V_BRESP;
input  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_BID;
input  [C_M_AXI_PHYSMEMPTR_V_BUSER_WIDTH - 1:0] m_axi_physMemPtr_V_BUSER;
output   m_axi_extMemPtr_V_AWVALID;
input   m_axi_extMemPtr_V_AWREADY;
output  [C_M_AXI_EXTMEMPTR_V_ADDR_WIDTH - 1:0] m_axi_extMemPtr_V_AWADDR;
output  [C_M_AXI_EXTMEMPTR_V_ID_WIDTH - 1:0] m_axi_extMemPtr_V_AWID;
output  [7:0] m_axi_extMemPtr_V_AWLEN;
output  [2:0] m_axi_extMemPtr_V_AWSIZE;
output  [1:0] m_axi_extMemPtr_V_AWBURST;
output  [1:0] m_axi_extMemPtr_V_AWLOCK;
output  [3:0] m_axi_extMemPtr_V_AWCACHE;
output  [2:0] m_axi_extMemPtr_V_AWPROT;
output  [3:0] m_axi_extMemPtr_V_AWQOS;
output  [3:0] m_axi_extMemPtr_V_AWREGION;
output  [C_M_AXI_EXTMEMPTR_V_AWUSER_WIDTH - 1:0] m_axi_extMemPtr_V_AWUSER;
output   m_axi_extMemPtr_V_WVALID;
input   m_axi_extMemPtr_V_WREADY;
output  [C_M_AXI_EXTMEMPTR_V_DATA_WIDTH - 1:0] m_axi_extMemPtr_V_WDATA;
output  [C_M_AXI_EXTMEMPTR_V_WSTRB_WIDTH - 1:0] m_axi_extMemPtr_V_WSTRB;
output   m_axi_extMemPtr_V_WLAST;
output  [C_M_AXI_EXTMEMPTR_V_ID_WIDTH - 1:0] m_axi_extMemPtr_V_WID;
output  [C_M_AXI_EXTMEMPTR_V_WUSER_WIDTH - 1:0] m_axi_extMemPtr_V_WUSER;
output   m_axi_extMemPtr_V_ARVALID;
input   m_axi_extMemPtr_V_ARREADY;
output  [C_M_AXI_EXTMEMPTR_V_ADDR_WIDTH - 1:0] m_axi_extMemPtr_V_ARADDR;
output  [C_M_AXI_EXTMEMPTR_V_ID_WIDTH - 1:0] m_axi_extMemPtr_V_ARID;
output  [7:0] m_axi_extMemPtr_V_ARLEN;
output  [2:0] m_axi_extMemPtr_V_ARSIZE;
output  [1:0] m_axi_extMemPtr_V_ARBURST;
output  [1:0] m_axi_extMemPtr_V_ARLOCK;
output  [3:0] m_axi_extMemPtr_V_ARCACHE;
output  [2:0] m_axi_extMemPtr_V_ARPROT;
output  [3:0] m_axi_extMemPtr_V_ARQOS;
output  [3:0] m_axi_extMemPtr_V_ARREGION;
output  [C_M_AXI_EXTMEMPTR_V_ARUSER_WIDTH - 1:0] m_axi_extMemPtr_V_ARUSER;
input   m_axi_extMemPtr_V_RVALID;
output   m_axi_extMemPtr_V_RREADY;
input  [C_M_AXI_EXTMEMPTR_V_DATA_WIDTH - 1:0] m_axi_extMemPtr_V_RDATA;
input   m_axi_extMemPtr_V_RLAST;
input  [C_M_AXI_EXTMEMPTR_V_ID_WIDTH - 1:0] m_axi_extMemPtr_V_RID;
input  [C_M_AXI_EXTMEMPTR_V_RUSER_WIDTH - 1:0] m_axi_extMemPtr_V_RUSER;
input  [1:0] m_axi_extMemPtr_V_RRESP;
input   m_axi_extMemPtr_V_BVALID;
output   m_axi_extMemPtr_V_BREADY;
input  [1:0] m_axi_extMemPtr_V_BRESP;
input  [C_M_AXI_EXTMEMPTR_V_ID_WIDTH - 1:0] m_axi_extMemPtr_V_BID;
input  [C_M_AXI_EXTMEMPTR_V_BUSER_WIDTH - 1:0] m_axi_extMemPtr_V_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [129:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg    lrclk_0_data_reg;
reg    lrclk_0_vld_reg;
reg    lrclk_0_ack_out;
wire   [31:0] basePhysAddr_V;
reg   [31:0] basePhysAddr_V_0_data_reg;
reg    basePhysAddr_V_0_vld_reg;
reg    basePhysAddr_V_0_ack_out;
reg   [31:0] monitorSrcL_1_data_reg;
reg    monitorSrcL_1_vld_reg;
reg    monitorSrcL_1_vld_in;
reg   [31:0] monitorSrcR_1_data_reg;
reg    monitorSrcR_1_vld_reg;
reg    monitorSrcR_1_vld_in;
reg   [31:0] monitorDstL_1_data_reg;
reg    monitorDstL_1_vld_reg;
reg    monitorDstL_1_vld_in;
reg   [31:0] monitorDstR_1_data_reg;
reg    monitorDstR_1_vld_reg;
reg    monitorDstR_1_vld_in;
wire   [31:0] counter_i;
reg   [31:0] counter_0_data_reg;
reg    counter_0_vld_reg;
reg    counter_0_ack_out;
reg   [31:0] counter_1_data_reg;
reg    counter_1_vld_reg;
reg    counter_1_vld_in;
reg   [31:0] numOfStage_1_data_reg;
reg    numOfStage_1_vld_reg;
reg    numOfStage_1_vld_in;
reg   [31:0] configSizePerStage_1_data_reg;
reg    configSizePerStage_1_vld_reg;
reg    configSizePerStage_1_vld_in;
reg   [5:0] configReg_address0;
reg    configReg_ce0;
reg    configReg_we0;
reg   [31:0] configReg_d0;
wire   [31:0] configReg_q0;
reg   [0:0] readyRch;
reg   [0:0] readyLch;
reg   [31:0] srcDatas_l_0;
reg   [31:0] srcDatas_r_0;
reg   [31:0] srcDatas_l_1;
reg   [31:0] srcDatas_l_2;
reg   [31:0] srcDatas_l_3;
reg   [31:0] srcDatas_r_1;
reg   [31:0] srcDatas_r_2;
reg   [31:0] srcDatas_r_3;
reg    physMemPtr_V_blk_n_AR;
wire    ap_CS_fsm_state3;
reg    physMemPtr_V_blk_n_R;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln761_fu_1428_p2;
wire   [0:0] or_ln198_fu_1468_p2;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
reg    physMemPtr_V_blk_n_AW;
wire    ap_CS_fsm_state119;
reg    physMemPtr_V_blk_n_W;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state121;
reg    physMemPtr_V_blk_n_B;
wire    ap_CS_fsm_state126;
reg    physMemPtr_V_AWVALID;
wire    physMemPtr_V_AWREADY;
wire   [31:0] physMemPtr_V_AWADDR;
reg    physMemPtr_V_WVALID;
wire    physMemPtr_V_WREADY;
reg   [31:0] physMemPtr_V_WDATA;
reg    physMemPtr_V_ARVALID;
wire    physMemPtr_V_ARREADY;
reg   [31:0] physMemPtr_V_ARADDR;
reg   [31:0] physMemPtr_V_ARLEN;
wire    physMemPtr_V_RVALID;
reg    physMemPtr_V_RREADY;
wire   [31:0] physMemPtr_V_RDATA;
wire    physMemPtr_V_RLAST;
wire   [0:0] physMemPtr_V_RID;
wire   [0:0] physMemPtr_V_RUSER;
wire   [1:0] physMemPtr_V_RRESP;
wire    physMemPtr_V_BVALID;
reg    physMemPtr_V_BREADY;
wire   [1:0] physMemPtr_V_BRESP;
wire   [0:0] physMemPtr_V_BID;
wire   [0:0] physMemPtr_V_BUSER;
reg    extMemPtr_V_AWVALID;
wire    extMemPtr_V_AWREADY;
reg    extMemPtr_V_WVALID;
wire    extMemPtr_V_WREADY;
reg    extMemPtr_V_ARVALID;
wire    extMemPtr_V_ARREADY;
wire    extMemPtr_V_RVALID;
reg    extMemPtr_V_RREADY;
wire   [31:0] extMemPtr_V_RDATA;
wire    extMemPtr_V_RLAST;
wire   [0:0] extMemPtr_V_RID;
wire   [0:0] extMemPtr_V_RUSER;
wire   [1:0] extMemPtr_V_RRESP;
wire    extMemPtr_V_BVALID;
reg    extMemPtr_V_BREADY;
wire   [1:0] extMemPtr_V_BRESP;
wire   [0:0] extMemPtr_V_BID;
wire   [0:0] extMemPtr_V_BUSER;
reg   [31:0] reg_1340;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state47;
reg   [31:0] reg_1345;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire   [31:0] grp_fu_1238_p2;
reg   [31:0] reg_1349;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state97;
reg   [0:0] and_ln24_1_reg_3633;
wire    ap_CS_fsm_state115;
wire   [31:0] grp_fu_1244_p2;
reg   [31:0] reg_1356;
reg   [0:0] and_ln31_1_reg_3639;
reg   [31:0] reg_1362;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state116;
reg   [31:0] reg_1369;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state56;
wire   [31:0] grp_fu_1230_p2;
reg   [31:0] reg_1374;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state78;
reg   [31:0] reg_1383;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state79;
reg   [31:0] reg_1388;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state104;
wire   [31:0] grp_fu_1234_p2;
reg   [31:0] reg_1393;
wire    ap_CS_fsm_state2;
wire   [29:0] r_V_fu_1398_p4;
reg   [29:0] r_V_reg_3162;
wire   [30:0] zext_ln215_fu_1408_p1;
reg   [30:0] zext_ln215_reg_3167;
wire   [30:0] ret_V_fu_1412_p2;
reg   [30:0] ret_V_reg_3172;
reg   [31:0] status_V_reg_3183;
wire   [0:0] xor_ln193_fu_1446_p2;
reg    ap_predicate_op196_readreq_state11;
reg    ap_block_state11_io;
wire   [23:0] srcL_V_fu_1484_p1;
reg   [23:0] srcL_V_reg_3245;
wire   [31:0] select_ln207_fu_1500_p3;
wire   [23:0] srcR_V_fu_1509_p1;
reg   [23:0] srcR_V_reg_3255;
wire    ap_CS_fsm_state20;
wire   [31:0] grp_fu_1266_p1;
reg   [31:0] tmp_reg_3270;
wire    ap_CS_fsm_state25;
wire   [31:0] grp_fu_1269_p1;
reg   [31:0] tmp_1_reg_3275;
wire   [31:0] grp_fu_1256_p2;
reg   [31:0] floatSrcL_reg_3280;
wire    ap_CS_fsm_state41;
wire   [31:0] grp_fu_1261_p2;
reg   [31:0] floatSrcR_reg_3285;
wire   [2:0] stageIndex_V_fu_1539_p2;
reg   [2:0] stageIndex_V_reg_3293;
wire    ap_CS_fsm_state42;
wire   [6:0] tmp_4_fu_1545_p3;
reg   [6:0] tmp_4_reg_3298;
wire   [0:0] icmp_ln887_fu_1533_p2;
wire    ap_CS_fsm_state43;
reg   [5:0] configReg_addr_15_reg_3327;
reg   [5:0] configReg_addr_1_reg_3332;
reg   [5:0] configReg_addr_2_reg_3337;
reg   [5:0] configReg_addr_4_reg_3347;
reg   [5:0] configReg_addr_5_reg_3352;
reg   [5:0] configReg_addr_6_reg_3357;
reg   [5:0] configReg_addr_7_reg_3362;
reg   [5:0] configReg_addr_8_reg_3367;
reg   [5:0] configReg_addr_9_reg_3372;
reg   [5:0] configReg_addr_10_reg_3377;
reg   [5:0] configReg_addr_11_reg_3382;
reg   [5:0] configReg_addr_12_reg_3387;
reg   [5:0] configReg_addr_13_reg_3392;
wire   [2:0] id_fu_1768_p1;
reg   [2:0] id_reg_3397;
wire   [1:0] trunc_ln241_fu_1772_p1;
reg   [1:0] trunc_ln241_reg_3401;
wire   [31:0] dstDatas_0_l_5_fu_1776_p6;
wire   [1:0] trunc_ln237_fu_1790_p1;
reg   [1:0] trunc_ln237_reg_3414;
wire   [31:0] bz0L_fu_1794_p6;
reg   [31:0] bz0L_reg_3420;
wire    ap_CS_fsm_state46;
reg   [31:0] configReg_load_13_reg_3426;
wire   [31:0] bz0R_fu_1807_p6;
reg   [31:0] bz0R_reg_3432;
wire   [31:0] b0_fu_1820_p1;
reg   [31:0] b0_reg_3438;
wire   [31:0] b1_fu_1825_p1;
reg   [31:0] b1_reg_3443;
wire   [31:0] bz1L_fu_1830_p1;
wire   [31:0] bz1R_fu_1834_p1;
wire    ap_CS_fsm_state48;
reg   [31:0] tmp_2_i_reg_3458;
wire   [31:0] b2_fu_1839_p1;
reg   [31:0] b2_reg_3463;
wire   [31:0] bz2L_fu_1844_p1;
wire   [31:0] bz2R_fu_1849_p1;
reg   [31:0] configReg_load_10_reg_3478;
reg   [31:0] configReg_load_5_reg_3483;
reg   [31:0] configReg_load_11_reg_3488;
wire    ap_CS_fsm_state59;
reg   [31:0] configReg_load_12_reg_3493;
wire    ap_CS_fsm_state60;
wire   [31:0] a1_fu_1854_p1;
wire    ap_CS_fsm_state61;
wire   [31:0] a2_fu_1860_p1;
wire   [31:0] az1L_fu_1865_p1;
wire   [31:0] az2L_fu_1874_p1;
wire   [31:0] grp_fu_1248_p2;
reg   [31:0] tmp_12_i_reg_3530;
wire   [31:0] grp_fu_1252_p2;
reg   [31:0] tmp_14_i_reg_3535;
wire   [1:0] trunc_ln234_fu_1920_p1;
reg   [1:0] trunc_ln234_reg_3540;
wire    ap_CS_fsm_state81;
wire   [31:0] tmp_35_fu_1924_p6;
reg   [31:0] tmp_35_reg_3544;
wire   [31:0] tmp_36_fu_1939_p6;
reg   [31:0] tmp_36_reg_3549;
wire    ap_CS_fsm_state82;
wire    grp_effect_delay_fu_1218_ap_ready;
wire    grp_effect_delay_fu_1218_ap_done;
reg   [31:0] dstDatas_0_r_reg_3562;
wire   [1:0] trunc_ln231_fu_1978_p1;
reg   [1:0] trunc_ln231_reg_3570;
wire    ap_CS_fsm_state84;
wire   [31:0] x_assign_5_fu_1982_p6;
reg   [31:0] x_assign_5_reg_3574;
wire   [31:0] x_assign_6_fu_1996_p6;
reg   [31:0] x_assign_6_reg_3581;
wire   [30:0] trunc_ln368_3_fu_2010_p1;
reg   [30:0] trunc_ln368_3_reg_3588;
wire   [0:0] or_ln24_1_fu_2024_p2;
reg   [0:0] or_ln24_1_reg_3593;
wire   [31:0] thresh_fu_2037_p1;
reg   [31:0] thresh_reg_3599;
wire    ap_CS_fsm_state85;
wire   [31:0] absL_fu_2062_p1;
reg   [31:0] absL_reg_3609;
wire   [31:0] absR_fu_2086_p1;
reg   [31:0] absR_reg_3615;
wire   [0:0] or_ln24_fu_2113_p2;
reg   [0:0] or_ln24_reg_3621;
wire   [0:0] or_ln31_fu_2141_p2;
reg   [0:0] or_ln31_reg_3627;
wire   [0:0] and_ln24_1_fu_2151_p2;
wire    ap_CS_fsm_state86;
wire   [0:0] and_ln31_1_fu_2161_p2;
wire   [30:0] trunc_ln368_4_fu_2167_p1;
reg   [30:0] trunc_ln368_4_reg_3645;
wire   [31:0] ratio_fu_2178_p1;
wire    ap_CS_fsm_state94;
wire   [0:0] grp_fu_1272_p2;
reg   [0:0] tmp_31_reg_3656;
wire   [0:0] grp_fu_1276_p2;
reg   [0:0] tmp_34_reg_3661;
wire   [31:0] dst_l_1_fu_2221_p3;
wire    ap_CS_fsm_state105;
wire   [31:0] dst_r_1_fu_2264_p3;
reg   [31:0] dst_r_1_reg_3674;
wire   [1:0] trunc_ln228_fu_2286_p1;
reg   [1:0] trunc_ln228_reg_3682;
wire    ap_CS_fsm_state107;
wire   [31:0] x_assign_4_fu_2290_p6;
reg   [31:0] x_assign_4_reg_3686;
wire   [31:0] x_assign_fu_2304_p6;
reg   [31:0] x_assign_reg_3692;
wire   [30:0] trunc_ln368_fu_2318_p1;
reg   [30:0] trunc_ln368_reg_3698;
wire   [0:0] or_ln257_1_fu_2332_p2;
reg   [0:0] or_ln257_1_reg_3703;
wire   [31:0] thresh_1_fu_2345_p1;
reg   [31:0] thresh_1_reg_3709;
wire    ap_CS_fsm_state108;
wire   [31:0] absL_1_fu_2370_p1;
reg   [31:0] absL_1_reg_3717;
wire   [31:0] absR_1_fu_2394_p1;
reg   [31:0] absR_1_reg_3723;
wire   [0:0] or_ln257_fu_2421_p2;
reg   [0:0] or_ln257_reg_3729;
wire   [0:0] or_ln257_2_fu_2449_p2;
reg   [0:0] or_ln257_2_reg_3735;
wire   [31:0] monitorDstL_1_fu_2465_p3;
reg   [31:0] monitorDstL_1_reg_3741;
wire    ap_CS_fsm_state109;
wire   [31:0] monitorDstR_1_fu_2481_p3;
reg   [31:0] monitorDstR_1_reg_3747;
wire   [0:0] grp_fu_1282_p2;
reg   [0:0] tmp_18_reg_3753;
wire   [0:0] grp_fu_1287_p2;
reg   [0:0] tmp_20_reg_3758;
wire   [31:0] dst_l_fu_2504_p3;
wire    ap_CS_fsm_state110;
wire   [31:0] dst_r_fu_2528_p3;
reg   [31:0] dst_r_reg_3771;
wire    ap_CS_fsm_state113;
wire   [31:0] reg_V_fu_2588_p1;
reg   [31:0] reg_V_reg_3784;
reg   [0:0] p_Result_18_reg_3789;
wire   [22:0] trunc_ln270_fu_2618_p1;
reg   [22:0] trunc_ln270_reg_3794;
wire   [0:0] icmp_ln278_fu_2622_p2;
reg   [0:0] icmp_ln278_reg_3799;
wire  signed [8:0] sh_amt_fu_2628_p2;
reg  signed [8:0] sh_amt_reg_3806;
wire   [0:0] icmp_ln282_fu_2634_p2;
reg   [0:0] icmp_ln282_reg_3814;
wire   [23:0] tmp_2_fu_2640_p3;
reg   [23:0] tmp_2_reg_3820;
wire    ap_CS_fsm_state117;
wire   [0:0] icmp_ln285_fu_2655_p2;
reg   [0:0] icmp_ln285_reg_3826;
wire  signed [8:0] sh_amt_1_fu_2660_p2;
reg  signed [8:0] sh_amt_1_reg_3831;
wire   [0:0] and_ln284_fu_2687_p2;
reg   [0:0] and_ln284_reg_3836;
wire   [23:0] select_ln285_fu_2699_p3;
reg   [23:0] select_ln285_reg_3841;
wire   [0:0] and_ln295_fu_2719_p2;
reg   [0:0] and_ln295_reg_3846;
wire   [31:0] reg_V_1_fu_2725_p1;
reg   [31:0] reg_V_1_reg_3851;
reg   [0:0] p_Result_19_reg_3856;
wire   [22:0] trunc_ln270_1_fu_2755_p1;
reg   [22:0] trunc_ln270_1_reg_3861;
wire   [0:0] icmp_ln278_1_fu_2759_p2;
reg   [0:0] icmp_ln278_1_reg_3866;
wire  signed [8:0] sh_amt_2_fu_2765_p2;
reg  signed [8:0] sh_amt_2_reg_3873;
wire   [0:0] icmp_ln282_1_fu_2771_p2;
reg   [0:0] icmp_ln282_1_reg_3881;
wire   [23:0] select_ln282_fu_2845_p3;
reg   [23:0] select_ln282_reg_3887;
wire    ap_CS_fsm_state118;
wire   [23:0] tmp_s_fu_2852_p3;
reg   [23:0] tmp_s_reg_3893;
wire   [0:0] icmp_ln285_1_fu_2867_p2;
reg   [0:0] icmp_ln285_1_reg_3899;
wire  signed [8:0] sh_amt_3_fu_2872_p2;
reg  signed [8:0] sh_amt_3_reg_3904;
wire   [0:0] and_ln284_1_fu_2899_p2;
reg   [0:0] and_ln284_1_reg_3909;
wire   [23:0] select_ln285_2_fu_2911_p3;
reg   [23:0] select_ln285_2_reg_3914;
wire   [0:0] and_ln295_1_fu_2931_p2;
reg   [0:0] and_ln295_1_reg_3919;
wire   [30:0] ret_V_1_fu_2937_p2;
reg   [30:0] ret_V_1_reg_3924;
wire   [23:0] select_ln303_fu_2947_p3;
reg   [23:0] select_ln303_reg_3929;
wire   [23:0] select_ln282_1_fu_3021_p3;
reg   [23:0] select_ln282_1_reg_3934;
wire   [23:0] select_ln303_1_fu_3043_p3;
reg   [23:0] select_ln303_1_reg_3947;
wire   [1:0] stageIndex_V_1_fu_3063_p2;
reg   [1:0] stageIndex_V_1_reg_3955;
wire    ap_CS_fsm_state127;
wire    grp_effect_delay_fu_1218_ap_start;
wire    grp_effect_delay_fu_1218_ap_idle;
wire   [5:0] grp_effect_delay_fu_1218_config_r_address0;
wire    grp_effect_delay_fu_1218_config_r_ce0;
wire    grp_effect_delay_fu_1218_config_r_we0;
wire   [31:0] grp_effect_delay_fu_1218_config_r_d0;
wire    grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWVALID;
wire   [31:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWADDR;
wire   [0:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWID;
wire   [31:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWLEN;
wire   [2:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWSIZE;
wire   [1:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWBURST;
wire   [1:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWLOCK;
wire   [3:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWCACHE;
wire   [2:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWPROT;
wire   [3:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWQOS;
wire   [3:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWREGION;
wire   [0:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWUSER;
wire    grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WVALID;
wire   [31:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WDATA;
wire   [3:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WSTRB;
wire    grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WLAST;
wire   [0:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WID;
wire   [0:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WUSER;
wire    grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARVALID;
wire   [31:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARADDR;
wire   [0:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARID;
wire   [31:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARLEN;
wire   [2:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARSIZE;
wire   [1:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARBURST;
wire   [1:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARLOCK;
wire   [3:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARCACHE;
wire   [2:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARPROT;
wire   [3:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARQOS;
wire   [3:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARREGION;
wire   [0:0] grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARUSER;
wire    grp_effect_delay_fu_1218_m_axi_extMemPtr_V_RREADY;
wire    grp_effect_delay_fu_1218_m_axi_extMemPtr_V_BREADY;
wire   [31:0] grp_effect_delay_fu_1218_ap_return_0;
wire   [31:0] grp_effect_delay_fu_1218_ap_return_1;
reg   [31:0] ap_phi_mux_dstDatas_l_3_0_be_phi_fu_609_p40;
reg   [31:0] dstDatas_l_3_0_reg_481;
wire    ap_CS_fsm_state80;
reg   [31:0] ap_phi_mux_dstDatas_l_2_0_be_phi_fu_660_p40;
reg   [31:0] dstDatas_l_2_0_reg_493;
reg   [31:0] ap_phi_mux_dstDatas_l_1_0_be_phi_fu_711_p40;
reg   [31:0] dstDatas_l_1_0_reg_505;
reg   [31:0] ap_phi_mux_dstDatas_l_0_0_be_phi_fu_762_p40;
reg   [31:0] dstDatas_l_0_0_reg_517;
reg   [2:0] t_V_reg_529;
reg   [31:0] ap_phi_mux_dstDatas_l_3_4_phi_fu_544_p8;
reg   [31:0] ap_phi_mux_dstDatas_l_2_4_phi_fu_560_p8;
reg   [31:0] ap_phi_mux_dstDatas_l_1_4_phi_fu_576_p8;
reg   [31:0] ap_phi_mux_dstDatas_l_0_4_phi_fu_592_p8;
reg   [31:0] dstDatas_l_3_0_be_reg_605;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state112;
reg   [31:0] dstDatas_l_2_0_be_reg_656;
reg   [31:0] dstDatas_l_1_0_be_reg_707;
reg   [31:0] dstDatas_l_0_0_be_reg_758;
reg   [31:0] dstDatas_l_3_3_reg_809;
reg   [31:0] dstDatas_l_2_3_reg_830;
reg   [31:0] dstDatas_l_1_3_reg_851;
reg   [31:0] dstDatas_l_0_3_reg_872;
reg   [31:0] dstDatas_l_3_2_reg_893;
reg   [31:0] dstDatas_l_2_2_reg_914;
reg   [31:0] dstDatas_l_1_2_reg_935;
reg   [31:0] dstDatas_l_0_2_reg_956;
reg   [31:0] dstDatas_l_3_1_reg_977;
reg   [31:0] dstDatas_l_2_1_reg_998;
reg   [31:0] dstDatas_l_1_1_reg_1019;
reg   [31:0] dstDatas_l_0_1_reg_1040;
reg   [31:0] dstDatas_l_3_5_reg_1061;
reg   [31:0] dstDatas_l_2_5_reg_1082;
reg   [31:0] dstDatas_l_1_5_reg_1103;
reg   [31:0] dstDatas_l_0_5_reg_1124;
wire   [1:0] ap_phi_mux_t_V_1_phi_fu_1149_p4;
reg   [1:0] t_V_1_reg_1145;
wire    ap_CS_fsm_state128;
reg   [31:0] phi_ln257_reg_1157;
wire   [0:0] icmp_ln887_1_fu_3057_p2;
wire   [0:0] ap_phi_mux_readyRch_flag_1_phi_fu_1176_p6;
reg   [0:0] readyRch_flag_1_reg_1171;
wire    ap_CS_fsm_state129;
reg   [0:0] readyRch_new_1_reg_1186;
wire   [0:0] ap_phi_mux_readyLch_flag_1_phi_fu_1208_p6;
reg   [0:0] readyLch_flag_1_reg_1203;
reg    grp_effect_delay_fu_1218_ap_start_reg;
wire   [63:0] zext_ln225_fu_1553_p1;
wire   [63:0] tmp_5_fu_1563_p3;
wire   [63:0] tmp_7_fu_1577_p3;
wire   [63:0] tmp_3_fu_1591_p3;
wire   [63:0] tmp_8_fu_1605_p3;
wire   [63:0] tmp_10_fu_1619_p3;
wire   [63:0] tmp_15_fu_1633_p3;
wire   [63:0] tmp_17_fu_1647_p3;
wire   [63:0] tmp_19_fu_1661_p3;
wire   [63:0] tmp_21_fu_1675_p3;
wire   [63:0] tmp_22_fu_1689_p3;
wire   [63:0] tmp_23_fu_1703_p3;
wire   [63:0] tmp_24_fu_1717_p3;
wire   [63:0] tmp_25_fu_1731_p3;
wire   [63:0] tmp_26_fu_1745_p3;
wire   [63:0] tmp_30_fu_1759_p3;
wire   [63:0] zext_ln544_fu_1418_p1;
wire   [63:0] zext_ln544_1_fu_1474_p1;
wire   [63:0] zext_ln544_2_fu_3028_p1;
wire  signed [31:0] sext_ln214_fu_3049_p1;
wire  signed [31:0] sext_ln214_1_fu_3053_p1;
wire    ap_CS_fsm_state130;
reg   [1:0] monitorSrcL_1_state;
reg   [1:0] monitorSrcR_1_state;
reg   [1:0] monitorDstL_1_state;
reg   [1:0] monitorDstR_1_state;
reg   [1:0] counter_1_state;
reg   [1:0] numOfStage_1_state;
reg   [1:0] configSizePerStage_1_state;
reg    ap_block_state130;
wire   [31:0] select_ln258_1_fu_3098_p3;
reg   [31:0] dstDatas_3_r_fu_228;
wire   [31:0] dstDatas_0_r_5_fu_2551_p6;
reg   [31:0] dstDatas_3_r_1_fu_232;
reg   [31:0] dstDatas_3_r_2_fu_236;
reg   [31:0] dstDatas_3_r_3_fu_240;
wire    ap_CS_fsm_state62;
wire   [31:0] bitcast_ln705_2_fu_1882_p1;
wire    ap_CS_fsm_state63;
wire   [31:0] bitcast_ln705_3_fu_1886_p1;
wire   [31:0] bitcast_ln705_fu_1890_p1;
wire   [31:0] bitcast_ln705_1_fu_1895_p1;
wire    ap_CS_fsm_state92;
reg   [31:0] grp_fu_1230_p0;
reg   [31:0] grp_fu_1230_p1;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state98;
reg   [31:0] grp_fu_1234_p0;
reg   [31:0] grp_fu_1234_p1;
reg   [31:0] grp_fu_1238_p0;
reg   [31:0] grp_fu_1238_p1;
reg   [31:0] grp_fu_1244_p0;
reg   [31:0] grp_fu_1244_p1;
wire   [31:0] grp_fu_1248_p0;
wire   [31:0] grp_fu_1248_p1;
wire   [31:0] grp_fu_1252_p0;
wire   [31:0] grp_fu_1252_p1;
wire    ap_CS_fsm_state26;
wire  signed [31:0] grp_fu_1266_p0;
wire  signed [31:0] grp_fu_1269_p0;
reg   [31:0] grp_fu_1272_p0;
reg   [31:0] grp_fu_1272_p1;
wire    ap_CS_fsm_state103;
reg   [31:0] grp_fu_1276_p0;
reg   [31:0] grp_fu_1276_p1;
wire   [7:0] grp_fu_1324_p4;
wire   [0:0] or_ln193_fu_1441_p1;
wire   [0:0] xor_ln193_fu_1446_p0;
wire   [0:0] and_ln198_fu_1457_p0;
wire   [0:0] xor_ln198_fu_1451_p2;
wire   [0:0] or_ln193_fu_1441_p2;
wire   [0:0] and_ln198_fu_1457_p2;
wire   [0:0] xor_ln198_1_fu_1462_p2;
wire   [0:0] icmp_ln207_fu_1488_p2;
wire   [31:0] add_ln207_fu_1494_p2;
wire   [6:0] or_ln4_fu_1558_p2;
wire   [6:0] or_ln18_fu_1572_p2;
wire   [6:0] or_ln110_fu_1586_p2;
wire   [6:0] or_ln111_fu_1600_p2;
wire   [6:0] or_ln112_fu_1614_p2;
wire   [6:0] or_ln113_fu_1628_p2;
wire   [6:0] or_ln114_fu_1642_p2;
wire   [6:0] or_ln117_fu_1656_p2;
wire   [6:0] or_ln118_fu_1670_p2;
wire   [6:0] or_ln119_fu_1684_p2;
wire   [6:0] or_ln120_fu_1698_p2;
wire   [6:0] or_ln121_fu_1712_p2;
wire   [6:0] or_ln122_fu_1726_p2;
wire   [6:0] or_ln123_fu_1740_p2;
wire   [6:0] or_ln124_fu_1754_p2;
wire   [1:0] dstDatas_0_l_5_fu_1776_p5;
wire   [22:0] trunc_ln31_fu_2014_p1;
wire   [0:0] icmp_ln24_3_fu_2018_p2;
wire   [0:0] grp_fu_1334_p2;
wire   [31:0] p_Result_14_fu_2030_p3;
wire   [31:0] p_Val2_9_fu_2043_p1;
wire   [30:0] trunc_ln368_5_fu_2046_p1;
wire   [31:0] p_Result_16_fu_2054_p3;
wire   [31:0] p_Val2_10_fu_2067_p1;
wire   [30:0] trunc_ln368_6_fu_2070_p1;
wire   [31:0] p_Result_17_fu_2078_p3;
wire   [7:0] tmp_27_fu_2091_p4;
wire   [22:0] trunc_ln24_fu_2050_p1;
wire   [0:0] icmp_ln24_1_fu_2107_p2;
wire   [0:0] icmp_ln24_fu_2101_p2;
wire   [7:0] tmp_32_fu_2119_p4;
wire   [22:0] trunc_ln31_1_fu_2074_p1;
wire   [0:0] icmp_ln31_1_fu_2135_p2;
wire   [0:0] icmp_ln31_fu_2129_p2;
wire   [0:0] and_ln24_fu_2147_p2;
wire   [0:0] and_ln31_fu_2157_p2;
wire   [31:0] p_Result_15_fu_2171_p3;
wire   [31:0] bitcast_ln28_fu_2188_p1;
wire   [31:0] xor_ln28_fu_2192_p2;
wire   [0:0] and_ln28_fu_2184_p2;
wire   [0:0] xor_ln24_fu_2202_p2;
wire   [0:0] and_ln28_1_fu_2207_p2;
wire   [31:0] bitcast_ln28_1_fu_2198_p1;
wire   [31:0] select_ln28_fu_2213_p3;
wire   [31:0] bitcast_ln35_fu_2231_p1;
wire   [31:0] xor_ln35_fu_2235_p2;
wire   [0:0] and_ln35_fu_2227_p2;
wire   [0:0] xor_ln31_fu_2245_p2;
wire   [0:0] and_ln35_1_fu_2250_p2;
wire   [31:0] bitcast_ln35_1_fu_2241_p1;
wire   [31:0] select_ln35_fu_2256_p3;
wire   [22:0] trunc_ln257_fu_2322_p1;
wire   [0:0] icmp_ln257_3_fu_2326_p2;
wire   [31:0] p_Result_11_fu_2338_p3;
wire   [31:0] p_Val2_5_fu_2351_p1;
wire   [30:0] trunc_ln368_1_fu_2354_p1;
wire   [31:0] p_Result_12_fu_2362_p3;
wire   [31:0] p_Val2_6_fu_2375_p1;
wire   [30:0] trunc_ln368_2_fu_2378_p1;
wire   [31:0] p_Result_13_fu_2386_p3;
wire   [7:0] tmp_11_fu_2399_p4;
wire   [22:0] trunc_ln257_1_fu_2358_p1;
wire   [0:0] icmp_ln257_1_fu_2415_p2;
wire   [0:0] icmp_ln257_fu_2409_p2;
wire   [7:0] tmp_14_fu_2427_p4;
wire   [22:0] trunc_ln257_2_fu_2382_p1;
wire   [0:0] icmp_ln257_5_fu_2443_p2;
wire   [0:0] icmp_ln257_4_fu_2437_p2;
wire   [0:0] and_ln257_fu_2455_p2;
wire   [0:0] and_ln257_1_fu_2459_p2;
wire   [0:0] and_ln257_2_fu_2471_p2;
wire   [0:0] and_ln257_3_fu_2475_p2;
wire   [31:0] bitcast_ln11_fu_2491_p1;
wire   [31:0] xor_ln11_fu_2494_p2;
wire   [0:0] and_ln11_fu_2487_p2;
wire   [31:0] bitcast_ln11_1_fu_2500_p1;
wire   [31:0] bitcast_ln12_fu_2515_p1;
wire   [31:0] xor_ln12_fu_2518_p2;
wire   [0:0] and_ln12_fu_2511_p2;
wire   [31:0] bitcast_ln12_1_fu_2524_p1;
wire   [7:0] p_Result_s_fu_2604_p4;
wire   [30:0] trunc_ln262_fu_2592_p1;
wire   [8:0] exp_V_fu_2614_p1;
wire  signed [23:0] sext_ln281_fu_2647_p1;
wire   [0:0] or_ln282_fu_2677_p2;
wire   [0:0] icmp_ln284_fu_2650_p2;
wire   [0:0] xor_ln282_fu_2681_p2;
wire   [0:0] and_ln285_fu_2693_p2;
wire   [23:0] lshr_ln286_fu_2671_p2;
wire   [0:0] or_ln284_fu_2707_p2;
wire   [0:0] icmp_ln295_fu_2665_p2;
wire   [0:0] xor_ln284_fu_2713_p2;
wire   [7:0] p_Result_4_fu_2741_p4;
wire   [30:0] trunc_ln262_1_fu_2729_p1;
wire   [8:0] exp_V_1_fu_2751_p1;
wire   [0:0] tmp_6_fu_2780_p3;
wire  signed [31:0] sext_ln294_fu_2777_p1;
wire   [23:0] sext_ln294cast_fu_2795_p1;
wire   [23:0] shl_ln297_fu_2799_p2;
wire   [23:0] select_ln295_fu_2804_p3;
wire   [0:0] xor_ln285_fu_2817_p2;
wire   [0:0] and_ln285_1_fu_2822_p2;
wire   [23:0] select_ln288_fu_2787_p3;
wire   [23:0] select_ln278_fu_2810_p3;
wire   [0:0] xor_ln278_fu_2835_p2;
wire   [0:0] and_ln282_fu_2840_p2;
wire   [23:0] select_ln285_1_fu_2827_p3;
wire  signed [23:0] sext_ln281_1_fu_2859_p1;
wire   [0:0] or_ln282_1_fu_2889_p2;
wire   [0:0] icmp_ln284_1_fu_2862_p2;
wire   [0:0] xor_ln282_1_fu_2893_p2;
wire   [0:0] and_ln285_2_fu_2905_p2;
wire   [23:0] lshr_ln286_1_fu_2883_p2;
wire   [0:0] or_ln284_1_fu_2919_p2;
wire   [0:0] icmp_ln295_1_fu_2877_p2;
wire   [0:0] xor_ln284_1_fu_2925_p2;
wire   [23:0] sub_ln461_fu_2942_p2;
wire   [0:0] tmp_9_fu_2956_p3;
wire  signed [31:0] sext_ln294_1_fu_2953_p1;
wire   [23:0] sext_ln294_1cast_fu_2971_p1;
wire   [23:0] shl_ln297_1_fu_2975_p2;
wire   [23:0] select_ln295_1_fu_2980_p3;
wire   [0:0] xor_ln285_1_fu_2993_p2;
wire   [0:0] and_ln285_3_fu_2998_p2;
wire   [23:0] select_ln288_1_fu_2963_p3;
wire   [23:0] select_ln278_1_fu_2986_p3;
wire   [0:0] xor_ln278_1_fu_3011_p2;
wire   [0:0] and_ln282_1_fu_3016_p2;
wire   [23:0] select_ln285_3_fu_3003_p3;
wire   [23:0] sub_ln461_1_fu_3038_p2;
wire   [0:0] icmp_ln258_fu_3078_p2;
wire   [0:0] icmp_ln258_1_fu_3092_p2;
wire   [31:0] select_ln258_fu_3084_p3;
reg   [1:0] grp_fu_1230_opcode;
reg   [1:0] grp_fu_1234_opcode;
reg   [129:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 130'd1;
#0 lrclk_0_data_reg = 1'b0;
#0 lrclk_0_vld_reg = 1'b0;
#0 basePhysAddr_V_0_data_reg = 32'd0;
#0 basePhysAddr_V_0_vld_reg = 1'b0;
#0 monitorSrcL_1_data_reg = 32'd0;
#0 monitorSrcL_1_vld_reg = 1'b0;
#0 monitorSrcR_1_data_reg = 32'd0;
#0 monitorSrcR_1_vld_reg = 1'b0;
#0 monitorDstL_1_data_reg = 32'd0;
#0 monitorDstL_1_vld_reg = 1'b0;
#0 monitorDstR_1_data_reg = 32'd0;
#0 monitorDstR_1_vld_reg = 1'b0;
#0 counter_0_data_reg = 32'd0;
#0 counter_0_vld_reg = 1'b0;
#0 counter_1_data_reg = 32'd0;
#0 counter_1_vld_reg = 1'b0;
#0 numOfStage_1_data_reg = 32'd0;
#0 numOfStage_1_vld_reg = 1'b0;
#0 configSizePerStage_1_data_reg = 32'd0;
#0 configSizePerStage_1_vld_reg = 1'b0;
#0 readyRch = 1'd0;
#0 readyLch = 1'd0;
#0 srcDatas_l_0 = 32'd0;
#0 srcDatas_r_0 = 32'd0;
#0 srcDatas_l_1 = 32'd0;
#0 srcDatas_l_2 = 32'd0;
#0 srcDatas_l_3 = 32'd0;
#0 srcDatas_r_1 = 32'd0;
#0 srcDatas_r_2 = 32'd0;
#0 srcDatas_r_3 = 32'd0;
#0 grp_effect_delay_fu_1218_ap_start_reg = 1'b0;
end

pynq_dsp_hls_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
pynq_dsp_hls_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .basePhysAddr_V(basePhysAddr_V),
    .monitorSrcL(monitorSrcL_1_data_reg),
    .monitorSrcL_ap_vld(monitorSrcL_1_vld_reg),
    .monitorSrcR(monitorSrcR_1_data_reg),
    .monitorSrcR_ap_vld(monitorSrcR_1_vld_reg),
    .monitorDstL(monitorDstL_1_data_reg),
    .monitorDstL_ap_vld(monitorDstL_1_vld_reg),
    .monitorDstR(monitorDstR_1_data_reg),
    .monitorDstR_ap_vld(monitorDstR_1_vld_reg),
    .counter_o(counter_1_data_reg),
    .counter_o_ap_vld(counter_1_vld_reg),
    .counter_i(counter_i),
    .numOfStage(numOfStage_1_data_reg),
    .numOfStage_ap_vld(numOfStage_1_vld_reg),
    .configSizePerStage(configSizePerStage_1_data_reg),
    .configSizePerStage_ap_vld(configSizePerStage_1_vld_reg),
    .configReg_address0(configReg_address0),
    .configReg_ce0(configReg_ce0),
    .configReg_we0(configReg_we0),
    .configReg_d0(configReg_d0),
    .configReg_q0(configReg_q0)
);

pynq_dsp_hls_physMemPtr_V_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_PHYSMEMPTR_V_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_PHYSMEMPTR_V_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_PHYSMEMPTR_V_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_PHYSMEMPTR_V_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_PHYSMEMPTR_V_CACHE_VALUE ))
pynq_dsp_hls_physMemPtr_V_m_axi_U(
    .AWVALID(m_axi_physMemPtr_V_AWVALID),
    .AWREADY(m_axi_physMemPtr_V_AWREADY),
    .AWADDR(m_axi_physMemPtr_V_AWADDR),
    .AWID(m_axi_physMemPtr_V_AWID),
    .AWLEN(m_axi_physMemPtr_V_AWLEN),
    .AWSIZE(m_axi_physMemPtr_V_AWSIZE),
    .AWBURST(m_axi_physMemPtr_V_AWBURST),
    .AWLOCK(m_axi_physMemPtr_V_AWLOCK),
    .AWCACHE(m_axi_physMemPtr_V_AWCACHE),
    .AWPROT(m_axi_physMemPtr_V_AWPROT),
    .AWQOS(m_axi_physMemPtr_V_AWQOS),
    .AWREGION(m_axi_physMemPtr_V_AWREGION),
    .AWUSER(m_axi_physMemPtr_V_AWUSER),
    .WVALID(m_axi_physMemPtr_V_WVALID),
    .WREADY(m_axi_physMemPtr_V_WREADY),
    .WDATA(m_axi_physMemPtr_V_WDATA),
    .WSTRB(m_axi_physMemPtr_V_WSTRB),
    .WLAST(m_axi_physMemPtr_V_WLAST),
    .WID(m_axi_physMemPtr_V_WID),
    .WUSER(m_axi_physMemPtr_V_WUSER),
    .ARVALID(m_axi_physMemPtr_V_ARVALID),
    .ARREADY(m_axi_physMemPtr_V_ARREADY),
    .ARADDR(m_axi_physMemPtr_V_ARADDR),
    .ARID(m_axi_physMemPtr_V_ARID),
    .ARLEN(m_axi_physMemPtr_V_ARLEN),
    .ARSIZE(m_axi_physMemPtr_V_ARSIZE),
    .ARBURST(m_axi_physMemPtr_V_ARBURST),
    .ARLOCK(m_axi_physMemPtr_V_ARLOCK),
    .ARCACHE(m_axi_physMemPtr_V_ARCACHE),
    .ARPROT(m_axi_physMemPtr_V_ARPROT),
    .ARQOS(m_axi_physMemPtr_V_ARQOS),
    .ARREGION(m_axi_physMemPtr_V_ARREGION),
    .ARUSER(m_axi_physMemPtr_V_ARUSER),
    .RVALID(m_axi_physMemPtr_V_RVALID),
    .RREADY(m_axi_physMemPtr_V_RREADY),
    .RDATA(m_axi_physMemPtr_V_RDATA),
    .RLAST(m_axi_physMemPtr_V_RLAST),
    .RID(m_axi_physMemPtr_V_RID),
    .RUSER(m_axi_physMemPtr_V_RUSER),
    .RRESP(m_axi_physMemPtr_V_RRESP),
    .BVALID(m_axi_physMemPtr_V_BVALID),
    .BREADY(m_axi_physMemPtr_V_BREADY),
    .BRESP(m_axi_physMemPtr_V_BRESP),
    .BID(m_axi_physMemPtr_V_BID),
    .BUSER(m_axi_physMemPtr_V_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(physMemPtr_V_ARVALID),
    .I_ARREADY(physMemPtr_V_ARREADY),
    .I_ARADDR(physMemPtr_V_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(physMemPtr_V_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(physMemPtr_V_RVALID),
    .I_RREADY(physMemPtr_V_RREADY),
    .I_RDATA(physMemPtr_V_RDATA),
    .I_RID(physMemPtr_V_RID),
    .I_RUSER(physMemPtr_V_RUSER),
    .I_RRESP(physMemPtr_V_RRESP),
    .I_RLAST(physMemPtr_V_RLAST),
    .I_AWVALID(physMemPtr_V_AWVALID),
    .I_AWREADY(physMemPtr_V_AWREADY),
    .I_AWADDR(physMemPtr_V_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd2),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(physMemPtr_V_WVALID),
    .I_WREADY(physMemPtr_V_WREADY),
    .I_WDATA(physMemPtr_V_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(physMemPtr_V_BVALID),
    .I_BREADY(physMemPtr_V_BREADY),
    .I_BRESP(physMemPtr_V_BRESP),
    .I_BID(physMemPtr_V_BID),
    .I_BUSER(physMemPtr_V_BUSER)
);

pynq_dsp_hls_extMemPtr_V_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_EXTMEMPTR_V_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_EXTMEMPTR_V_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_EXTMEMPTR_V_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_EXTMEMPTR_V_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_EXTMEMPTR_V_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_EXTMEMPTR_V_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_EXTMEMPTR_V_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_EXTMEMPTR_V_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_EXTMEMPTR_V_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_EXTMEMPTR_V_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_EXTMEMPTR_V_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_EXTMEMPTR_V_CACHE_VALUE ))
pynq_dsp_hls_extMemPtr_V_m_axi_U(
    .AWVALID(m_axi_extMemPtr_V_AWVALID),
    .AWREADY(m_axi_extMemPtr_V_AWREADY),
    .AWADDR(m_axi_extMemPtr_V_AWADDR),
    .AWID(m_axi_extMemPtr_V_AWID),
    .AWLEN(m_axi_extMemPtr_V_AWLEN),
    .AWSIZE(m_axi_extMemPtr_V_AWSIZE),
    .AWBURST(m_axi_extMemPtr_V_AWBURST),
    .AWLOCK(m_axi_extMemPtr_V_AWLOCK),
    .AWCACHE(m_axi_extMemPtr_V_AWCACHE),
    .AWPROT(m_axi_extMemPtr_V_AWPROT),
    .AWQOS(m_axi_extMemPtr_V_AWQOS),
    .AWREGION(m_axi_extMemPtr_V_AWREGION),
    .AWUSER(m_axi_extMemPtr_V_AWUSER),
    .WVALID(m_axi_extMemPtr_V_WVALID),
    .WREADY(m_axi_extMemPtr_V_WREADY),
    .WDATA(m_axi_extMemPtr_V_WDATA),
    .WSTRB(m_axi_extMemPtr_V_WSTRB),
    .WLAST(m_axi_extMemPtr_V_WLAST),
    .WID(m_axi_extMemPtr_V_WID),
    .WUSER(m_axi_extMemPtr_V_WUSER),
    .ARVALID(m_axi_extMemPtr_V_ARVALID),
    .ARREADY(m_axi_extMemPtr_V_ARREADY),
    .ARADDR(m_axi_extMemPtr_V_ARADDR),
    .ARID(m_axi_extMemPtr_V_ARID),
    .ARLEN(m_axi_extMemPtr_V_ARLEN),
    .ARSIZE(m_axi_extMemPtr_V_ARSIZE),
    .ARBURST(m_axi_extMemPtr_V_ARBURST),
    .ARLOCK(m_axi_extMemPtr_V_ARLOCK),
    .ARCACHE(m_axi_extMemPtr_V_ARCACHE),
    .ARPROT(m_axi_extMemPtr_V_ARPROT),
    .ARQOS(m_axi_extMemPtr_V_ARQOS),
    .ARREGION(m_axi_extMemPtr_V_ARREGION),
    .ARUSER(m_axi_extMemPtr_V_ARUSER),
    .RVALID(m_axi_extMemPtr_V_RVALID),
    .RREADY(m_axi_extMemPtr_V_RREADY),
    .RDATA(m_axi_extMemPtr_V_RDATA),
    .RLAST(m_axi_extMemPtr_V_RLAST),
    .RID(m_axi_extMemPtr_V_RID),
    .RUSER(m_axi_extMemPtr_V_RUSER),
    .RRESP(m_axi_extMemPtr_V_RRESP),
    .BVALID(m_axi_extMemPtr_V_BVALID),
    .BREADY(m_axi_extMemPtr_V_BREADY),
    .BRESP(m_axi_extMemPtr_V_BRESP),
    .BID(m_axi_extMemPtr_V_BID),
    .BUSER(m_axi_extMemPtr_V_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(extMemPtr_V_ARVALID),
    .I_ARREADY(extMemPtr_V_ARREADY),
    .I_ARADDR(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARADDR),
    .I_ARID(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARID),
    .I_ARLEN(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARLEN),
    .I_ARSIZE(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARSIZE),
    .I_ARLOCK(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARLOCK),
    .I_ARCACHE(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARCACHE),
    .I_ARQOS(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARQOS),
    .I_ARPROT(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARPROT),
    .I_ARUSER(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARUSER),
    .I_ARBURST(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARBURST),
    .I_ARREGION(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARREGION),
    .I_RVALID(extMemPtr_V_RVALID),
    .I_RREADY(extMemPtr_V_RREADY),
    .I_RDATA(extMemPtr_V_RDATA),
    .I_RID(extMemPtr_V_RID),
    .I_RUSER(extMemPtr_V_RUSER),
    .I_RRESP(extMemPtr_V_RRESP),
    .I_RLAST(extMemPtr_V_RLAST),
    .I_AWVALID(extMemPtr_V_AWVALID),
    .I_AWREADY(extMemPtr_V_AWREADY),
    .I_AWADDR(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWADDR),
    .I_AWID(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWID),
    .I_AWLEN(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWLEN),
    .I_AWSIZE(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWSIZE),
    .I_AWLOCK(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWLOCK),
    .I_AWCACHE(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWCACHE),
    .I_AWQOS(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWQOS),
    .I_AWPROT(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWPROT),
    .I_AWUSER(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWUSER),
    .I_AWBURST(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWBURST),
    .I_AWREGION(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWREGION),
    .I_WVALID(extMemPtr_V_WVALID),
    .I_WREADY(extMemPtr_V_WREADY),
    .I_WDATA(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WDATA),
    .I_WID(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WID),
    .I_WUSER(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WUSER),
    .I_WLAST(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WLAST),
    .I_WSTRB(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WSTRB),
    .I_BVALID(extMemPtr_V_BVALID),
    .I_BREADY(extMemPtr_V_BREADY),
    .I_BRESP(extMemPtr_V_BRESP),
    .I_BID(extMemPtr_V_BID),
    .I_BUSER(extMemPtr_V_BUSER)
);

effect_delay grp_effect_delay_fu_1218(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_effect_delay_fu_1218_ap_start),
    .ap_done(grp_effect_delay_fu_1218_ap_done),
    .ap_idle(grp_effect_delay_fu_1218_ap_idle),
    .ap_ready(grp_effect_delay_fu_1218_ap_ready),
    .inData_l(tmp_35_reg_3544),
    .inData_r(tmp_36_reg_3549),
    .config_r_address0(grp_effect_delay_fu_1218_config_r_address0),
    .config_r_ce0(grp_effect_delay_fu_1218_config_r_ce0),
    .config_r_we0(grp_effect_delay_fu_1218_config_r_we0),
    .config_r_d0(grp_effect_delay_fu_1218_config_r_d0),
    .config_r_q0(configReg_q0),
    .config_offset(t_V_reg_529),
    .m_axi_extMemPtr_V_AWVALID(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWVALID),
    .m_axi_extMemPtr_V_AWREADY(extMemPtr_V_AWREADY),
    .m_axi_extMemPtr_V_AWADDR(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWADDR),
    .m_axi_extMemPtr_V_AWID(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWID),
    .m_axi_extMemPtr_V_AWLEN(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWLEN),
    .m_axi_extMemPtr_V_AWSIZE(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWSIZE),
    .m_axi_extMemPtr_V_AWBURST(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWBURST),
    .m_axi_extMemPtr_V_AWLOCK(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWLOCK),
    .m_axi_extMemPtr_V_AWCACHE(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWCACHE),
    .m_axi_extMemPtr_V_AWPROT(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWPROT),
    .m_axi_extMemPtr_V_AWQOS(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWQOS),
    .m_axi_extMemPtr_V_AWREGION(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWREGION),
    .m_axi_extMemPtr_V_AWUSER(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWUSER),
    .m_axi_extMemPtr_V_WVALID(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WVALID),
    .m_axi_extMemPtr_V_WREADY(extMemPtr_V_WREADY),
    .m_axi_extMemPtr_V_WDATA(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WDATA),
    .m_axi_extMemPtr_V_WSTRB(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WSTRB),
    .m_axi_extMemPtr_V_WLAST(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WLAST),
    .m_axi_extMemPtr_V_WID(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WID),
    .m_axi_extMemPtr_V_WUSER(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WUSER),
    .m_axi_extMemPtr_V_ARVALID(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARVALID),
    .m_axi_extMemPtr_V_ARREADY(extMemPtr_V_ARREADY),
    .m_axi_extMemPtr_V_ARADDR(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARADDR),
    .m_axi_extMemPtr_V_ARID(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARID),
    .m_axi_extMemPtr_V_ARLEN(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARLEN),
    .m_axi_extMemPtr_V_ARSIZE(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARSIZE),
    .m_axi_extMemPtr_V_ARBURST(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARBURST),
    .m_axi_extMemPtr_V_ARLOCK(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARLOCK),
    .m_axi_extMemPtr_V_ARCACHE(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARCACHE),
    .m_axi_extMemPtr_V_ARPROT(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARPROT),
    .m_axi_extMemPtr_V_ARQOS(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARQOS),
    .m_axi_extMemPtr_V_ARREGION(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARREGION),
    .m_axi_extMemPtr_V_ARUSER(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARUSER),
    .m_axi_extMemPtr_V_RVALID(extMemPtr_V_RVALID),
    .m_axi_extMemPtr_V_RREADY(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_RREADY),
    .m_axi_extMemPtr_V_RDATA(extMemPtr_V_RDATA),
    .m_axi_extMemPtr_V_RLAST(extMemPtr_V_RLAST),
    .m_axi_extMemPtr_V_RID(extMemPtr_V_RID),
    .m_axi_extMemPtr_V_RUSER(extMemPtr_V_RUSER),
    .m_axi_extMemPtr_V_RRESP(extMemPtr_V_RRESP),
    .m_axi_extMemPtr_V_BVALID(extMemPtr_V_BVALID),
    .m_axi_extMemPtr_V_BREADY(grp_effect_delay_fu_1218_m_axi_extMemPtr_V_BREADY),
    .m_axi_extMemPtr_V_BRESP(extMemPtr_V_BRESP),
    .m_axi_extMemPtr_V_BID(extMemPtr_V_BID),
    .m_axi_extMemPtr_V_BUSER(extMemPtr_V_BUSER),
    .ap_return_0(grp_effect_delay_fu_1218_ap_return_0),
    .ap_return_1(grp_effect_delay_fu_1218_ap_return_1)
);

pynq_dsp_hls_faddfYi #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_faddfYi_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1230_p0),
    .din1(grp_fu_1230_p1),
    .opcode(grp_fu_1230_opcode),
    .ce(1'b1),
    .dout(grp_fu_1230_p2)
);

pynq_dsp_hls_faddfYi #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_faddfYi_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1234_p0),
    .din1(grp_fu_1234_p1),
    .opcode(grp_fu_1234_opcode),
    .ce(1'b1),
    .dout(grp_fu_1234_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1238_p0),
    .din1(grp_fu_1238_p1),
    .ce(1'b1),
    .dout(grp_fu_1238_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1244_p0),
    .din1(grp_fu_1244_p1),
    .ce(1'b1),
    .dout(grp_fu_1244_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1248_p0),
    .din1(grp_fu_1248_p1),
    .ce(1'b1),
    .dout(grp_fu_1248_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1252_p0),
    .din1(grp_fu_1252_p1),
    .ce(1'b1),
    .dout(grp_fu_1252_p2)
);

pynq_dsp_hls_fdivg8j #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fdivg8j_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_reg_3270),
    .din1(32'd1258291198),
    .ce(1'b1),
    .dout(grp_fu_1256_p2)
);

pynq_dsp_hls_fdivg8j #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fdivg8j_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_1_reg_3275),
    .din1(32'd1258291198),
    .ce(1'b1),
    .dout(grp_fu_1261_p2)
);

pynq_dsp_hls_sitohbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_sitohbi_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1266_p0),
    .ce(1'b1),
    .dout(grp_fu_1266_p1)
);

pynq_dsp_hls_sitohbi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_sitohbi_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1269_p0),
    .ce(1'b1),
    .dout(grp_fu_1269_p1)
);

pynq_dsp_hls_fcmpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pynq_dsp_hls_fcmpeOg_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1272_p0),
    .din1(grp_fu_1272_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1272_p2)
);

pynq_dsp_hls_fcmpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pynq_dsp_hls_fcmpeOg_U32(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1276_p0),
    .din1(grp_fu_1276_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1276_p2)
);

pynq_dsp_hls_fcmpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pynq_dsp_hls_fcmpeOg_U33(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_assign_4_reg_3686),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1282_p2)
);

pynq_dsp_hls_fcmpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pynq_dsp_hls_fcmpeOg_U34(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(x_assign_reg_3692),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1287_p2)
);

pynq_dsp_hls_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_mux_ibs_U35(
    .din0(srcDatas_l_0),
    .din1(srcDatas_l_1),
    .din2(srcDatas_l_2),
    .din3(srcDatas_l_3),
    .din4(dstDatas_0_l_5_fu_1776_p5),
    .dout(dstDatas_0_l_5_fu_1776_p6)
);

pynq_dsp_hls_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_mux_ibs_U36(
    .din0(srcDatas_l_0),
    .din1(srcDatas_l_1),
    .din2(srcDatas_l_2),
    .din3(srcDatas_l_3),
    .din4(trunc_ln237_reg_3414),
    .dout(bz0L_fu_1794_p6)
);

pynq_dsp_hls_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_mux_ibs_U37(
    .din0(srcDatas_r_0),
    .din1(srcDatas_r_1),
    .din2(srcDatas_r_2),
    .din3(srcDatas_r_3),
    .din4(trunc_ln237_reg_3414),
    .dout(bz0R_fu_1807_p6)
);

pynq_dsp_hls_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_mux_ibs_U38(
    .din0(srcDatas_l_0),
    .din1(srcDatas_l_1),
    .din2(srcDatas_l_2),
    .din3(srcDatas_l_3),
    .din4(trunc_ln234_fu_1920_p1),
    .dout(tmp_35_fu_1924_p6)
);

pynq_dsp_hls_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_mux_ibs_U39(
    .din0(srcDatas_r_0),
    .din1(srcDatas_r_1),
    .din2(srcDatas_r_2),
    .din3(srcDatas_r_3),
    .din4(trunc_ln234_fu_1920_p1),
    .dout(tmp_36_fu_1939_p6)
);

pynq_dsp_hls_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_mux_ibs_U40(
    .din0(srcDatas_l_0),
    .din1(srcDatas_l_1),
    .din2(srcDatas_l_2),
    .din3(srcDatas_l_3),
    .din4(trunc_ln231_fu_1978_p1),
    .dout(x_assign_5_fu_1982_p6)
);

pynq_dsp_hls_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_mux_ibs_U41(
    .din0(srcDatas_r_0),
    .din1(srcDatas_r_1),
    .din2(srcDatas_r_2),
    .din3(srcDatas_r_3),
    .din4(trunc_ln231_fu_1978_p1),
    .dout(x_assign_6_fu_1996_p6)
);

pynq_dsp_hls_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_mux_ibs_U42(
    .din0(srcDatas_l_0),
    .din1(srcDatas_l_1),
    .din2(srcDatas_l_2),
    .din3(srcDatas_l_3),
    .din4(trunc_ln228_fu_2286_p1),
    .dout(x_assign_4_fu_2290_p6)
);

pynq_dsp_hls_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_mux_ibs_U43(
    .din0(srcDatas_r_0),
    .din1(srcDatas_r_1),
    .din2(srcDatas_r_2),
    .din3(srcDatas_r_3),
    .din4(trunc_ln228_fu_2286_p1),
    .dout(x_assign_fu_2304_p6)
);

pynq_dsp_hls_mux_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_mux_ibs_U44(
    .din0(srcDatas_r_0),
    .din1(srcDatas_r_1),
    .din2(srcDatas_r_2),
    .din3(srcDatas_r_3),
    .din4(trunc_ln241_reg_3401),
    .dout(dstDatas_0_r_5_fu_2551_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_effect_delay_fu_1218_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state81)) begin
            grp_effect_delay_fu_1218_ap_start_reg <= 1'b1;
        end else if ((grp_effect_delay_fu_1218_ap_ready == 1'b1)) begin
            grp_effect_delay_fu_1218_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (configSizePerStage_1_vld_reg == 1'b0) & (configSizePerStage_1_vld_in == 1'b1))) begin
        configSizePerStage_1_vld_reg <= 1'b1;
    end else if (((configSizePerStage_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (configSizePerStage_1_vld_reg == 1'b1))) begin
        configSizePerStage_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (counter_1_vld_reg == 1'b0) & (counter_1_vld_in == 1'b1))) begin
        counter_1_vld_reg <= 1'b1;
    end else if (((counter_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (counter_1_vld_reg == 1'b1))) begin
        counter_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd1))) begin
        dstDatas_3_r_1_fu_232 <= dstDatas_0_r_5_fu_2551_p6;
    end else if (((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd1))) begin
        dstDatas_3_r_1_fu_232 <= dst_r_reg_3771;
    end else if (((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd1))) begin
        dstDatas_3_r_1_fu_232 <= dst_r_1_reg_3674;
    end else if (((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd1))) begin
        dstDatas_3_r_1_fu_232 <= dstDatas_0_r_reg_3562;
    end else if (((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4))) begin
        dstDatas_3_r_1_fu_232 <= reg_1383;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd2))) begin
        dstDatas_3_r_2_fu_236 <= dstDatas_0_r_5_fu_2551_p6;
    end else if (((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd2))) begin
        dstDatas_3_r_2_fu_236 <= dst_r_reg_3771;
    end else if (((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd2))) begin
        dstDatas_3_r_2_fu_236 <= dst_r_1_reg_3674;
    end else if (((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd2))) begin
        dstDatas_3_r_2_fu_236 <= dstDatas_0_r_reg_3562;
    end else if (((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4))) begin
        dstDatas_3_r_2_fu_236 <= reg_1383;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd3))) begin
        dstDatas_3_r_3_fu_240 <= dstDatas_0_r_5_fu_2551_p6;
    end else if (((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd3))) begin
        dstDatas_3_r_3_fu_240 <= dst_r_reg_3771;
    end else if (((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd3))) begin
        dstDatas_3_r_3_fu_240 <= dst_r_1_reg_3674;
    end else if (((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd3))) begin
        dstDatas_3_r_3_fu_240 <= dstDatas_0_r_reg_3562;
    end else if (((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4))) begin
        dstDatas_3_r_3_fu_240 <= reg_1383;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd0))) begin
        dstDatas_3_r_fu_228 <= dstDatas_0_r_5_fu_2551_p6;
    end else if (((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd0))) begin
        dstDatas_3_r_fu_228 <= dst_r_reg_3771;
    end else if (((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd0))) begin
        dstDatas_3_r_fu_228 <= dst_r_1_reg_3674;
    end else if (((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd0))) begin
        dstDatas_3_r_fu_228 <= dstDatas_0_r_reg_3562;
    end else if (((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4))) begin
        dstDatas_3_r_fu_228 <= reg_1383;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd0)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd1)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd2)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd3)))) begin
        dstDatas_l_0_0_be_reg_758 <= dstDatas_l_0_5_reg_1124;
    end else if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4)))) begin
        dstDatas_l_0_0_be_reg_758 <= ap_phi_mux_dstDatas_l_0_4_phi_fu_592_p8;
    end else if ((((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd0)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd1)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd2)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd3)))) begin
        dstDatas_l_0_0_be_reg_758 <= dstDatas_l_0_3_reg_872;
    end else if ((((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd0)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd1)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd2)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd3)))) begin
        dstDatas_l_0_0_be_reg_758 <= dstDatas_l_0_2_reg_956;
    end else if ((((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd0)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd1)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd2)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd3)))) begin
        dstDatas_l_0_0_be_reg_758 <= dstDatas_l_0_1_reg_1040;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd0))) begin
        dstDatas_l_0_1_reg_1040 <= dst_l_fu_2504_p3;
    end else if ((((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd1)) | ((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd2)) | ((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd3)))) begin
        dstDatas_l_0_1_reg_1040 <= dstDatas_l_0_0_reg_517;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd0))) begin
        dstDatas_l_0_2_reg_956 <= dst_l_1_fu_2221_p3;
    end else if ((((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd1)) | ((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd2)) | ((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd3)))) begin
        dstDatas_l_0_2_reg_956 <= dstDatas_l_0_0_reg_517;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd0))) begin
        dstDatas_l_0_3_reg_872 <= grp_effect_delay_fu_1218_ap_return_0;
    end else if ((((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd1)) | ((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd2)) | ((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd3)))) begin
        dstDatas_l_0_3_reg_872 <= dstDatas_l_0_0_reg_517;
    end
end

always @ (posedge ap_clk) begin
    if ((~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd0))) begin
        dstDatas_l_0_5_reg_1124 <= dstDatas_0_l_5_fu_1776_p6;
    end else if (((~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd1)) | (~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd2)) | (~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd3)))) begin
        dstDatas_l_0_5_reg_1124 <= dstDatas_l_0_0_reg_517;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd0)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd1)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd2)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd3)))) begin
        dstDatas_l_1_0_be_reg_707 <= dstDatas_l_1_5_reg_1103;
    end else if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4)))) begin
        dstDatas_l_1_0_be_reg_707 <= ap_phi_mux_dstDatas_l_1_4_phi_fu_576_p8;
    end else if ((((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd0)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd1)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd2)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd3)))) begin
        dstDatas_l_1_0_be_reg_707 <= dstDatas_l_1_3_reg_851;
    end else if ((((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd0)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd1)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd2)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd3)))) begin
        dstDatas_l_1_0_be_reg_707 <= dstDatas_l_1_2_reg_935;
    end else if ((((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd0)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd1)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd2)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd3)))) begin
        dstDatas_l_1_0_be_reg_707 <= dstDatas_l_1_1_reg_1019;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd1))) begin
        dstDatas_l_1_1_reg_1019 <= dst_l_fu_2504_p3;
    end else if ((((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd0)) | ((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd2)) | ((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd3)))) begin
        dstDatas_l_1_1_reg_1019 <= dstDatas_l_1_0_reg_505;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd1))) begin
        dstDatas_l_1_2_reg_935 <= dst_l_1_fu_2221_p3;
    end else if ((((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd0)) | ((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd2)) | ((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd3)))) begin
        dstDatas_l_1_2_reg_935 <= dstDatas_l_1_0_reg_505;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd1))) begin
        dstDatas_l_1_3_reg_851 <= grp_effect_delay_fu_1218_ap_return_0;
    end else if ((((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd0)) | ((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd2)) | ((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd3)))) begin
        dstDatas_l_1_3_reg_851 <= dstDatas_l_1_0_reg_505;
    end
end

always @ (posedge ap_clk) begin
    if ((~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd1))) begin
        dstDatas_l_1_5_reg_1103 <= dstDatas_0_l_5_fu_1776_p6;
    end else if (((~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd0)) | (~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd2)) | (~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd3)))) begin
        dstDatas_l_1_5_reg_1103 <= dstDatas_l_1_0_reg_505;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd0)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd1)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd2)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd3)))) begin
        dstDatas_l_2_0_be_reg_656 <= dstDatas_l_2_5_reg_1082;
    end else if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4)))) begin
        dstDatas_l_2_0_be_reg_656 <= ap_phi_mux_dstDatas_l_2_4_phi_fu_560_p8;
    end else if ((((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd0)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd1)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd2)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd3)))) begin
        dstDatas_l_2_0_be_reg_656 <= dstDatas_l_2_3_reg_830;
    end else if ((((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd0)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd1)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd2)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd3)))) begin
        dstDatas_l_2_0_be_reg_656 <= dstDatas_l_2_2_reg_914;
    end else if ((((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd0)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd1)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd2)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd3)))) begin
        dstDatas_l_2_0_be_reg_656 <= dstDatas_l_2_1_reg_998;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd2))) begin
        dstDatas_l_2_1_reg_998 <= dst_l_fu_2504_p3;
    end else if ((((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd0)) | ((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd1)) | ((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd3)))) begin
        dstDatas_l_2_1_reg_998 <= dstDatas_l_2_0_reg_493;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd2))) begin
        dstDatas_l_2_2_reg_914 <= dst_l_1_fu_2221_p3;
    end else if ((((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd0)) | ((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd1)) | ((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd3)))) begin
        dstDatas_l_2_2_reg_914 <= dstDatas_l_2_0_reg_493;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd2))) begin
        dstDatas_l_2_3_reg_830 <= grp_effect_delay_fu_1218_ap_return_0;
    end else if ((((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd0)) | ((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd1)) | ((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd3)))) begin
        dstDatas_l_2_3_reg_830 <= dstDatas_l_2_0_reg_493;
    end
end

always @ (posedge ap_clk) begin
    if ((~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd2))) begin
        dstDatas_l_2_5_reg_1082 <= dstDatas_0_l_5_fu_1776_p6;
    end else if (((~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd0)) | (~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd1)) | (~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd3)))) begin
        dstDatas_l_2_5_reg_1082 <= dstDatas_l_2_0_reg_493;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd0)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd1)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd2)) | ((1'b1 == ap_CS_fsm_state112) & (trunc_ln241_reg_3401 == 2'd3)))) begin
        dstDatas_l_3_0_be_reg_605 <= dstDatas_l_3_5_reg_1061;
    end else if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4)))) begin
        dstDatas_l_3_0_be_reg_605 <= ap_phi_mux_dstDatas_l_3_4_phi_fu_544_p8;
    end else if ((((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd0)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd1)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd2)) | ((1'b1 == ap_CS_fsm_state83) & (trunc_ln234_reg_3540 == 2'd3)))) begin
        dstDatas_l_3_0_be_reg_605 <= dstDatas_l_3_3_reg_809;
    end else if ((((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd0)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd1)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd2)) | ((1'b1 == ap_CS_fsm_state106) & (trunc_ln231_reg_3570 == 2'd3)))) begin
        dstDatas_l_3_0_be_reg_605 <= dstDatas_l_3_2_reg_893;
    end else if ((((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd0)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd1)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd2)) | ((1'b1 == ap_CS_fsm_state111) & (trunc_ln228_reg_3682 == 2'd3)))) begin
        dstDatas_l_3_0_be_reg_605 <= dstDatas_l_3_1_reg_977;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd0)) | ((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd1)) | ((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd2)))) begin
        dstDatas_l_3_1_reg_977 <= dstDatas_l_3_0_reg_481;
    end else if (((1'b1 == ap_CS_fsm_state110) & (trunc_ln228_reg_3682 == 2'd3))) begin
        dstDatas_l_3_1_reg_977 <= dst_l_fu_2504_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd0)) | ((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd1)) | ((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd2)))) begin
        dstDatas_l_3_2_reg_893 <= dstDatas_l_3_0_reg_481;
    end else if (((1'b1 == ap_CS_fsm_state105) & (trunc_ln231_reg_3570 == 2'd3))) begin
        dstDatas_l_3_2_reg_893 <= dst_l_1_fu_2221_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd0)) | ((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd1)) | ((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd2)))) begin
        dstDatas_l_3_3_reg_809 <= dstDatas_l_3_0_reg_481;
    end else if (((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1) & (trunc_ln234_reg_3540 == 2'd3))) begin
        dstDatas_l_3_3_reg_809 <= grp_effect_delay_fu_1218_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd0)) | (~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd1)) | (~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd2)))) begin
        dstDatas_l_3_5_reg_1061 <= dstDatas_l_3_0_reg_481;
    end else if ((~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43) & (trunc_ln241_fu_1772_p1 == 2'd3))) begin
        dstDatas_l_3_5_reg_1061 <= dstDatas_0_l_5_fu_1776_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (monitorDstL_1_vld_reg == 1'b0) & (monitorDstL_1_vld_in == 1'b1))) begin
        monitorDstL_1_vld_reg <= 1'b1;
    end else if (((monitorDstL_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (monitorDstL_1_vld_reg == 1'b1))) begin
        monitorDstL_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (monitorDstR_1_vld_reg == 1'b0) & (monitorDstR_1_vld_in == 1'b1))) begin
        monitorDstR_1_vld_reg <= 1'b1;
    end else if (((monitorDstR_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (monitorDstR_1_vld_reg == 1'b1))) begin
        monitorDstR_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (monitorSrcL_1_vld_reg == 1'b0) & (monitorSrcL_1_vld_in == 1'b1))) begin
        monitorSrcL_1_vld_reg <= 1'b1;
    end else if (((monitorSrcL_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (monitorSrcL_1_vld_reg == 1'b1))) begin
        monitorSrcL_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (monitorSrcR_1_vld_reg == 1'b0) & (monitorSrcR_1_vld_in == 1'b1))) begin
        monitorSrcR_1_vld_reg <= 1'b1;
    end else if (((monitorSrcR_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (monitorSrcR_1_vld_reg == 1'b1))) begin
        monitorSrcR_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (numOfStage_1_vld_reg == 1'b0) & (numOfStage_1_vld_in == 1'b1))) begin
        numOfStage_1_vld_reg <= 1'b1;
    end else if (((numOfStage_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (numOfStage_1_vld_reg == 1'b1))) begin
        numOfStage_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_1_fu_3057_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state127))) begin
        if ((ap_phi_mux_t_V_1_phi_fu_1149_p4 == 2'd0)) begin
            phi_ln257_reg_1157 <= dstDatas_l_0_0_reg_517;
        end else if ((~(ap_phi_mux_t_V_1_phi_fu_1149_p4 == 2'd0) & ~(ap_phi_mux_t_V_1_phi_fu_1149_p4 == 2'd1))) begin
            phi_ln257_reg_1157 <= dstDatas_l_2_0_reg_493;
        end else if ((ap_phi_mux_t_V_1_phi_fu_1149_p4 == 2'd1)) begin
            phi_ln257_reg_1157 <= dstDatas_l_1_0_reg_505;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state11_io) & (or_ln198_fu_1468_p2 == 1'd1) & (icmp_ln761_fu_1428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        readyLch_flag_1_reg_1203 <= xor_ln193_fu_1446_p2;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        readyLch_flag_1_reg_1203 <= 1'd1;
    end else if (((1'b0 == ap_block_state11_io) & (icmp_ln761_fu_1428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        readyLch_flag_1_reg_1203 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state11_io) & (or_ln198_fu_1468_p2 == 1'd1) & (icmp_ln761_fu_1428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        readyRch_flag_1_reg_1171 <= lrclk_0_data_reg;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        readyRch_flag_1_reg_1171 <= 1'd1;
    end else if (((1'b0 == ap_block_state11_io) & (icmp_ln761_fu_1428_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        readyRch_flag_1_reg_1171 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state11_io) & (or_ln198_fu_1468_p2 == 1'd1) & (icmp_ln761_fu_1428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        readyRch_new_1_reg_1186 <= 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state129)) begin
        readyRch_new_1_reg_1186 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state128)) begin
        t_V_1_reg_1145 <= stageIndex_V_1_reg_3955;
    end else if (((physMemPtr_V_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state126))) begin
        t_V_1_reg_1145 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        t_V_reg_529 <= stageIndex_V_reg_3293;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        t_V_reg_529 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        absL_1_reg_3717[30 : 0] <= absL_1_fu_2370_p1[30 : 0];
        absR_1_reg_3723[30 : 0] <= absR_1_fu_2394_p1[30 : 0];
        or_ln257_2_reg_3735 <= or_ln257_2_fu_2449_p2;
        or_ln257_reg_3729 <= or_ln257_fu_2421_p2;
        thresh_1_reg_3709[30 : 0] <= thresh_1_fu_2345_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        absL_reg_3609[30 : 0] <= absL_fu_2062_p1[30 : 0];
        absR_reg_3615[30 : 0] <= absR_fu_2086_p1[30 : 0];
        or_ln24_reg_3621 <= or_ln24_fu_2113_p2;
        or_ln31_reg_3627 <= or_ln31_fu_2141_p2;
        thresh_reg_3599[30 : 0] <= thresh_fu_2037_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        and_ln24_1_reg_3633 <= and_ln24_1_fu_2151_p2;
        and_ln31_1_reg_3639 <= and_ln31_1_fu_2161_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        and_ln284_1_reg_3909 <= and_ln284_1_fu_2899_p2;
        icmp_ln285_1_reg_3899 <= icmp_ln285_1_fu_2867_p2;
        ret_V_1_reg_3924 <= ret_V_1_fu_2937_p2;
        select_ln282_reg_3887 <= select_ln282_fu_2845_p3;
        tmp_s_reg_3893[22 : 0] <= tmp_s_fu_2852_p3[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        and_ln284_reg_3836 <= and_ln284_fu_2687_p2;
        icmp_ln278_1_reg_3866 <= icmp_ln278_1_fu_2759_p2;
        icmp_ln282_1_reg_3881 <= icmp_ln282_1_fu_2771_p2;
        icmp_ln285_reg_3826 <= icmp_ln285_fu_2655_p2;
        p_Result_19_reg_3856 <= reg_V_1_fu_2725_p1[32'd31];
        reg_V_1_reg_3851 <= reg_V_1_fu_2725_p1;
        sh_amt_2_reg_3873 <= sh_amt_2_fu_2765_p2;
        tmp_2_reg_3820[22 : 0] <= tmp_2_fu_2640_p3[22 : 0];
        trunc_ln270_1_reg_3861 <= trunc_ln270_1_fu_2755_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln278_1_reg_3866 == 1'd0) & (1'b1 == ap_CS_fsm_state118))) begin
        and_ln295_1_reg_3919 <= and_ln295_1_fu_2931_p2;
        select_ln285_2_reg_3914 <= select_ln285_2_fu_2911_p3;
        sh_amt_3_reg_3904 <= sh_amt_3_fu_2872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln278_reg_3799 == 1'd0) & (1'b1 == ap_CS_fsm_state117))) begin
        and_ln295_reg_3846 <= and_ln295_fu_2719_p2;
        select_ln285_reg_3841 <= select_ln285_fu_2699_p3;
        sh_amt_1_reg_3831 <= sh_amt_1_fu_2660_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        b0_reg_3438 <= b0_fu_1820_p1;
        b1_reg_3443 <= b1_fu_1825_p1;
        bz0R_reg_3432 <= bz0R_fu_1807_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        b2_reg_3463 <= b2_fu_1839_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (basePhysAddr_V_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (basePhysAddr_V_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (basePhysAddr_V_0_vld_reg == 1'b1)))) begin
        basePhysAddr_V_0_data_reg <= basePhysAddr_V;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        bz0L_reg_3420 <= bz0L_fu_1794_p6;
        configReg_load_13_reg_3426 <= configReg_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        configReg_addr_10_reg_3377[5 : 4] <= tmp_24_fu_1717_p3[5 : 4];
        configReg_addr_11_reg_3382[5 : 4] <= tmp_25_fu_1731_p3[5 : 4];
        configReg_addr_12_reg_3387[5 : 4] <= tmp_26_fu_1745_p3[5 : 4];
        configReg_addr_13_reg_3392[5 : 4] <= tmp_30_fu_1759_p3[5 : 4];
        configReg_addr_15_reg_3327[5 : 4] <= tmp_7_fu_1577_p3[5 : 4];
        configReg_addr_1_reg_3332[5 : 4] <= tmp_3_fu_1591_p3[5 : 4];
        configReg_addr_2_reg_3337[5 : 4] <= tmp_8_fu_1605_p3[5 : 4];
        configReg_addr_4_reg_3347[5 : 4] <= tmp_15_fu_1633_p3[5 : 4];
        configReg_addr_5_reg_3352[5 : 4] <= tmp_17_fu_1647_p3[5 : 4];
        configReg_addr_6_reg_3357[5 : 4] <= tmp_19_fu_1661_p3[5 : 4];
        configReg_addr_7_reg_3362[5 : 4] <= tmp_21_fu_1675_p3[5 : 4];
        configReg_addr_8_reg_3367[5 : 4] <= tmp_22_fu_1689_p3[5 : 4];
        configReg_addr_9_reg_3372[5 : 4] <= tmp_23_fu_1703_p3[5 : 4];
        id_reg_3397 <= id_fu_1768_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        configReg_load_10_reg_3478 <= configReg_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        configReg_load_11_reg_3488 <= configReg_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        configReg_load_12_reg_3493 <= configReg_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        configReg_load_5_reg_3483 <= configReg_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (configSizePerStage_1_vld_reg == 1'b0) & (configSizePerStage_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (configSizePerStage_1_vld_in == 1'b1) & (configSizePerStage_1_vld_reg == 1'b1)))) begin
        configSizePerStage_1_data_reg[4] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (counter_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (counter_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (counter_0_vld_reg == 1'b1)))) begin
        counter_0_data_reg <= counter_i;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (counter_1_vld_reg == 1'b0) & (counter_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (counter_1_vld_in == 1'b1) & (counter_1_vld_reg == 1'b1)))) begin
        counter_1_data_reg <= select_ln207_fu_1500_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1))) begin
        dstDatas_0_r_reg_3562 <= grp_effect_delay_fu_1218_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        dstDatas_l_0_0_reg_517 <= ap_phi_mux_dstDatas_l_0_0_be_phi_fu_762_p40;
        dstDatas_l_1_0_reg_505 <= ap_phi_mux_dstDatas_l_1_0_be_phi_fu_711_p40;
        dstDatas_l_2_0_reg_493 <= ap_phi_mux_dstDatas_l_2_0_be_phi_fu_660_p40;
        dstDatas_l_3_0_reg_481 <= ap_phi_mux_dstDatas_l_3_0_be_phi_fu_609_p40;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state105)) begin
        dst_r_1_reg_3674 <= dst_r_1_fu_2264_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        dst_r_reg_3771 <= dst_r_fu_2528_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        floatSrcL_reg_3280 <= grp_fu_1256_p2;
        floatSrcR_reg_3285 <= grp_fu_1261_p2;
        srcDatas_l_0 <= grp_fu_1256_p2;
        srcDatas_r_0 <= grp_fu_1261_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        icmp_ln278_reg_3799 <= icmp_ln278_fu_2622_p2;
        icmp_ln282_reg_3814 <= icmp_ln282_fu_2634_p2;
        p_Result_18_reg_3789 <= reg_V_fu_2588_p1[32'd31];
        reg_V_reg_3784 <= reg_V_fu_2588_p1;
        sh_amt_reg_3806 <= sh_amt_fu_2628_p2;
        trunc_ln270_reg_3794 <= trunc_ln270_fu_2618_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (lrclk_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (lrclk_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (lrclk_0_vld_reg == 1'b1)))) begin
        lrclk_0_data_reg <= lrclk;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (monitorDstL_1_vld_reg == 1'b0) & (monitorDstL_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (monitorDstL_1_vld_in == 1'b1) & (monitorDstL_1_vld_reg == 1'b1)))) begin
        monitorDstL_1_data_reg <= reg_1349;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        monitorDstL_1_reg_3741[30 : 0] <= monitorDstL_1_fu_2465_p3[30 : 0];
        monitorDstR_1_reg_3747[30 : 0] <= monitorDstR_1_fu_2481_p3[30 : 0];
        tmp_18_reg_3753 <= grp_fu_1282_p2;
        tmp_20_reg_3758 <= grp_fu_1287_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (monitorDstR_1_vld_reg == 1'b0) & (monitorDstR_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (monitorDstR_1_vld_in == 1'b1) & (monitorDstR_1_vld_reg == 1'b1)))) begin
        monitorDstR_1_data_reg <= reg_1362;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (monitorSrcL_1_vld_reg == 1'b0) & (monitorSrcL_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (monitorSrcL_1_vld_in == 1'b1) & (monitorSrcL_1_vld_reg == 1'b1)))) begin
        monitorSrcL_1_data_reg <= floatSrcL_reg_3280;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (monitorSrcR_1_vld_reg == 1'b0) & (monitorSrcR_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (monitorSrcR_1_vld_in == 1'b1) & (monitorSrcR_1_vld_reg == 1'b1)))) begin
        monitorSrcR_1_data_reg <= floatSrcR_reg_3285;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (numOfStage_1_vld_reg == 1'b0) & (numOfStage_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (numOfStage_1_vld_in == 1'b1) & (numOfStage_1_vld_reg == 1'b1)))) begin
        numOfStage_1_data_reg[2] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        or_ln24_1_reg_3593 <= or_ln24_1_fu_2024_p2;
        trunc_ln231_reg_3570 <= trunc_ln231_fu_1978_p1;
        trunc_ln368_3_reg_3588 <= trunc_ln368_3_fu_2010_p1;
        x_assign_5_reg_3574 <= x_assign_5_fu_1982_p6;
        x_assign_6_reg_3581 <= x_assign_6_fu_1996_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        or_ln257_1_reg_3703 <= or_ln257_1_fu_2332_p2;
        trunc_ln228_reg_3682 <= trunc_ln228_fu_2286_p1;
        trunc_ln368_reg_3698 <= trunc_ln368_fu_2318_p1;
        x_assign_4_reg_3686 <= x_assign_4_fu_2290_p6;
        x_assign_reg_3692 <= x_assign_fu_2304_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        r_V_reg_3162 <= {{basePhysAddr_V_0_data_reg[31:2]}};
        ret_V_reg_3172 <= ret_V_fu_1412_p2;
        zext_ln215_reg_3167[29 : 0] <= zext_ln215_fu_1408_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((configSizePerStage_1_state == 2'd1) | (numOfStage_1_state == 2'd1) | (counter_1_state == 2'd1) | (monitorDstR_1_state == 2'd1) | (monitorDstL_1_state == 2'd1) | (monitorSrcR_1_state == 2'd1) | (monitorSrcL_1_state == 2'd1) | ((1'b1 == 1'b0) & (configSizePerStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (numOfStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (counter_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstL_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcL_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state130) & (ap_phi_mux_readyLch_flag_1_phi_fu_1208_p6 == 1'd1))) begin
        readyLch <= readyRch_new_1_reg_1186;
    end
end

always @ (posedge ap_clk) begin
    if ((~((configSizePerStage_1_state == 2'd1) | (numOfStage_1_state == 2'd1) | (counter_1_state == 2'd1) | (monitorDstR_1_state == 2'd1) | (monitorDstL_1_state == 2'd1) | (monitorSrcR_1_state == 2'd1) | (monitorSrcL_1_state == 2'd1) | ((1'b1 == 1'b0) & (configSizePerStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (numOfStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (counter_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstL_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcL_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state130) & (ap_phi_mux_readyRch_flag_1_phi_fu_1176_p6 == 1'd1))) begin
        readyRch <= readyRch_new_1_reg_1186;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state44))) begin
        reg_1340 <= configReg_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state45))) begin
        reg_1345 <= configReg_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state50) | ((1'd0 == and_ln24_1_reg_3633) & (1'b1 == ap_CS_fsm_state97)))) begin
        reg_1349 <= grp_fu_1238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state50) | ((1'd0 == and_ln31_1_reg_3639) & (1'b1 == ap_CS_fsm_state97)))) begin
        reg_1356 <= grp_fu_1244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state51))) begin
        reg_1362 <= grp_fu_1238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state53))) begin
        reg_1369 <= configReg_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state57))) begin
        reg_1374 <= grp_fu_1230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_1383 <= grp_fu_1230_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln24_1_reg_3633) & (1'b1 == ap_CS_fsm_state104)) | ((1'd0 == and_ln24_1_reg_3633) & (1'b1 == ap_CS_fsm_state93)))) begin
        reg_1388 <= grp_fu_1230_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln31_1_reg_3639) & (1'b1 == ap_CS_fsm_state104)) | ((1'd0 == and_ln31_1_reg_3639) & (1'b1 == ap_CS_fsm_state93)))) begin
        reg_1393 <= grp_fu_1234_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state119))) begin
        select_ln282_1_reg_3934 <= select_ln282_1_fu_3021_p3;
        select_ln303_reg_3929 <= select_ln303_fu_2947_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state120))) begin
        select_ln303_1_reg_3947 <= select_ln303_1_fu_3043_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state128) & (t_V_1_reg_1145 == 2'd0))) begin
        srcDatas_l_1 <= phi_ln257_reg_1157;
        srcDatas_r_1 <= select_ln258_1_fu_3098_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state128) & (t_V_1_reg_1145 == 2'd1))) begin
        srcDatas_l_2 <= phi_ln257_reg_1157;
        srcDatas_r_2 <= select_ln258_1_fu_3098_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(t_V_1_reg_1145 == 2'd1) & ~(t_V_1_reg_1145 == 2'd0) & (1'b1 == ap_CS_fsm_state128))) begin
        srcDatas_l_3 <= phi_ln257_reg_1157;
        srcDatas_r_3 <= select_ln258_1_fu_3098_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        srcL_V_reg_3245 <= srcL_V_fu_1484_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        srcR_V_reg_3255 <= srcR_V_fu_1509_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state127)) begin
        stageIndex_V_1_reg_3955 <= stageIndex_V_1_fu_3063_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        stageIndex_V_reg_3293 <= stageIndex_V_fu_1539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        status_V_reg_3183 <= physMemPtr_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        tmp_12_i_reg_3530 <= grp_fu_1248_p2;
        tmp_14_i_reg_3535 <= grp_fu_1252_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_1_reg_3275 <= grp_fu_1269_p1;
        tmp_reg_3270 <= grp_fu_1266_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        tmp_2_i_reg_3458 <= grp_fu_1244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln24_1_reg_3633) & (1'b1 == ap_CS_fsm_state104))) begin
        tmp_31_reg_3656 <= grp_fu_1272_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln31_1_reg_3639) & (1'b1 == ap_CS_fsm_state104))) begin
        tmp_34_reg_3661 <= grp_fu_1276_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        tmp_35_reg_3544 <= tmp_35_fu_1924_p6;
        tmp_36_reg_3549 <= tmp_36_fu_1939_p6;
        trunc_ln234_reg_3540 <= trunc_ln234_fu_1920_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_1533_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        tmp_4_reg_3298[6 : 4] <= tmp_4_fu_1545_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        trunc_ln237_reg_3414 <= trunc_ln237_fu_1790_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        trunc_ln241_reg_3401 <= trunc_ln241_fu_1772_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        trunc_ln368_4_reg_3645 <= trunc_ln368_4_fu_2167_p1;
    end
end

always @ (*) begin
    if ((~((configSizePerStage_1_state == 2'd1) | (numOfStage_1_state == 2'd1) | (counter_1_state == 2'd1) | (monitorDstR_1_state == 2'd1) | (monitorDstL_1_state == 2'd1) | (monitorSrcR_1_state == 2'd1) | (monitorSrcL_1_state == 2'd1) | ((1'b1 == 1'b0) & (configSizePerStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (numOfStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (counter_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstL_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcL_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state130))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4)))) begin
        ap_phi_mux_dstDatas_l_0_0_be_phi_fu_762_p40 = ap_phi_mux_dstDatas_l_0_4_phi_fu_592_p8;
    end else begin
        ap_phi_mux_dstDatas_l_0_0_be_phi_fu_762_p40 = dstDatas_l_0_0_be_reg_758;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4))) begin
        ap_phi_mux_dstDatas_l_0_4_phi_fu_592_p8 = reg_1374;
    end else if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4)))) begin
        ap_phi_mux_dstDatas_l_0_4_phi_fu_592_p8 = dstDatas_l_0_0_reg_517;
    end else begin
        ap_phi_mux_dstDatas_l_0_4_phi_fu_592_p8 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4)))) begin
        ap_phi_mux_dstDatas_l_1_0_be_phi_fu_711_p40 = ap_phi_mux_dstDatas_l_1_4_phi_fu_576_p8;
    end else begin
        ap_phi_mux_dstDatas_l_1_0_be_phi_fu_711_p40 = dstDatas_l_1_0_be_reg_707;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4))) begin
        ap_phi_mux_dstDatas_l_1_4_phi_fu_576_p8 = reg_1374;
    end else if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4)))) begin
        ap_phi_mux_dstDatas_l_1_4_phi_fu_576_p8 = dstDatas_l_1_0_reg_505;
    end else begin
        ap_phi_mux_dstDatas_l_1_4_phi_fu_576_p8 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4)))) begin
        ap_phi_mux_dstDatas_l_2_0_be_phi_fu_660_p40 = ap_phi_mux_dstDatas_l_2_4_phi_fu_560_p8;
    end else begin
        ap_phi_mux_dstDatas_l_2_0_be_phi_fu_660_p40 = dstDatas_l_2_0_be_reg_656;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4))) begin
        ap_phi_mux_dstDatas_l_2_4_phi_fu_560_p8 = reg_1374;
    end else if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4)))) begin
        ap_phi_mux_dstDatas_l_2_4_phi_fu_560_p8 = dstDatas_l_2_0_reg_493;
    end else begin
        ap_phi_mux_dstDatas_l_2_4_phi_fu_560_p8 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4)))) begin
        ap_phi_mux_dstDatas_l_3_0_be_phi_fu_609_p40 = ap_phi_mux_dstDatas_l_3_4_phi_fu_544_p8;
    end else begin
        ap_phi_mux_dstDatas_l_3_0_be_phi_fu_609_p40 = dstDatas_l_3_0_be_reg_605;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd0) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd1) & (id_reg_3397 == 3'd4)) | ((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd2) & (id_reg_3397 == 3'd4)))) begin
        ap_phi_mux_dstDatas_l_3_4_phi_fu_544_p8 = dstDatas_l_3_0_reg_481;
    end else if (((1'b1 == ap_CS_fsm_state80) & (trunc_ln237_reg_3414 == 2'd3) & (id_reg_3397 == 3'd4))) begin
        ap_phi_mux_dstDatas_l_3_4_phi_fu_544_p8 = reg_1374;
    end else begin
        ap_phi_mux_dstDatas_l_3_4_phi_fu_544_p8 = 'bx;
    end
end

always @ (*) begin
    if ((~((configSizePerStage_1_state == 2'd1) | (numOfStage_1_state == 2'd1) | (counter_1_state == 2'd1) | (monitorDstR_1_state == 2'd1) | (monitorDstL_1_state == 2'd1) | (monitorSrcR_1_state == 2'd1) | (monitorSrcL_1_state == 2'd1) | ((1'b1 == 1'b0) & (configSizePerStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (numOfStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (counter_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstL_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcL_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state130))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((configSizePerStage_1_state == 2'd1) | (numOfStage_1_state == 2'd1) | (counter_1_state == 2'd1) | (monitorDstR_1_state == 2'd1) | (monitorDstL_1_state == 2'd1) | (monitorSrcR_1_state == 2'd1) | (monitorSrcL_1_state == 2'd1) | ((1'b1 == 1'b0) & (configSizePerStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (numOfStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (counter_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstL_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcL_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state130)))) begin
        basePhysAddr_V_0_ack_out = 1'b1;
    end else begin
        basePhysAddr_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        configReg_address0 = configReg_addr_15_reg_3327;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state59))) begin
        configReg_address0 = configReg_addr_9_reg_3372;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state60))) begin
        configReg_address0 = configReg_addr_8_reg_3367;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        configReg_address0 = configReg_addr_2_reg_3337;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state80))) begin
        configReg_address0 = configReg_addr_7_reg_3362;
    end else if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state55))) begin
        configReg_address0 = configReg_addr_6_reg_3357;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        configReg_address0 = configReg_addr_1_reg_3332;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state53))) begin
        configReg_address0 = configReg_addr_13_reg_3392;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state52))) begin
        configReg_address0 = configReg_addr_12_reg_3387;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        configReg_address0 = configReg_addr_5_reg_3352;
    end else if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state46))) begin
        configReg_address0 = configReg_addr_11_reg_3382;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state62))) begin
        configReg_address0 = configReg_addr_10_reg_3377;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        configReg_address0 = configReg_addr_4_reg_3347;
    end else if ((((1'b1 == ap_CS_fsm_state43) & (id_fu_1768_p1 == 3'd2)) | ((1'b1 == ap_CS_fsm_state43) & (id_fu_1768_p1 == 3'd1)))) begin
        configReg_address0 = tmp_5_fu_1563_p3;
    end else if (((1'b1 == ap_CS_fsm_state43) & (id_fu_1768_p1 == 3'd4))) begin
        configReg_address0 = tmp_10_fu_1619_p3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        configReg_address0 = zext_ln225_fu_1553_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        configReg_address0 = grp_effect_delay_fu_1218_config_r_address0;
    end else begin
        configReg_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state42) | ((1'b1 == ap_CS_fsm_state43) & (id_fu_1768_p1 == 3'd4)) | ((1'b1 == ap_CS_fsm_state43) & (id_fu_1768_p1 == 3'd2)) | ((1'b1 == ap_CS_fsm_state43) & (id_fu_1768_p1 == 3'd1)))) begin
        configReg_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        configReg_ce0 = grp_effect_delay_fu_1218_config_r_ce0;
    end else begin
        configReg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        configReg_d0 = bitcast_ln705_1_fu_1895_p1;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        configReg_d0 = bitcast_ln705_fu_1890_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        configReg_d0 = reg_1340;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        configReg_d0 = configReg_load_13_reg_3426;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        configReg_d0 = bitcast_ln705_3_fu_1886_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        configReg_d0 = bitcast_ln705_2_fu_1882_p1;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60))) begin
        configReg_d0 = reg_1369;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        configReg_d0 = grp_effect_delay_fu_1218_config_r_d0;
    end else begin
        configReg_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state80) & (id_reg_3397 == 3'd4)))) begin
        configReg_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        configReg_we0 = grp_effect_delay_fu_1218_config_r_we0;
    end else begin
        configReg_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        configSizePerStage_1_vld_in = 1'b1;
    end else begin
        configSizePerStage_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | (~((configSizePerStage_1_state == 2'd1) | (numOfStage_1_state == 2'd1) | (counter_1_state == 2'd1) | (monitorDstR_1_state == 2'd1) | (monitorDstL_1_state == 2'd1) | (monitorSrcR_1_state == 2'd1) | (monitorSrcL_1_state == 2'd1) | ((1'b1 == 1'b0) & (configSizePerStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (numOfStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (counter_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstL_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcL_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state130)))) begin
        counter_0_ack_out = 1'b1;
    end else begin
        counter_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        counter_1_vld_in = 1'b1;
    end else begin
        counter_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81))) begin
        extMemPtr_V_ARVALID = grp_effect_delay_fu_1218_m_axi_extMemPtr_V_ARVALID;
    end else begin
        extMemPtr_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81))) begin
        extMemPtr_V_AWVALID = grp_effect_delay_fu_1218_m_axi_extMemPtr_V_AWVALID;
    end else begin
        extMemPtr_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81))) begin
        extMemPtr_V_BREADY = grp_effect_delay_fu_1218_m_axi_extMemPtr_V_BREADY;
    end else begin
        extMemPtr_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81))) begin
        extMemPtr_V_RREADY = grp_effect_delay_fu_1218_m_axi_extMemPtr_V_RREADY;
    end else begin
        extMemPtr_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state81))) begin
        extMemPtr_V_WVALID = grp_effect_delay_fu_1218_m_axi_extMemPtr_V_WVALID;
    end else begin
        extMemPtr_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln24_1_reg_3633) & (1'b1 == ap_CS_fsm_state87))) begin
        grp_fu_1230_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state59) | ((1'd0 == and_ln24_1_reg_3633) & (1'b1 == ap_CS_fsm_state98)))) begin
        grp_fu_1230_opcode = 2'd0;
    end else begin
        grp_fu_1230_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_1230_p0 = thresh_reg_3599;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_1230_p0 = absL_reg_3609;
    end else if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_1230_p0 = reg_1383;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state58))) begin
        grp_fu_1230_p0 = reg_1374;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_1230_p0 = reg_1362;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_1230_p0 = reg_1349;
    end else begin
        grp_fu_1230_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_1230_p1 = thresh_reg_3599;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_fu_1230_p1 = tmp_14_i_reg_3535;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_1230_p1 = tmp_12_i_reg_3530;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_1230_p1 = reg_1362;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state98))) begin
        grp_fu_1230_p1 = reg_1349;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_1230_p1 = tmp_2_i_reg_3458;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_fu_1230_p1 = reg_1356;
    end else begin
        grp_fu_1230_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln31_1_reg_3639)) begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            grp_fu_1234_opcode = 2'd1;
        end else if ((1'b1 == ap_CS_fsm_state98)) begin
            grp_fu_1234_opcode = 2'd0;
        end else begin
            grp_fu_1234_opcode = 'bx;
        end
    end else begin
        grp_fu_1234_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_1234_p0 = thresh_reg_3599;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_1234_p0 = absR_reg_3615;
    end else begin
        grp_fu_1234_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_1234_p1 = reg_1356;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_1234_p1 = thresh_reg_3599;
    end else begin
        grp_fu_1234_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        grp_fu_1238_p0 = dstDatas_3_r_3_fu_240;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        grp_fu_1238_p0 = reg_1388;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_1238_p0 = az1L_fu_1865_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_1238_p0 = bz2R_fu_1849_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_1238_p0 = bz2L_fu_1844_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1238_p0 = b0_reg_3438;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1238_p0 = b0_fu_1820_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_1238_p0 = dstDatas_l_3_0_reg_481;
    end else begin
        grp_fu_1238_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        grp_fu_1238_p1 = ratio_fu_2178_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_1238_p1 = a1_fu_1854_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_1238_p1 = b2_reg_3463;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_1238_p1 = b2_fu_1839_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1238_p1 = bz0R_reg_3432;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1238_p1 = bz0L_reg_3420;
    end else if (((1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_1238_p1 = 32'd1258291198;
    end else begin
        grp_fu_1238_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        grp_fu_1244_p0 = reg_1393;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_1244_p0 = az2L_fu_1874_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1244_p0 = bz1R_fu_1834_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1244_p0 = bz1L_fu_1830_p1;
    end else begin
        grp_fu_1244_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        grp_fu_1244_p1 = ratio_fu_2178_p1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_1244_p1 = a2_fu_1860_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1244_p1 = b1_reg_3443;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1244_p1 = b1_fu_1825_p1;
    end else begin
        grp_fu_1244_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        grp_fu_1272_p0 = absL_1_fu_2370_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_fu_1272_p0 = x_assign_5_reg_3574;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_1272_p0 = absL_fu_2062_p1;
    end else begin
        grp_fu_1272_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        grp_fu_1272_p1 = thresh_1_fu_2345_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_fu_1272_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_1272_p1 = thresh_fu_2037_p1;
    end else begin
        grp_fu_1272_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        grp_fu_1276_p0 = absR_1_fu_2394_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_fu_1276_p0 = x_assign_6_reg_3581;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_1276_p0 = absR_fu_2086_p1;
    end else begin
        grp_fu_1276_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        grp_fu_1276_p1 = thresh_1_fu_2345_p1;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_fu_1276_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        grp_fu_1276_p1 = thresh_fu_2037_p1;
    end else begin
        grp_fu_1276_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((configSizePerStage_1_state == 2'd1) | (numOfStage_1_state == 2'd1) | (counter_1_state == 2'd1) | (monitorDstR_1_state == 2'd1) | (monitorDstL_1_state == 2'd1) | (monitorSrcR_1_state == 2'd1) | (monitorSrcL_1_state == 2'd1) | ((1'b1 == 1'b0) & (configSizePerStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (numOfStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (counter_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstL_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcL_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state130)))) begin
        lrclk_0_ack_out = 1'b1;
    end else begin
        lrclk_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state127) & (icmp_ln887_1_fu_3057_p2 == 1'd1))) begin
        monitorDstL_1_vld_in = 1'b1;
    end else begin
        monitorDstL_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state127) & (icmp_ln887_1_fu_3057_p2 == 1'd1))) begin
        monitorDstR_1_vld_in = 1'b1;
    end else begin
        monitorDstR_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state127) & (icmp_ln887_1_fu_3057_p2 == 1'd1))) begin
        monitorSrcL_1_vld_in = 1'b1;
    end else begin
        monitorSrcL_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state127) & (icmp_ln887_1_fu_3057_p2 == 1'd1))) begin
        monitorSrcR_1_vld_in = 1'b1;
    end else begin
        monitorSrcR_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        numOfStage_1_vld_in = 1'b1;
    end else begin
        numOfStage_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11) & (ap_predicate_op196_readreq_state11 == 1'b1))) begin
        physMemPtr_V_ARADDR = zext_ln544_1_fu_1474_p1;
    end else if (((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        physMemPtr_V_ARADDR = zext_ln544_fu_1418_p1;
    end else begin
        physMemPtr_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11) & (ap_predicate_op196_readreq_state11 == 1'b1))) begin
        physMemPtr_V_ARLEN = 32'd2;
    end else if (((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        physMemPtr_V_ARLEN = 32'd1;
    end else begin
        physMemPtr_V_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11) & (ap_predicate_op196_readreq_state11 == 1'b1)) | ((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        physMemPtr_V_ARVALID = 1'b1;
    end else begin
        physMemPtr_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((physMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state119))) begin
        physMemPtr_V_AWVALID = 1'b1;
    end else begin
        physMemPtr_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((physMemPtr_V_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state126))) begin
        physMemPtr_V_BREADY = 1'b1;
    end else begin
        physMemPtr_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        physMemPtr_V_RREADY = 1'b1;
    end else begin
        physMemPtr_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state121)) begin
        physMemPtr_V_WDATA = sext_ln214_1_fu_3053_p1;
    end else if ((1'b1 == ap_CS_fsm_state120)) begin
        physMemPtr_V_WDATA = sext_ln214_fu_3049_p1;
    end else begin
        physMemPtr_V_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state121)) | ((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state120)))) begin
        physMemPtr_V_WVALID = 1'b1;
    end else begin
        physMemPtr_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((or_ln198_fu_1468_p2 == 1'd0) & (icmp_ln761_fu_1428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        physMemPtr_V_blk_n_AR = m_axi_physMemPtr_V_ARREADY;
    end else begin
        physMemPtr_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        physMemPtr_V_blk_n_AW = m_axi_physMemPtr_V_AWREADY;
    end else begin
        physMemPtr_V_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        physMemPtr_V_blk_n_B = m_axi_physMemPtr_V_BVALID;
    end else begin
        physMemPtr_V_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state10))) begin
        physMemPtr_V_blk_n_R = m_axi_physMemPtr_V_RVALID;
    end else begin
        physMemPtr_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state120))) begin
        physMemPtr_V_blk_n_W = m_axi_physMemPtr_V_WREADY;
    end else begin
        physMemPtr_V_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b0 == ap_block_state11_io) & (or_ln198_fu_1468_p2 == 1'd0) & (icmp_ln761_fu_1428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((1'b0 == ap_block_state11_io) & (1'b1 == ap_CS_fsm_state11) & ((or_ln198_fu_1468_p2 == 1'd1) | (icmp_ln761_fu_1428_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln887_fu_1533_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            if ((~(id_fu_1768_p1 == 3'd4) & ~(id_fu_1768_p1 == 3'd3) & ~(id_fu_1768_p1 == 3'd2) & ~(id_fu_1768_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else if (((1'b1 == ap_CS_fsm_state43) & (id_fu_1768_p1 == 3'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else if (((1'b1 == ap_CS_fsm_state43) & (id_fu_1768_p1 == 3'd2))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else if (((1'b1 == ap_CS_fsm_state43) & (id_fu_1768_p1 == 3'd3))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & (grp_effect_delay_fu_1218_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            if (((physMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state119))) begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end
        end
        ap_ST_fsm_state120 : begin
            if (((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state120))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end
        end
        ap_ST_fsm_state121 : begin
            if (((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state121))) begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            if (((physMemPtr_V_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state126))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end
        end
        ap_ST_fsm_state127 : begin
            if (((icmp_ln887_1_fu_3057_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state127))) begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            if ((~((configSizePerStage_1_state == 2'd1) | (numOfStage_1_state == 2'd1) | (counter_1_state == 2'd1) | (monitorDstR_1_state == 2'd1) | (monitorDstL_1_state == 2'd1) | (monitorSrcR_1_state == 2'd1) | (monitorSrcL_1_state == 2'd1) | ((1'b1 == 1'b0) & (configSizePerStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (numOfStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (counter_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstL_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcL_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state130))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a1_fu_1854_p1 = reg_1345;

assign a2_fu_1860_p1 = configReg_load_5_reg_3483;

assign absL_1_fu_2370_p1 = p_Result_12_fu_2362_p3;

assign absL_fu_2062_p1 = p_Result_16_fu_2054_p3;

assign absR_1_fu_2394_p1 = p_Result_13_fu_2386_p3;

assign absR_fu_2086_p1 = p_Result_17_fu_2078_p3;

assign add_ln207_fu_1494_p2 = (32'd1 + counter_0_data_reg);

assign and_ln11_fu_2487_p2 = (tmp_18_reg_3753 & or_ln257_reg_3729);

assign and_ln12_fu_2511_p2 = (tmp_20_reg_3758 & or_ln257_2_reg_3735);

assign and_ln198_fu_1457_p0 = lrclk_0_data_reg;

assign and_ln198_fu_1457_p2 = (xor_ln198_fu_1451_p2 & and_ln198_fu_1457_p0);

assign and_ln24_1_fu_2151_p2 = (grp_fu_1272_p2 & and_ln24_fu_2147_p2);

assign and_ln24_fu_2147_p2 = (or_ln24_reg_3621 & or_ln24_1_reg_3593);

assign and_ln257_1_fu_2459_p2 = (grp_fu_1272_p2 & and_ln257_fu_2455_p2);

assign and_ln257_2_fu_2471_p2 = (or_ln257_2_reg_3735 & or_ln257_1_reg_3703);

assign and_ln257_3_fu_2475_p2 = (grp_fu_1276_p2 & and_ln257_2_fu_2471_p2);

assign and_ln257_fu_2455_p2 = (or_ln257_reg_3729 & or_ln257_1_reg_3703);

assign and_ln282_1_fu_3016_p2 = (xor_ln278_1_fu_3011_p2 & icmp_ln282_1_reg_3881);

assign and_ln282_fu_2840_p2 = (xor_ln278_fu_2835_p2 & icmp_ln282_reg_3814);

assign and_ln284_1_fu_2899_p2 = (xor_ln282_1_fu_2893_p2 & icmp_ln284_1_fu_2862_p2);

assign and_ln284_fu_2687_p2 = (xor_ln282_fu_2681_p2 & icmp_ln284_fu_2650_p2);

assign and_ln285_1_fu_2822_p2 = (xor_ln285_fu_2817_p2 & and_ln284_reg_3836);

assign and_ln285_2_fu_2905_p2 = (icmp_ln285_1_fu_2867_p2 & and_ln284_1_fu_2899_p2);

assign and_ln285_3_fu_2998_p2 = (xor_ln285_1_fu_2993_p2 & and_ln284_1_reg_3909);

assign and_ln285_fu_2693_p2 = (icmp_ln285_fu_2655_p2 & and_ln284_fu_2687_p2);

assign and_ln28_1_fu_2207_p2 = (xor_ln24_fu_2202_p2 & and_ln28_fu_2184_p2);

assign and_ln28_fu_2184_p2 = (tmp_31_reg_3656 & or_ln24_reg_3621);

assign and_ln295_1_fu_2931_p2 = (xor_ln284_1_fu_2925_p2 & icmp_ln295_1_fu_2877_p2);

assign and_ln295_fu_2719_p2 = (xor_ln284_fu_2713_p2 & icmp_ln295_fu_2665_p2);

assign and_ln31_1_fu_2161_p2 = (grp_fu_1276_p2 & and_ln31_fu_2157_p2);

assign and_ln31_fu_2157_p2 = (or_ln31_reg_3627 & or_ln24_1_reg_3593);

assign and_ln35_1_fu_2250_p2 = (xor_ln31_fu_2245_p2 & and_ln35_fu_2227_p2);

assign and_ln35_fu_2227_p2 = (tmp_34_reg_3661 & or_ln31_reg_3627);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

always @ (*) begin
    ap_block_state11_io = ((physMemPtr_V_ARREADY == 1'b0) & (ap_predicate_op196_readreq_state11 == 1'b1));
end

always @ (*) begin
    ap_block_state130 = ((configSizePerStage_1_state == 2'd1) | (numOfStage_1_state == 2'd1) | (counter_1_state == 2'd1) | (monitorDstR_1_state == 2'd1) | (monitorDstL_1_state == 2'd1) | (monitorSrcR_1_state == 2'd1) | (monitorSrcL_1_state == 2'd1) | ((1'b1 == 1'b0) & (configSizePerStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (numOfStage_1_state == 2'd3)) | ((1'b1 == 1'b0) & (counter_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorDstL_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcR_1_state == 2'd3)) | ((1'b1 == 1'b0) & (monitorSrcL_1_state == 2'd3)));
end

assign ap_phi_mux_readyLch_flag_1_phi_fu_1208_p6 = readyLch_flag_1_reg_1203;

assign ap_phi_mux_readyRch_flag_1_phi_fu_1176_p6 = readyRch_flag_1_reg_1171;

assign ap_phi_mux_t_V_1_phi_fu_1149_p4 = t_V_1_reg_1145;

always @ (*) begin
    ap_predicate_op196_readreq_state11 = ((or_ln198_fu_1468_p2 == 1'd0) & (icmp_ln761_fu_1428_p2 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign az1L_fu_1865_p1 = reg_1369;

assign az2L_fu_1874_p1 = configReg_load_11_reg_3488;

assign b0_fu_1820_p1 = reg_1340;

assign b1_fu_1825_p1 = reg_1345;

assign b2_fu_1839_p1 = reg_1345;

assign bitcast_ln11_1_fu_2500_p1 = xor_ln11_fu_2494_p2;

assign bitcast_ln11_fu_2491_p1 = monitorDstL_1_reg_3741;

assign bitcast_ln12_1_fu_2524_p1 = xor_ln12_fu_2518_p2;

assign bitcast_ln12_fu_2515_p1 = monitorDstR_1_reg_3747;

assign bitcast_ln28_1_fu_2198_p1 = xor_ln28_fu_2192_p2;

assign bitcast_ln28_fu_2188_p1 = reg_1388;

assign bitcast_ln35_1_fu_2241_p1 = xor_ln35_fu_2235_p2;

assign bitcast_ln35_fu_2231_p1 = reg_1393;

assign bitcast_ln705_1_fu_1895_p1 = reg_1383;

assign bitcast_ln705_2_fu_1882_p1 = bz0L_reg_3420;

assign bitcast_ln705_3_fu_1886_p1 = bz0R_reg_3432;

assign bitcast_ln705_fu_1890_p1 = reg_1374;

assign bz1L_fu_1830_p1 = configReg_load_13_reg_3426;

assign bz1R_fu_1834_p1 = reg_1340;

assign bz2L_fu_1844_p1 = reg_1369;

assign bz2R_fu_1849_p1 = reg_1345;

assign dstDatas_0_l_5_fu_1776_p5 = t_V_reg_529[1:0];

assign dst_l_1_fu_2221_p3 = ((and_ln24_1_reg_3633[0:0] === 1'b1) ? x_assign_5_reg_3574 : select_ln28_fu_2213_p3);

assign dst_l_fu_2504_p3 = ((and_ln11_fu_2487_p2[0:0] === 1'b1) ? bitcast_ln11_1_fu_2500_p1 : monitorDstL_1_reg_3741);

assign dst_r_1_fu_2264_p3 = ((and_ln31_1_reg_3639[0:0] === 1'b1) ? x_assign_6_reg_3581 : select_ln35_fu_2256_p3);

assign dst_r_fu_2528_p3 = ((and_ln12_fu_2511_p2[0:0] === 1'b1) ? bitcast_ln12_1_fu_2524_p1 : monitorDstR_1_reg_3747);

assign exp_V_1_fu_2751_p1 = p_Result_4_fu_2741_p4;

assign exp_V_fu_2614_p1 = p_Result_s_fu_2604_p4;

assign grp_effect_delay_fu_1218_ap_start = grp_effect_delay_fu_1218_ap_start_reg;

assign grp_fu_1248_p0 = configReg_load_10_reg_3478;

assign grp_fu_1248_p1 = reg_1345;

assign grp_fu_1252_p0 = configReg_load_12_reg_3493;

assign grp_fu_1252_p1 = configReg_load_5_reg_3483;

assign grp_fu_1266_p0 = $signed(srcL_V_reg_3245);

assign grp_fu_1269_p0 = $signed(srcR_V_reg_3255);

assign grp_fu_1324_p4 = {{configReg_q0[30:23]}};

assign grp_fu_1334_p2 = ((grp_fu_1324_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_1488_p2 = ((counter_0_data_reg < 32'd4294967294) ? 1'b1 : 1'b0);

assign icmp_ln24_1_fu_2107_p2 = ((trunc_ln24_fu_2050_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln24_3_fu_2018_p2 = ((trunc_ln31_fu_2014_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_2101_p2 = ((tmp_27_fu_2091_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln257_1_fu_2415_p2 = ((trunc_ln257_1_fu_2358_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln257_3_fu_2326_p2 = ((trunc_ln257_fu_2322_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln257_4_fu_2437_p2 = ((tmp_14_fu_2427_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln257_5_fu_2443_p2 = ((trunc_ln257_2_fu_2382_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln257_fu_2409_p2 = ((tmp_11_fu_2399_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln258_1_fu_3092_p2 = ((t_V_1_reg_1145 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_3078_p2 = ((t_V_1_reg_1145 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln278_1_fu_2759_p2 = ((trunc_ln262_1_fu_2729_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_2622_p2 = ((trunc_ln262_fu_2592_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln282_1_fu_2771_p2 = ((p_Result_4_fu_2741_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_2634_p2 = ((p_Result_s_fu_2604_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln284_1_fu_2862_p2 = (($signed(sh_amt_2_reg_3873) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_2650_p2 = (($signed(sh_amt_reg_3806) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln285_1_fu_2867_p2 = (($signed(sh_amt_2_reg_3873) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln285_fu_2655_p2 = (($signed(sh_amt_reg_3806) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln295_1_fu_2877_p2 = (($signed(sh_amt_3_fu_2872_p2) < $signed(9'd24)) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_2665_p2 = (($signed(sh_amt_1_fu_2660_p2) < $signed(9'd24)) ? 1'b1 : 1'b0);

assign icmp_ln31_1_fu_2135_p2 = ((trunc_ln31_1_fu_2074_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_2129_p2 = ((tmp_32_fu_2119_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln761_fu_1428_p2 = ((status_V_reg_3183 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln887_1_fu_3057_p2 = ((t_V_1_reg_1145 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_1533_p2 = ((t_V_reg_529 == 3'd4) ? 1'b1 : 1'b0);

assign id_fu_1768_p1 = configReg_q0[2:0];

assign lshr_ln286_1_fu_2883_p2 = tmp_s_fu_2852_p3 >> sext_ln281_1_fu_2859_p1;

assign lshr_ln286_fu_2671_p2 = tmp_2_fu_2640_p3 >> sext_ln281_fu_2647_p1;

assign monitorDstL_1_fu_2465_p3 = ((and_ln257_1_fu_2459_p2[0:0] === 1'b1) ? absL_1_reg_3717 : thresh_1_reg_3709);

assign monitorDstR_1_fu_2481_p3 = ((and_ln257_3_fu_2475_p2[0:0] === 1'b1) ? absR_1_reg_3723 : thresh_1_reg_3709);

assign or_ln110_fu_1586_p2 = (tmp_4_reg_3298 | 7'd3);

assign or_ln111_fu_1600_p2 = (tmp_4_reg_3298 | 7'd4);

assign or_ln112_fu_1614_p2 = (tmp_4_reg_3298 | 7'd5);

assign or_ln113_fu_1628_p2 = (tmp_4_reg_3298 | 7'd6);

assign or_ln114_fu_1642_p2 = (tmp_4_reg_3298 | 7'd7);

assign or_ln117_fu_1656_p2 = (tmp_4_reg_3298 | 7'd8);

assign or_ln118_fu_1670_p2 = (tmp_4_reg_3298 | 7'd9);

assign or_ln119_fu_1684_p2 = (tmp_4_reg_3298 | 7'd10);

assign or_ln120_fu_1698_p2 = (tmp_4_reg_3298 | 7'd11);

assign or_ln121_fu_1712_p2 = (tmp_4_reg_3298 | 7'd12);

assign or_ln122_fu_1726_p2 = (tmp_4_reg_3298 | 7'd13);

assign or_ln123_fu_1740_p2 = (tmp_4_reg_3298 | 7'd14);

assign or_ln124_fu_1754_p2 = (tmp_4_reg_3298 | 7'd15);

assign or_ln18_fu_1572_p2 = (tmp_4_reg_3298 | 7'd2);

assign or_ln193_fu_1441_p1 = lrclk_0_data_reg;

assign or_ln193_fu_1441_p2 = (readyRch | or_ln193_fu_1441_p1);

assign or_ln198_fu_1468_p2 = (xor_ln198_1_fu_1462_p2 | and_ln198_fu_1457_p2);

assign or_ln24_1_fu_2024_p2 = (icmp_ln24_3_fu_2018_p2 | grp_fu_1334_p2);

assign or_ln24_fu_2113_p2 = (icmp_ln24_fu_2101_p2 | icmp_ln24_1_fu_2107_p2);

assign or_ln257_1_fu_2332_p2 = (icmp_ln257_3_fu_2326_p2 | grp_fu_1334_p2);

assign or_ln257_2_fu_2449_p2 = (icmp_ln257_5_fu_2443_p2 | icmp_ln257_4_fu_2437_p2);

assign or_ln257_fu_2421_p2 = (icmp_ln257_fu_2409_p2 | icmp_ln257_1_fu_2415_p2);

assign or_ln282_1_fu_2889_p2 = (icmp_ln282_1_reg_3881 | icmp_ln278_1_reg_3866);

assign or_ln282_fu_2677_p2 = (icmp_ln282_reg_3814 | icmp_ln278_reg_3799);

assign or_ln284_1_fu_2919_p2 = (or_ln282_1_fu_2889_p2 | icmp_ln284_1_fu_2862_p2);

assign or_ln284_fu_2707_p2 = (or_ln282_fu_2677_p2 | icmp_ln284_fu_2650_p2);

assign or_ln31_fu_2141_p2 = (icmp_ln31_fu_2129_p2 | icmp_ln31_1_fu_2135_p2);

assign or_ln4_fu_1558_p2 = (tmp_4_reg_3298 | 7'd1);

assign p_Result_11_fu_2338_p3 = {{1'd0}, {trunc_ln368_reg_3698}};

assign p_Result_12_fu_2362_p3 = {{1'd0}, {trunc_ln368_1_fu_2354_p1}};

assign p_Result_13_fu_2386_p3 = {{1'd0}, {trunc_ln368_2_fu_2378_p1}};

assign p_Result_14_fu_2030_p3 = {{1'd0}, {trunc_ln368_3_reg_3588}};

assign p_Result_15_fu_2171_p3 = {{1'd0}, {trunc_ln368_4_reg_3645}};

assign p_Result_16_fu_2054_p3 = {{1'd0}, {trunc_ln368_5_fu_2046_p1}};

assign p_Result_17_fu_2078_p3 = {{1'd0}, {trunc_ln368_6_fu_2070_p1}};

assign p_Result_4_fu_2741_p4 = {{reg_V_1_fu_2725_p1[30:23]}};

assign p_Result_s_fu_2604_p4 = {{reg_V_fu_2588_p1[30:23]}};

assign p_Val2_10_fu_2067_p1 = x_assign_6_reg_3581;

assign p_Val2_5_fu_2351_p1 = x_assign_4_reg_3686;

assign p_Val2_6_fu_2375_p1 = x_assign_reg_3692;

assign p_Val2_9_fu_2043_p1 = x_assign_5_reg_3574;

assign physMemPtr_V_AWADDR = zext_ln544_2_fu_3028_p1;

assign r_V_fu_1398_p4 = {{basePhysAddr_V_0_data_reg[31:2]}};

assign ratio_fu_2178_p1 = p_Result_15_fu_2171_p3;

assign reg_V_1_fu_2725_p1 = reg_1362;

assign reg_V_fu_2588_p1 = reg_1349;

assign ret_V_1_fu_2937_p2 = (31'd2 + zext_ln215_reg_3167);

assign ret_V_fu_1412_p2 = (zext_ln215_fu_1408_p1 + 31'd4);

assign select_ln207_fu_1500_p3 = ((icmp_ln207_fu_1488_p2[0:0] === 1'b1) ? add_ln207_fu_1494_p2 : 32'd0);

assign select_ln258_1_fu_3098_p3 = ((icmp_ln258_1_fu_3092_p2[0:0] === 1'b1) ? dstDatas_3_r_1_fu_232 : select_ln258_fu_3084_p3);

assign select_ln258_fu_3084_p3 = ((icmp_ln258_fu_3078_p2[0:0] === 1'b1) ? dstDatas_3_r_fu_228 : dstDatas_3_r_2_fu_236);

assign select_ln278_1_fu_2986_p3 = ((icmp_ln278_1_reg_3866[0:0] === 1'b1) ? 24'd0 : select_ln295_1_fu_2980_p3);

assign select_ln278_fu_2810_p3 = ((icmp_ln278_reg_3799[0:0] === 1'b1) ? 24'd0 : select_ln295_fu_2804_p3);

assign select_ln282_1_fu_3021_p3 = ((and_ln282_1_fu_3016_p2[0:0] === 1'b1) ? tmp_s_reg_3893 : select_ln285_3_fu_3003_p3);

assign select_ln282_fu_2845_p3 = ((and_ln282_fu_2840_p2[0:0] === 1'b1) ? tmp_2_reg_3820 : select_ln285_1_fu_2827_p3);

assign select_ln285_1_fu_2827_p3 = ((and_ln285_1_fu_2822_p2[0:0] === 1'b1) ? select_ln288_fu_2787_p3 : select_ln278_fu_2810_p3);

assign select_ln285_2_fu_2911_p3 = ((and_ln285_2_fu_2905_p2[0:0] === 1'b1) ? lshr_ln286_1_fu_2883_p2 : 24'd0);

assign select_ln285_3_fu_3003_p3 = ((and_ln285_3_fu_2998_p2[0:0] === 1'b1) ? select_ln288_1_fu_2963_p3 : select_ln278_1_fu_2986_p3);

assign select_ln285_fu_2699_p3 = ((and_ln285_fu_2693_p2[0:0] === 1'b1) ? lshr_ln286_fu_2671_p2 : 24'd0);

assign select_ln288_1_fu_2963_p3 = ((tmp_9_fu_2956_p3[0:0] === 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln288_fu_2787_p3 = ((tmp_6_fu_2780_p3[0:0] === 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln28_fu_2213_p3 = ((and_ln28_1_fu_2207_p2[0:0] === 1'b1) ? bitcast_ln28_1_fu_2198_p1 : reg_1388);

assign select_ln295_1_fu_2980_p3 = ((and_ln295_1_reg_3919[0:0] === 1'b1) ? shl_ln297_1_fu_2975_p2 : select_ln285_2_reg_3914);

assign select_ln295_fu_2804_p3 = ((and_ln295_reg_3846[0:0] === 1'b1) ? shl_ln297_fu_2799_p2 : select_ln285_reg_3841);

assign select_ln303_1_fu_3043_p3 = ((p_Result_19_reg_3856[0:0] === 1'b1) ? sub_ln461_1_fu_3038_p2 : select_ln282_1_reg_3934);

assign select_ln303_fu_2947_p3 = ((p_Result_18_reg_3789[0:0] === 1'b1) ? sub_ln461_fu_2942_p2 : select_ln282_reg_3887);

assign select_ln35_fu_2256_p3 = ((and_ln35_1_fu_2250_p2[0:0] === 1'b1) ? bitcast_ln35_1_fu_2241_p1 : reg_1393);

assign sext_ln214_1_fu_3053_p1 = $signed(select_ln303_1_reg_3947);

assign sext_ln214_fu_3049_p1 = $signed(select_ln303_reg_3929);

assign sext_ln281_1_fu_2859_p1 = sh_amt_2_reg_3873;

assign sext_ln281_fu_2647_p1 = sh_amt_reg_3806;

assign sext_ln294_1_fu_2953_p1 = sh_amt_3_reg_3904;

assign sext_ln294_1cast_fu_2971_p1 = sext_ln294_1_fu_2953_p1[23:0];

assign sext_ln294_fu_2777_p1 = sh_amt_1_reg_3831;

assign sext_ln294cast_fu_2795_p1 = sext_ln294_fu_2777_p1[23:0];

assign sh_amt_1_fu_2660_p2 = ($signed(9'd0) - $signed(sh_amt_reg_3806));

assign sh_amt_2_fu_2765_p2 = (9'd150 - exp_V_1_fu_2751_p1);

assign sh_amt_3_fu_2872_p2 = ($signed(9'd0) - $signed(sh_amt_2_reg_3873));

assign sh_amt_fu_2628_p2 = (9'd150 - exp_V_fu_2614_p1);

assign shl_ln297_1_fu_2975_p2 = tmp_s_reg_3893 << sext_ln294_1cast_fu_2971_p1;

assign shl_ln297_fu_2799_p2 = tmp_2_reg_3820 << sext_ln294cast_fu_2795_p1;

assign srcL_V_fu_1484_p1 = physMemPtr_V_RDATA[23:0];

assign srcR_V_fu_1509_p1 = physMemPtr_V_RDATA[23:0];

assign stageIndex_V_1_fu_3063_p2 = (t_V_1_reg_1145 + 2'd1);

assign stageIndex_V_fu_1539_p2 = (t_V_reg_529 + 3'd1);

assign sub_ln461_1_fu_3038_p2 = (24'd0 - select_ln282_1_reg_3934);

assign sub_ln461_fu_2942_p2 = (24'd0 - select_ln282_reg_3887);

assign thresh_1_fu_2345_p1 = p_Result_11_fu_2338_p3;

assign thresh_fu_2037_p1 = p_Result_14_fu_2030_p3;

assign tmp_10_fu_1619_p3 = {{57'd0}, {or_ln112_fu_1614_p2}};

assign tmp_11_fu_2399_p4 = {{p_Val2_5_fu_2351_p1[30:23]}};

assign tmp_14_fu_2427_p4 = {{p_Val2_6_fu_2375_p1[30:23]}};

assign tmp_15_fu_1633_p3 = {{57'd0}, {or_ln113_fu_1628_p2}};

assign tmp_17_fu_1647_p3 = {{57'd0}, {or_ln114_fu_1642_p2}};

assign tmp_19_fu_1661_p3 = {{57'd0}, {or_ln117_fu_1656_p2}};

assign tmp_21_fu_1675_p3 = {{57'd0}, {or_ln118_fu_1670_p2}};

assign tmp_22_fu_1689_p3 = {{57'd0}, {or_ln119_fu_1684_p2}};

assign tmp_23_fu_1703_p3 = {{57'd0}, {or_ln120_fu_1698_p2}};

assign tmp_24_fu_1717_p3 = {{57'd0}, {or_ln121_fu_1712_p2}};

assign tmp_25_fu_1731_p3 = {{57'd0}, {or_ln122_fu_1726_p2}};

assign tmp_26_fu_1745_p3 = {{57'd0}, {or_ln123_fu_1740_p2}};

assign tmp_27_fu_2091_p4 = {{p_Val2_9_fu_2043_p1[30:23]}};

assign tmp_2_fu_2640_p3 = {{1'd1}, {trunc_ln270_reg_3794}};

assign tmp_30_fu_1759_p3 = {{57'd0}, {or_ln124_fu_1754_p2}};

assign tmp_32_fu_2119_p4 = {{p_Val2_10_fu_2067_p1[30:23]}};

assign tmp_3_fu_1591_p3 = {{57'd0}, {or_ln110_fu_1586_p2}};

assign tmp_4_fu_1545_p3 = {{t_V_reg_529}, {4'd0}};

assign tmp_5_fu_1563_p3 = {{57'd0}, {or_ln4_fu_1558_p2}};

assign tmp_6_fu_2780_p3 = reg_V_reg_3784[32'd31];

assign tmp_7_fu_1577_p3 = {{57'd0}, {or_ln18_fu_1572_p2}};

assign tmp_8_fu_1605_p3 = {{57'd0}, {or_ln111_fu_1600_p2}};

assign tmp_9_fu_2956_p3 = reg_V_1_reg_3851[32'd31];

assign tmp_s_fu_2852_p3 = {{1'd1}, {trunc_ln270_1_reg_3861}};

assign trunc_ln228_fu_2286_p1 = t_V_reg_529[1:0];

assign trunc_ln231_fu_1978_p1 = t_V_reg_529[1:0];

assign trunc_ln234_fu_1920_p1 = t_V_reg_529[1:0];

assign trunc_ln237_fu_1790_p1 = t_V_reg_529[1:0];

assign trunc_ln241_fu_1772_p1 = t_V_reg_529[1:0];

assign trunc_ln24_fu_2050_p1 = p_Val2_9_fu_2043_p1[22:0];

assign trunc_ln257_1_fu_2358_p1 = p_Val2_5_fu_2351_p1[22:0];

assign trunc_ln257_2_fu_2382_p1 = p_Val2_6_fu_2375_p1[22:0];

assign trunc_ln257_fu_2322_p1 = configReg_q0[22:0];

assign trunc_ln262_1_fu_2729_p1 = reg_V_1_fu_2725_p1[30:0];

assign trunc_ln262_fu_2592_p1 = reg_V_fu_2588_p1[30:0];

assign trunc_ln270_1_fu_2755_p1 = reg_V_1_fu_2725_p1[22:0];

assign trunc_ln270_fu_2618_p1 = reg_V_fu_2588_p1[22:0];

assign trunc_ln31_1_fu_2074_p1 = p_Val2_10_fu_2067_p1[22:0];

assign trunc_ln31_fu_2014_p1 = configReg_q0[22:0];

assign trunc_ln368_1_fu_2354_p1 = p_Val2_5_fu_2351_p1[30:0];

assign trunc_ln368_2_fu_2378_p1 = p_Val2_6_fu_2375_p1[30:0];

assign trunc_ln368_3_fu_2010_p1 = configReg_q0[30:0];

assign trunc_ln368_4_fu_2167_p1 = configReg_q0[30:0];

assign trunc_ln368_5_fu_2046_p1 = p_Val2_9_fu_2043_p1[30:0];

assign trunc_ln368_6_fu_2070_p1 = p_Val2_10_fu_2067_p1[30:0];

assign trunc_ln368_fu_2318_p1 = configReg_q0[30:0];

assign xor_ln11_fu_2494_p2 = (bitcast_ln11_fu_2491_p1 ^ 32'd2147483648);

assign xor_ln12_fu_2518_p2 = (bitcast_ln12_fu_2515_p1 ^ 32'd2147483648);

assign xor_ln193_fu_1446_p0 = lrclk_0_data_reg;

assign xor_ln193_fu_1446_p2 = (xor_ln193_fu_1446_p0 ^ 1'd1);

assign xor_ln198_1_fu_1462_p2 = (or_ln193_fu_1441_p2 ^ 1'd1);

assign xor_ln198_fu_1451_p2 = (readyLch ^ 1'd1);

assign xor_ln24_fu_2202_p2 = (1'd1 ^ and_ln24_1_reg_3633);

assign xor_ln278_1_fu_3011_p2 = (icmp_ln278_1_reg_3866 ^ 1'd1);

assign xor_ln278_fu_2835_p2 = (icmp_ln278_reg_3799 ^ 1'd1);

assign xor_ln282_1_fu_2893_p2 = (or_ln282_1_fu_2889_p2 ^ 1'd1);

assign xor_ln282_fu_2681_p2 = (or_ln282_fu_2677_p2 ^ 1'd1);

assign xor_ln284_1_fu_2925_p2 = (or_ln284_1_fu_2919_p2 ^ 1'd1);

assign xor_ln284_fu_2713_p2 = (or_ln284_fu_2707_p2 ^ 1'd1);

assign xor_ln285_1_fu_2993_p2 = (icmp_ln285_1_reg_3899 ^ 1'd1);

assign xor_ln285_fu_2817_p2 = (icmp_ln285_reg_3826 ^ 1'd1);

assign xor_ln28_fu_2192_p2 = (bitcast_ln28_fu_2188_p1 ^ 32'd2147483648);

assign xor_ln31_fu_2245_p2 = (1'd1 ^ and_ln31_1_reg_3639);

assign xor_ln35_fu_2235_p2 = (bitcast_ln35_fu_2231_p1 ^ 32'd2147483648);

assign zext_ln215_fu_1408_p1 = r_V_fu_1398_p4;

assign zext_ln225_fu_1553_p1 = tmp_4_fu_1545_p3;

assign zext_ln544_1_fu_1474_p1 = r_V_reg_3162;

assign zext_ln544_2_fu_3028_p1 = ret_V_1_reg_3924;

assign zext_ln544_fu_1418_p1 = ret_V_reg_3172;

always @ (posedge ap_clk) begin
    numOfStage_1_data_reg[1:0] <= 2'b00;
    numOfStage_1_data_reg[31:3] <= 29'b00000000000000000000000000000;
    configSizePerStage_1_data_reg[3:0] <= 4'b0000;
    configSizePerStage_1_data_reg[31:5] <= 27'b000000000000000000000000000;
    zext_ln215_reg_3167[30] <= 1'b0;
    tmp_4_reg_3298[3:0] <= 4'b0000;
    configReg_addr_15_reg_3327[3:0] <= 4'b0010;
    configReg_addr_1_reg_3332[3:0] <= 4'b0011;
    configReg_addr_2_reg_3337[3:0] <= 4'b0100;
    configReg_addr_4_reg_3347[3:0] <= 4'b0110;
    configReg_addr_5_reg_3352[3:0] <= 4'b0111;
    configReg_addr_6_reg_3357[3:0] <= 4'b1000;
    configReg_addr_7_reg_3362[3:0] <= 4'b1001;
    configReg_addr_8_reg_3367[3:0] <= 4'b1010;
    configReg_addr_9_reg_3372[3:0] <= 4'b1011;
    configReg_addr_10_reg_3377[3:0] <= 4'b1100;
    configReg_addr_11_reg_3382[3:0] <= 4'b1101;
    configReg_addr_12_reg_3387[3:0] <= 4'b1110;
    configReg_addr_13_reg_3392[3:0] <= 4'b1111;
    thresh_reg_3599[31] <= 1'b0;
    absL_reg_3609[31] <= 1'b0;
    absR_reg_3615[31] <= 1'b0;
    thresh_1_reg_3709[31] <= 1'b0;
    absL_1_reg_3717[31] <= 1'b0;
    absR_1_reg_3723[31] <= 1'b0;
    monitorDstL_1_reg_3741[31] <= 1'b0;
    monitorDstR_1_reg_3747[31] <= 1'b0;
    tmp_2_reg_3820[23] <= 1'b1;
    tmp_s_reg_3893[23] <= 1'b1;
    monitorSrcL_1_state[1:0] <= 2'b00;
    monitorSrcR_1_state[1:0] <= 2'b00;
    monitorDstL_1_state[1:0] <= 2'b00;
    monitorDstR_1_state[1:0] <= 2'b00;
    counter_1_state[1:0] <= 2'b00;
    numOfStage_1_state[1:0] <= 2'b00;
    configSizePerStage_1_state[1:0] <= 2'b00;
end

endmodule //pynq_dsp_hls
