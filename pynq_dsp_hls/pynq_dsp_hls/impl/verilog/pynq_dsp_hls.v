// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pynq_dsp_hls,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.000000,HLS_SYN_LAT=29,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=6,HLS_SYN_FF=4256,HLS_SYN_LUT=9550,HLS_VERSION=2019_1_3}" *)

module pynq_dsp_hls (
        ap_clk,
        ap_rst_n,
        lrclk_V,
        m_axi_physMemPtr_V_AWVALID,
        m_axi_physMemPtr_V_AWREADY,
        m_axi_physMemPtr_V_AWADDR,
        m_axi_physMemPtr_V_AWID,
        m_axi_physMemPtr_V_AWLEN,
        m_axi_physMemPtr_V_AWSIZE,
        m_axi_physMemPtr_V_AWBURST,
        m_axi_physMemPtr_V_AWLOCK,
        m_axi_physMemPtr_V_AWCACHE,
        m_axi_physMemPtr_V_AWPROT,
        m_axi_physMemPtr_V_AWQOS,
        m_axi_physMemPtr_V_AWREGION,
        m_axi_physMemPtr_V_AWUSER,
        m_axi_physMemPtr_V_WVALID,
        m_axi_physMemPtr_V_WREADY,
        m_axi_physMemPtr_V_WDATA,
        m_axi_physMemPtr_V_WSTRB,
        m_axi_physMemPtr_V_WLAST,
        m_axi_physMemPtr_V_WID,
        m_axi_physMemPtr_V_WUSER,
        m_axi_physMemPtr_V_ARVALID,
        m_axi_physMemPtr_V_ARREADY,
        m_axi_physMemPtr_V_ARADDR,
        m_axi_physMemPtr_V_ARID,
        m_axi_physMemPtr_V_ARLEN,
        m_axi_physMemPtr_V_ARSIZE,
        m_axi_physMemPtr_V_ARBURST,
        m_axi_physMemPtr_V_ARLOCK,
        m_axi_physMemPtr_V_ARCACHE,
        m_axi_physMemPtr_V_ARPROT,
        m_axi_physMemPtr_V_ARQOS,
        m_axi_physMemPtr_V_ARREGION,
        m_axi_physMemPtr_V_ARUSER,
        m_axi_physMemPtr_V_RVALID,
        m_axi_physMemPtr_V_RREADY,
        m_axi_physMemPtr_V_RDATA,
        m_axi_physMemPtr_V_RLAST,
        m_axi_physMemPtr_V_RID,
        m_axi_physMemPtr_V_RUSER,
        m_axi_physMemPtr_V_RRESP,
        m_axi_physMemPtr_V_BVALID,
        m_axi_physMemPtr_V_BREADY,
        m_axi_physMemPtr_V_BRESP,
        m_axi_physMemPtr_V_BID,
        m_axi_physMemPtr_V_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 58'd1;
parameter    ap_ST_fsm_state2 = 58'd2;
parameter    ap_ST_fsm_state3 = 58'd4;
parameter    ap_ST_fsm_state4 = 58'd8;
parameter    ap_ST_fsm_state5 = 58'd16;
parameter    ap_ST_fsm_state6 = 58'd32;
parameter    ap_ST_fsm_state7 = 58'd64;
parameter    ap_ST_fsm_state8 = 58'd128;
parameter    ap_ST_fsm_state9 = 58'd256;
parameter    ap_ST_fsm_state10 = 58'd512;
parameter    ap_ST_fsm_state11 = 58'd1024;
parameter    ap_ST_fsm_state12 = 58'd2048;
parameter    ap_ST_fsm_state13 = 58'd4096;
parameter    ap_ST_fsm_state14 = 58'd8192;
parameter    ap_ST_fsm_state15 = 58'd16384;
parameter    ap_ST_fsm_state16 = 58'd32768;
parameter    ap_ST_fsm_state17 = 58'd65536;
parameter    ap_ST_fsm_state18 = 58'd131072;
parameter    ap_ST_fsm_state19 = 58'd262144;
parameter    ap_ST_fsm_state20 = 58'd524288;
parameter    ap_ST_fsm_state21 = 58'd1048576;
parameter    ap_ST_fsm_state22 = 58'd2097152;
parameter    ap_ST_fsm_state23 = 58'd4194304;
parameter    ap_ST_fsm_state24 = 58'd8388608;
parameter    ap_ST_fsm_state25 = 58'd16777216;
parameter    ap_ST_fsm_state26 = 58'd33554432;
parameter    ap_ST_fsm_state27 = 58'd67108864;
parameter    ap_ST_fsm_state28 = 58'd134217728;
parameter    ap_ST_fsm_state29 = 58'd268435456;
parameter    ap_ST_fsm_state30 = 58'd536870912;
parameter    ap_ST_fsm_state31 = 58'd1073741824;
parameter    ap_ST_fsm_state32 = 58'd2147483648;
parameter    ap_ST_fsm_state33 = 58'd4294967296;
parameter    ap_ST_fsm_state34 = 58'd8589934592;
parameter    ap_ST_fsm_state35 = 58'd17179869184;
parameter    ap_ST_fsm_state36 = 58'd34359738368;
parameter    ap_ST_fsm_state37 = 58'd68719476736;
parameter    ap_ST_fsm_state38 = 58'd137438953472;
parameter    ap_ST_fsm_state39 = 58'd274877906944;
parameter    ap_ST_fsm_state40 = 58'd549755813888;
parameter    ap_ST_fsm_state41 = 58'd1099511627776;
parameter    ap_ST_fsm_state42 = 58'd2199023255552;
parameter    ap_ST_fsm_state43 = 58'd4398046511104;
parameter    ap_ST_fsm_state44 = 58'd8796093022208;
parameter    ap_ST_fsm_state45 = 58'd17592186044416;
parameter    ap_ST_fsm_state46 = 58'd35184372088832;
parameter    ap_ST_fsm_state47 = 58'd70368744177664;
parameter    ap_ST_fsm_state48 = 58'd140737488355328;
parameter    ap_ST_fsm_state49 = 58'd281474976710656;
parameter    ap_ST_fsm_state50 = 58'd562949953421312;
parameter    ap_ST_fsm_state51 = 58'd1125899906842624;
parameter    ap_ST_fsm_state52 = 58'd2251799813685248;
parameter    ap_ST_fsm_state53 = 58'd4503599627370496;
parameter    ap_ST_fsm_state54 = 58'd9007199254740992;
parameter    ap_ST_fsm_state55 = 58'd18014398509481984;
parameter    ap_ST_fsm_state56 = 58'd36028797018963968;
parameter    ap_ST_fsm_state57 = 58'd72057594037927936;
parameter    ap_ST_fsm_state58 = 58'd144115188075855872;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_PHYSMEMPTR_V_ID_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH = 32;
parameter    C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH = 32;
parameter    C_M_AXI_PHYSMEMPTR_V_AWUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_ARUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_WUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_RUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_BUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_TARGET_ADDR = 0;
parameter    C_M_AXI_PHYSMEMPTR_V_USER_VALUE = 0;
parameter    C_M_AXI_PHYSMEMPTR_V_PROT_VALUE = 0;
parameter    C_M_AXI_PHYSMEMPTR_V_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_PHYSMEMPTR_V_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [0:0] lrclk_V;
output   m_axi_physMemPtr_V_AWVALID;
input   m_axi_physMemPtr_V_AWREADY;
output  [C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH - 1:0] m_axi_physMemPtr_V_AWADDR;
output  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_AWID;
output  [7:0] m_axi_physMemPtr_V_AWLEN;
output  [2:0] m_axi_physMemPtr_V_AWSIZE;
output  [1:0] m_axi_physMemPtr_V_AWBURST;
output  [1:0] m_axi_physMemPtr_V_AWLOCK;
output  [3:0] m_axi_physMemPtr_V_AWCACHE;
output  [2:0] m_axi_physMemPtr_V_AWPROT;
output  [3:0] m_axi_physMemPtr_V_AWQOS;
output  [3:0] m_axi_physMemPtr_V_AWREGION;
output  [C_M_AXI_PHYSMEMPTR_V_AWUSER_WIDTH - 1:0] m_axi_physMemPtr_V_AWUSER;
output   m_axi_physMemPtr_V_WVALID;
input   m_axi_physMemPtr_V_WREADY;
output  [C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH - 1:0] m_axi_physMemPtr_V_WDATA;
output  [C_M_AXI_PHYSMEMPTR_V_WSTRB_WIDTH - 1:0] m_axi_physMemPtr_V_WSTRB;
output   m_axi_physMemPtr_V_WLAST;
output  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_WID;
output  [C_M_AXI_PHYSMEMPTR_V_WUSER_WIDTH - 1:0] m_axi_physMemPtr_V_WUSER;
output   m_axi_physMemPtr_V_ARVALID;
input   m_axi_physMemPtr_V_ARREADY;
output  [C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH - 1:0] m_axi_physMemPtr_V_ARADDR;
output  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_ARID;
output  [7:0] m_axi_physMemPtr_V_ARLEN;
output  [2:0] m_axi_physMemPtr_V_ARSIZE;
output  [1:0] m_axi_physMemPtr_V_ARBURST;
output  [1:0] m_axi_physMemPtr_V_ARLOCK;
output  [3:0] m_axi_physMemPtr_V_ARCACHE;
output  [2:0] m_axi_physMemPtr_V_ARPROT;
output  [3:0] m_axi_physMemPtr_V_ARQOS;
output  [3:0] m_axi_physMemPtr_V_ARREGION;
output  [C_M_AXI_PHYSMEMPTR_V_ARUSER_WIDTH - 1:0] m_axi_physMemPtr_V_ARUSER;
input   m_axi_physMemPtr_V_RVALID;
output   m_axi_physMemPtr_V_RREADY;
input  [C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH - 1:0] m_axi_physMemPtr_V_RDATA;
input   m_axi_physMemPtr_V_RLAST;
input  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_RID;
input  [C_M_AXI_PHYSMEMPTR_V_RUSER_WIDTH - 1:0] m_axi_physMemPtr_V_RUSER;
input  [1:0] m_axi_physMemPtr_V_RRESP;
input   m_axi_physMemPtr_V_BVALID;
output   m_axi_physMemPtr_V_BREADY;
input  [1:0] m_axi_physMemPtr_V_BRESP;
input  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_BID;
input  [C_M_AXI_PHYSMEMPTR_V_BUSER_WIDTH - 1:0] m_axi_physMemPtr_V_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [57:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [0:0] lrclk_V_0_data_reg;
reg    lrclk_V_0_vld_reg;
reg    lrclk_V_0_ack_out;
wire   [31:0] basePhysAddr_V;
wire   [5:0] configReg_address0;
reg    configReg_ce0;
wire   [7:0] configReg_q0;
reg   [0:0] readyRch;
reg   [0:0] readyLch;
reg    physMemPtr_V_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    physMemPtr_V_blk_n_R;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln761_fu_430_p2;
wire   [0:0] or_ln107_fu_470_p2;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg    physMemPtr_V_blk_n_AW;
wire    ap_CS_fsm_state51;
reg    physMemPtr_V_blk_n_W;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
reg    physMemPtr_V_blk_n_B;
wire    ap_CS_fsm_state58;
reg   [0:0] icmp_ln761_reg_3161;
reg   [0:0] or_ln107_reg_3170;
reg    physMemPtr_V_AWVALID;
wire    physMemPtr_V_AWREADY;
wire   [31:0] physMemPtr_V_AWADDR;
reg    physMemPtr_V_WVALID;
wire    physMemPtr_V_WREADY;
reg   [31:0] physMemPtr_V_WDATA;
reg    physMemPtr_V_ARVALID;
wire    physMemPtr_V_ARREADY;
reg   [31:0] physMemPtr_V_ARADDR;
reg   [31:0] physMemPtr_V_ARLEN;
wire    physMemPtr_V_RVALID;
reg    physMemPtr_V_RREADY;
wire   [31:0] physMemPtr_V_RDATA;
wire    physMemPtr_V_RLAST;
wire   [0:0] physMemPtr_V_RID;
wire   [0:0] physMemPtr_V_RUSER;
wire   [1:0] physMemPtr_V_RRESP;
wire    physMemPtr_V_BVALID;
reg    physMemPtr_V_BREADY;
wire   [1:0] physMemPtr_V_BRESP;
wire   [0:0] physMemPtr_V_BID;
wire   [0:0] physMemPtr_V_BUSER;
wire   [31:0] grp_fu_364_p2;
reg   [31:0] reg_395;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state47;
reg   [0:0] icmp_ln935_reg_3756;
wire    ap_CS_fsm_state48;
reg   [0:0] icmp_ln935_1_reg_3807;
wire   [29:0] r_V_3_fu_400_p4;
reg   [29:0] r_V_3_reg_3127;
wire   [30:0] zext_ln215_fu_410_p1;
reg   [30:0] zext_ln215_reg_3132;
wire   [30:0] ret_V_fu_414_p2;
reg   [30:0] ret_V_reg_3137;
reg   [31:0] status_V_reg_3156;
reg    ap_predicate_op101_readreq_state10;
reg    ap_block_state10_io;
wire   [0:0] xor_ln102_fu_448_p2;
reg   [31:0] lsignExt_V_2_reg_3192;
reg   [31:0] rsignExt_V_2_reg_3199;
wire   [31:0] lsignExt_V_1_fu_498_p3;
reg   [31:0] lsignExt_V_1_reg_3206;
wire    ap_CS_fsm_state19;
wire   [31:0] rsignExt_V_1_fu_517_p3;
reg   [31:0] rsignExt_V_1_reg_3211;
wire   [31:0] grp_fu_375_p1;
reg   [31:0] tmp_reg_3216;
wire    ap_CS_fsm_state25;
wire   [31:0] grp_fu_378_p1;
reg   [31:0] tmp_1_reg_3221;
wire   [31:0] grp_fu_369_p2;
reg   [31:0] rsrcf_reg_3226;
wire   [62:0] trunc_ln556_fu_528_p1;
reg   [62:0] trunc_ln556_reg_3232;
wire    ap_CS_fsm_state31;
reg   [0:0] p_Result_23_reg_3237;
reg   [10:0] exp_tmp_V_reg_3246;
wire   [51:0] trunc_ln565_fu_550_p1;
reg   [51:0] trunc_ln565_reg_3251;
wire   [62:0] trunc_ln556_1_fu_558_p1;
reg   [62:0] trunc_ln556_1_reg_3256;
reg   [0:0] p_Result_27_reg_3261;
reg   [10:0] exp_tmp_V_1_reg_3270;
wire   [51:0] trunc_ln565_1_fu_580_p1;
reg   [51:0] trunc_ln565_1_reg_3275;
wire   [11:0] zext_ln461_fu_584_p1;
reg   [11:0] zext_ln461_reg_3280;
wire    ap_CS_fsm_state32;
wire   [53:0] p_Val2_27_fu_604_p3;
reg   [53:0] p_Val2_27_reg_3285;
wire   [0:0] icmp_ln571_fu_611_p2;
reg   [0:0] icmp_ln571_reg_3294;
wire   [11:0] F2_fu_616_p2;
reg   [11:0] F2_reg_3302;
wire   [0:0] QUAN_INC_fu_622_p2;
reg   [0:0] QUAN_INC_reg_3311;
wire  signed [11:0] sh_amt_fu_640_p3;
reg  signed [11:0] sh_amt_reg_3317;
wire   [31:0] trunc_ln583_fu_648_p1;
reg   [31:0] trunc_ln583_reg_3323;
wire   [0:0] icmp_ln603_fu_662_p2;
reg   [0:0] icmp_ln603_reg_3329;
wire   [0:0] icmp_ln591_fu_668_p2;
reg   [0:0] icmp_ln591_reg_3335;
wire   [11:0] zext_ln461_1_fu_674_p1;
reg   [11:0] zext_ln461_1_reg_3340;
wire   [53:0] p_Val2_28_fu_694_p3;
reg   [53:0] p_Val2_28_reg_3345;
wire   [0:0] icmp_ln571_1_fu_701_p2;
reg   [0:0] icmp_ln571_1_reg_3354;
wire   [11:0] F2_1_fu_706_p2;
reg   [11:0] F2_1_reg_3362;
wire   [0:0] QUAN_INC_1_fu_712_p2;
reg   [0:0] QUAN_INC_1_reg_3371;
wire  signed [11:0] sh_amt_1_fu_730_p3;
reg  signed [11:0] sh_amt_1_reg_3377;
wire   [31:0] trunc_ln583_1_fu_738_p1;
reg   [31:0] trunc_ln583_1_reg_3383;
wire   [0:0] icmp_ln603_1_fu_752_p2;
reg   [0:0] icmp_ln603_1_reg_3389;
wire   [0:0] icmp_ln591_1_fu_758_p2;
reg   [0:0] icmp_ln591_1_reg_3395;
wire  signed [31:0] sext_ln581_fu_769_p1;
reg  signed [31:0] sext_ln581_reg_3400;
wire    ap_CS_fsm_state33;
wire   [31:0] p_Val2_9_fu_810_p3;
reg   [31:0] p_Val2_9_reg_3405;
reg   [0:0] p_Result_25_reg_3410;
wire   [0:0] empty_16_fu_839_p2;
reg   [0:0] empty_16_reg_3416;
wire  signed [11:0] pos1_fu_845_p2;
reg  signed [11:0] pos1_reg_3422;
reg   [0:0] tmp_17_reg_3429;
reg   [0:0] tmp_18_reg_3435;
wire   [0:0] icmp_ln631_fu_875_p2;
reg   [0:0] icmp_ln631_reg_3440;
wire   [53:0] zext_ln635_fu_881_p1;
reg   [53:0] zext_ln635_reg_3447;
wire   [53:0] Range2_V_1_fu_885_p2;
reg   [53:0] Range2_V_1_reg_3452;
wire   [0:0] icmp_ln642_fu_890_p2;
reg   [0:0] icmp_ln642_reg_3458;
wire  signed [31:0] sext_ln581_1_fu_901_p1;
reg  signed [31:0] sext_ln581_1_reg_3463;
wire   [31:0] p_Val2_18_fu_941_p3;
reg   [31:0] p_Val2_18_reg_3468;
reg   [0:0] p_Result_29_reg_3473;
wire   [0:0] empty_19_fu_970_p2;
reg   [0:0] empty_19_reg_3479;
wire  signed [11:0] pos1_1_fu_976_p2;
reg  signed [11:0] pos1_1_reg_3485;
reg   [0:0] tmp_26_reg_3492;
reg   [0:0] tmp_27_reg_3498;
wire   [0:0] icmp_ln631_1_fu_1006_p2;
reg   [0:0] icmp_ln631_1_reg_3503;
wire   [53:0] zext_ln635_1_fu_1012_p1;
reg   [53:0] zext_ln635_1_reg_3510;
wire   [53:0] Range2_V_3_fu_1016_p2;
reg   [53:0] Range2_V_3_reg_3515;
wire   [0:0] icmp_ln642_1_fu_1021_p2;
reg   [0:0] icmp_ln642_1_reg_3521;
wire   [31:0] select_ln403_1_fu_1119_p3;
reg   [31:0] select_ln403_1_reg_3526;
wire    ap_CS_fsm_state34;
wire   [0:0] and_ln603_fu_1132_p2;
reg   [0:0] and_ln603_reg_3531;
wire   [0:0] and_ln603_2_fu_1154_p2;
reg   [0:0] and_ln603_2_reg_3536;
wire   [0:0] icmp_ln621_fu_1163_p2;
reg   [0:0] icmp_ln621_reg_3542;
wire   [0:0] xor_ln621_2_fu_1168_p2;
reg   [0:0] xor_ln621_2_reg_3549;
wire   [0:0] Range1_all_ones_1_fu_1192_p2;
reg   [0:0] Range1_all_ones_1_reg_3556;
wire   [0:0] select_ln631_fu_1218_p3;
reg   [0:0] select_ln631_reg_3563;
wire   [0:0] icmp_ln641_fu_1226_p2;
reg   [0:0] icmp_ln641_reg_3569;
wire   [0:0] Range1_all_zeros_1_fu_1231_p2;
reg   [0:0] Range1_all_zeros_1_reg_3574;
wire   [0:0] and_ln642_fu_1246_p2;
reg   [0:0] and_ln642_reg_3579;
wire   [0:0] or_ln652_4_fu_1263_p2;
reg   [0:0] or_ln652_4_reg_3585;
wire   [31:0] select_ln403_3_fu_1361_p3;
reg   [31:0] select_ln403_3_reg_3591;
wire   [0:0] and_ln603_3_fu_1374_p2;
reg   [0:0] and_ln603_3_reg_3596;
wire   [0:0] and_ln603_5_fu_1396_p2;
reg   [0:0] and_ln603_5_reg_3601;
wire   [0:0] icmp_ln621_1_fu_1405_p2;
reg   [0:0] icmp_ln621_1_reg_3607;
wire   [0:0] xor_ln621_3_fu_1410_p2;
reg   [0:0] xor_ln621_3_reg_3614;
wire   [0:0] Range1_all_ones_3_fu_1434_p2;
reg   [0:0] Range1_all_ones_3_reg_3621;
wire   [0:0] select_ln631_1_fu_1460_p3;
reg   [0:0] select_ln631_1_reg_3628;
wire   [0:0] icmp_ln641_1_fu_1468_p2;
reg   [0:0] icmp_ln641_1_reg_3634;
wire   [0:0] Range1_all_zeros_3_fu_1473_p2;
reg   [0:0] Range1_all_zeros_3_reg_3639;
wire   [0:0] and_ln642_1_fu_1488_p2;
reg   [0:0] and_ln642_1_reg_3644;
wire   [0:0] or_ln652_5_fu_1505_p2;
reg   [0:0] or_ln652_5_reg_3650;
wire   [31:0] p_Val2_14_fu_1515_p3;
reg   [31:0] p_Val2_14_reg_3656;
wire    ap_CS_fsm_state35;
wire   [0:0] select_ln557_fu_1659_p3;
reg   [0:0] select_ln557_reg_3663;
wire   [0:0] overflow_fu_1689_p2;
reg   [0:0] overflow_reg_3669;
wire   [0:0] and_ln659_fu_1695_p2;
reg   [0:0] and_ln659_reg_3675;
wire   [31:0] p_Val2_20_fu_1705_p3;
reg   [31:0] p_Val2_20_reg_3681;
wire   [0:0] select_ln557_1_fu_1849_p3;
reg   [0:0] select_ln557_1_reg_3688;
wire   [0:0] overflow_1_fu_1879_p2;
reg   [0:0] overflow_1_reg_3694;
wire   [0:0] and_ln659_2_fu_1885_p2;
reg   [0:0] and_ln659_2_reg_3700;
wire   [31:0] currentData_lch_V_fu_1974_p3;
reg   [31:0] currentData_lch_V_reg_3706;
wire    ap_CS_fsm_state36;
wire   [31:0] currentData_rch_V_fu_2066_p3;
reg   [31:0] currentData_rch_V_reg_3711;
wire   [2:0] stageIndex_V_fu_2081_p2;
reg   [2:0] stageIndex_V_reg_3719;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln887_fu_2075_p2;
reg   [0:0] p_Result_31_reg_3735;
wire   [31:0] tmp_V_fu_2111_p2;
reg   [31:0] tmp_V_reg_3741;
wire   [3:0] trunc_ln132_fu_2117_p1;
reg   [3:0] trunc_ln132_reg_3746;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
wire   [0:0] icmp_ln935_fu_2124_p2;
wire   [31:0] tmp_V_4_fu_2129_p3;
reg   [31:0] tmp_V_4_reg_3761;
wire   [31:0] sub_ln944_fu_2152_p2;
reg   [31:0] sub_ln944_reg_3769;
wire   [5:0] trunc_ln947_fu_2158_p1;
reg   [5:0] trunc_ln947_reg_3776;
wire   [7:0] trunc_ln943_fu_2162_p1;
reg   [7:0] trunc_ln943_reg_3781;
reg   [0:0] p_Result_34_reg_3786;
wire   [31:0] tmp_V_2_fu_2174_p2;
reg   [31:0] tmp_V_2_reg_3792;
wire   [31:0] or_ln_fu_2266_p3;
reg   [31:0] or_ln_reg_3797;
wire    ap_CS_fsm_state41;
wire   [0:0] icmp_ln958_fu_2274_p2;
reg   [0:0] icmp_ln958_reg_3802;
wire   [0:0] icmp_ln935_1_fu_2280_p2;
wire   [31:0] tmp_V_5_fu_2285_p3;
reg   [31:0] tmp_V_5_reg_3812;
wire   [31:0] sub_ln944_1_fu_2308_p2;
reg   [31:0] sub_ln944_1_reg_3820;
wire   [5:0] trunc_ln947_1_fu_2314_p1;
reg   [5:0] trunc_ln947_1_reg_3827;
wire   [7:0] trunc_ln943_1_fu_2318_p1;
reg   [7:0] trunc_ln943_1_reg_3832;
reg   [30:0] m_reg_3837;
wire    ap_CS_fsm_state42;
reg   [0:0] tmp_32_reg_3842;
wire   [31:0] or_ln949_1_fu_2458_p3;
reg   [31:0] or_ln949_1_reg_3847;
wire   [0:0] icmp_ln958_1_fu_2466_p2;
reg   [0:0] icmp_ln958_1_reg_3852;
wire   [31:0] p_Result_33_fu_2500_p5;
reg   [31:0] p_Result_33_reg_3857;
wire    ap_CS_fsm_state43;
reg   [30:0] m_s_reg_3862;
reg   [0:0] tmp_36_reg_3867;
wire   [31:0] bitcast_ln739_fu_2562_p1;
wire    ap_CS_fsm_state44;
wire   [31:0] p_Result_36_fu_2594_p5;
reg   [31:0] p_Result_36_reg_3877;
wire   [31:0] bitcast_ln739_1_fu_2606_p1;
wire    ap_CS_fsm_state45;
wire   [31:0] reg_V_fu_2614_p3;
reg   [31:0] reg_V_reg_3887;
reg   [0:0] p_Result_37_reg_3892;
wire   [22:0] trunc_ln270_fu_2647_p1;
reg   [22:0] trunc_ln270_reg_3897;
wire   [0:0] icmp_ln278_fu_2651_p2;
reg   [0:0] icmp_ln278_reg_3902;
wire  signed [8:0] sh_amt_2_fu_2657_p2;
reg  signed [8:0] sh_amt_2_reg_3909;
wire   [0:0] icmp_ln282_fu_2663_p2;
reg   [0:0] icmp_ln282_reg_3917;
wire   [23:0] tmp_8_fu_2669_p3;
reg   [23:0] tmp_8_reg_3923;
wire    ap_CS_fsm_state49;
wire   [0:0] icmp_ln285_fu_2684_p2;
reg   [0:0] icmp_ln285_reg_3928;
wire  signed [8:0] sh_amt_3_fu_2689_p2;
reg  signed [8:0] sh_amt_3_reg_3933;
wire   [0:0] and_ln284_fu_2744_p2;
reg   [0:0] and_ln284_reg_3938;
wire   [23:0] select_ln285_fu_2756_p3;
reg   [23:0] select_ln285_reg_3943;
wire   [0:0] and_ln295_fu_2776_p2;
reg   [0:0] and_ln295_reg_3948;
wire   [31:0] reg_V_1_fu_2786_p3;
reg   [31:0] reg_V_1_reg_3953;
reg   [0:0] p_Result_38_reg_3958;
wire   [22:0] trunc_ln270_1_fu_2819_p1;
reg   [22:0] trunc_ln270_1_reg_3963;
wire   [0:0] icmp_ln278_1_fu_2823_p2;
reg   [0:0] icmp_ln278_1_reg_3968;
wire  signed [8:0] sh_amt_4_fu_2829_p2;
reg  signed [8:0] sh_amt_4_reg_3975;
wire   [0:0] icmp_ln282_1_fu_2835_p2;
reg   [0:0] icmp_ln282_1_reg_3983;
wire   [31:0] select_ln285_1_fu_2895_p3;
reg   [31:0] select_ln285_1_reg_3989;
wire    ap_CS_fsm_state50;
wire   [23:0] tmp_9_fu_2903_p3;
reg   [23:0] tmp_9_reg_3995;
wire   [0:0] icmp_ln285_1_fu_2918_p2;
reg   [0:0] icmp_ln285_1_reg_4000;
wire  signed [8:0] sh_amt_5_fu_2923_p2;
reg  signed [8:0] sh_amt_5_reg_4005;
wire   [0:0] and_ln284_1_fu_2978_p2;
reg   [0:0] and_ln284_1_reg_4010;
wire   [23:0] select_ln285_2_fu_2990_p3;
reg   [23:0] select_ln285_2_reg_4015;
wire   [0:0] and_ln295_1_fu_3010_p2;
reg   [0:0] and_ln295_1_reg_4020;
wire   [30:0] ret_V_3_fu_3016_p2;
reg   [30:0] ret_V_3_reg_4025;
wire   [31:0] select_ln303_fu_3026_p3;
reg   [31:0] select_ln303_reg_4030;
wire   [31:0] select_ln285_3_fu_3086_p3;
reg   [31:0] select_ln285_3_reg_4035;
wire   [31:0] select_ln303_1_fu_3109_p3;
reg   [31:0] select_ln303_1_reg_4048;
reg   [2:0] t_V_reg_309;
wire    ap_CS_fsm_state39;
reg   [0:0] ap_phi_mux_readyRch_flag_1_phi_fu_324_p6;
reg   [0:0] readyRch_flag_1_reg_320;
reg    ap_predicate_op619_writeresp_state58;
reg    ap_block_state58;
reg   [0:0] ap_phi_mux_readyRch_new_1_phi_fu_339_p6;
reg   [0:0] readyRch_new_1_reg_334;
reg   [0:0] ap_phi_mux_readyLch_flag_1_phi_fu_354_p6;
reg   [0:0] readyLch_flag_1_reg_350;
wire   [63:0] zext_ln129_fu_2095_p1;
wire   [63:0] zext_ln544_fu_420_p1;
wire   [63:0] zext_ln544_1_fu_476_p1;
wire   [63:0] zext_ln544_2_fu_3094_p1;
reg   [31:0] p_Val2_s_fu_228;
reg   [31:0] p_Val2_1_fu_232;
reg   [31:0] grp_fu_364_p0;
reg   [31:0] grp_fu_364_p1;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state30;
wire   [0:0] xor_ln107_fu_453_p2;
wire   [0:0] or_ln102_fu_443_p2;
wire   [0:0] and_ln107_fu_459_p2;
wire   [0:0] xor_ln107_1_fu_464_p2;
wire   [0:0] tmp_4_fu_486_p3;
wire   [31:0] ret_V_4_fu_493_p2;
wire   [0:0] tmp_10_fu_505_p3;
wire   [31:0] ret_V_5_fu_512_p2;
wire   [63:0] grp_fu_381_p1;
wire   [63:0] ireg_V_fu_524_p1;
wire   [63:0] grp_fu_384_p1;
wire   [63:0] ireg_V_1_fu_554_p1;
wire   [52:0] tmp_2_fu_587_p3;
wire   [53:0] p_Result_24_fu_594_p1;
wire   [53:0] man_V_1_fu_598_p2;
wire   [11:0] add_ln581_fu_628_p2;
wire   [11:0] sub_ln581_fu_634_p2;
wire   [6:0] tmp_12_fu_652_p4;
wire   [52:0] tmp_3_fu_677_p3;
wire   [53:0] p_Result_28_fu_684_p1;
wire   [53:0] man_V_4_fu_688_p2;
wire   [11:0] add_ln581_1_fu_718_p2;
wire   [11:0] sub_ln581_1_fu_724_p2;
wire   [6:0] tmp_21_fu_742_p4;
wire   [53:0] zext_ln586_fu_777_p1;
wire   [53:0] ashr_ln586_fu_781_p2;
wire   [31:0] bitcast_ln696_fu_790_p1;
wire   [0:0] tmp_13_fu_794_p3;
wire   [0:0] icmp_ln585_fu_772_p2;
wire   [31:0] trunc_ln586_fu_786_p1;
wire   [31:0] select_ln588_fu_802_p3;
wire   [11:0] tmp185_cast_cast_fu_826_p3;
wire   [11:0] exp_V_fu_764_p2;
wire   [11:0] empty_15_fu_833_p2;
wire  signed [11:0] pos2_fu_850_p2;
wire  signed [31:0] sext_ln619_fu_855_p1;
wire   [53:0] zext_ln586_1_fu_909_p1;
wire   [53:0] ashr_ln586_1_fu_913_p2;
wire   [31:0] bitcast_ln696_2_fu_922_p1;
wire   [0:0] tmp_22_fu_925_p3;
wire   [0:0] icmp_ln585_1_fu_904_p2;
wire   [31:0] trunc_ln586_1_fu_918_p1;
wire   [31:0] select_ln588_1_fu_933_p3;
wire   [11:0] tmp190_cast_cast_fu_957_p3;
wire   [11:0] exp_V_1_fu_896_p2;
wire   [11:0] empty_18_fu_964_p2;
wire  signed [11:0] pos2_1_fu_981_p2;
wire  signed [31:0] sext_ln619_1_fu_986_p1;
wire   [11:0] add_ln591_fu_1032_p2;
wire  signed [31:0] sext_ln591_fu_1037_p1;
wire   [0:0] p_Result_s_fu_1041_p3;
wire   [0:0] qb_fu_1048_p3;
wire   [31:0] zext_ln415_fu_1054_p1;
wire   [31:0] p_Val2_13_fu_1058_p2;
wire   [0:0] tmp_15_fu_1063_p3;
wire   [0:0] icmp_ln582_fu_1027_p2;
wire   [0:0] xor_ln582_fu_1084_p2;
wire   [0:0] and_ln578_fu_1090_p2;
wire   [0:0] and_ln403_fu_1095_p2;
wire   [31:0] select_ln582_fu_1077_p3;
wire   [0:0] xor_ln403_fu_1108_p2;
wire   [0:0] and_ln403_1_fu_1113_p2;
wire   [31:0] select_ln403_fu_1100_p3;
wire   [0:0] icmp_ln578_fu_1127_p2;
wire   [0:0] xor_ln416_fu_1071_p2;
wire   [0:0] and_ln603_1_fu_1143_p2;
wire   [0:0] and_ln403_2_fu_1137_p2;
wire   [0:0] xor_ln603_fu_1148_p2;
wire  signed [31:0] sext_ln618_fu_1160_p1;
wire   [53:0] zext_ln623_fu_1173_p1;
wire   [53:0] ashr_ln623_fu_1177_p2;
wire   [0:0] lD_fu_1182_p1;
wire   [0:0] and_ln621_fu_1186_p2;
wire   [0:0] xor_ln631_fu_1198_p2;
wire   [53:0] r_V_fu_1208_p2;
wire   [0:0] and_ln631_fu_1203_p2;
wire   [0:0] Range2_all_ones_fu_1213_p2;
wire   [0:0] xor_ln639_2_fu_1236_p2;
wire   [0:0] or_ln639_fu_1241_p2;
wire   [0:0] xor_ln652_4_fu_1251_p2;
wire   [0:0] or_ln652_6_fu_1257_p2;
wire   [11:0] add_ln591_1_fu_1274_p2;
wire  signed [31:0] sext_ln591_1_fu_1279_p1;
wire   [0:0] p_Result_5_fu_1283_p3;
wire   [0:0] qb_1_fu_1290_p3;
wire   [31:0] zext_ln415_1_fu_1296_p1;
wire   [31:0] p_Val2_19_fu_1300_p2;
wire   [0:0] tmp_24_fu_1305_p3;
wire   [0:0] icmp_ln582_1_fu_1269_p2;
wire   [0:0] xor_ln582_1_fu_1326_p2;
wire   [0:0] and_ln578_1_fu_1332_p2;
wire   [0:0] and_ln403_3_fu_1337_p2;
wire   [31:0] select_ln582_1_fu_1319_p3;
wire   [0:0] xor_ln403_1_fu_1350_p2;
wire   [0:0] and_ln403_4_fu_1355_p2;
wire   [31:0] select_ln403_2_fu_1342_p3;
wire   [0:0] icmp_ln578_2_fu_1369_p2;
wire   [0:0] xor_ln416_1_fu_1313_p2;
wire   [0:0] and_ln603_4_fu_1385_p2;
wire   [0:0] and_ln403_5_fu_1379_p2;
wire   [0:0] xor_ln603_1_fu_1390_p2;
wire  signed [31:0] sext_ln618_1_fu_1402_p1;
wire   [53:0] zext_ln623_1_fu_1415_p1;
wire   [53:0] ashr_ln623_1_fu_1419_p2;
wire   [0:0] lD_1_fu_1424_p1;
wire   [0:0] and_ln621_4_fu_1428_p2;
wire   [0:0] xor_ln631_1_fu_1440_p2;
wire   [53:0] r_V_1_fu_1450_p2;
wire   [0:0] and_ln631_1_fu_1445_p2;
wire   [0:0] Range2_all_ones_1_fu_1455_p2;
wire   [0:0] xor_ln639_fu_1478_p2;
wire   [0:0] or_ln639_1_fu_1483_p2;
wire   [0:0] xor_ln652_5_fu_1493_p2;
wire   [0:0] or_ln652_7_fu_1499_p2;
wire   [31:0] shl_ln604_fu_1511_p2;
wire   [0:0] Range1_all_zeros_fu_1537_p2;
wire   [0:0] and_ln639_fu_1529_p2;
wire   [0:0] Range1_all_ones_fu_1533_p2;
wire   [0:0] select_ln642_fu_1551_p3;
wire   [0:0] or_ln645_fu_1547_p2;
wire   [0:0] and_ln641_fu_1542_p2;
wire   [0:0] select_ln642_1_fu_1564_p3;
wire   [0:0] select_ln639_fu_1556_p3;
wire   [0:0] select_ln639_1_fu_1571_p3;
wire   [0:0] xor_ln652_1_fu_1586_p2;
wire   [0:0] tmp_19_fu_1601_p3;
wire   [0:0] or_ln652_fu_1591_p2;
wire   [0:0] and_ln652_fu_1596_p2;
wire   [0:0] or_ln652_1_fu_1608_p2;
wire   [0:0] and_ln654_fu_1622_p2;
wire   [0:0] deleted_ones_fu_1614_p3;
wire   [0:0] xor_ln621_fu_1633_p2;
wire   [0:0] p_Result_26_fu_1521_p3;
wire   [0:0] and_ln621_2_fu_1644_p2;
wire   [0:0] and_ln557_fu_1655_p2;
wire   [0:0] empty_17_fu_1627_p2;
wire   [0:0] and_ln621_3_fu_1650_p2;
wire   [0:0] deleted_zeros_fu_1579_p3;
wire   [0:0] xor_ln658_2_fu_1667_p2;
wire   [0:0] and_ln658_fu_1673_p2;
wire   [0:0] or_ln658_fu_1678_p2;
wire   [0:0] xor_ln658_1_fu_1684_p2;
wire   [0:0] or_ln557_fu_1638_p2;
wire   [31:0] shl_ln604_1_fu_1701_p2;
wire   [0:0] Range1_all_zeros_2_fu_1727_p2;
wire   [0:0] and_ln639_1_fu_1719_p2;
wire   [0:0] Range1_all_ones_2_fu_1723_p2;
wire   [0:0] select_ln642_2_fu_1741_p3;
wire   [0:0] or_ln645_1_fu_1737_p2;
wire   [0:0] and_ln641_1_fu_1732_p2;
wire   [0:0] select_ln642_3_fu_1754_p3;
wire   [0:0] select_ln639_2_fu_1746_p3;
wire   [0:0] select_ln639_3_fu_1761_p3;
wire   [0:0] xor_ln652_3_fu_1776_p2;
wire   [0:0] tmp_28_fu_1791_p3;
wire   [0:0] or_ln652_2_fu_1781_p2;
wire   [0:0] and_ln652_1_fu_1786_p2;
wire   [0:0] or_ln652_3_fu_1798_p2;
wire   [0:0] and_ln654_1_fu_1812_p2;
wire   [0:0] deleted_ones_1_fu_1804_p3;
wire   [0:0] xor_ln621_1_fu_1823_p2;
wire   [0:0] p_Result_30_fu_1711_p3;
wire   [0:0] and_ln621_6_fu_1834_p2;
wire   [0:0] and_ln557_1_fu_1845_p2;
wire   [0:0] empty_20_fu_1817_p2;
wire   [0:0] and_ln621_7_fu_1840_p2;
wire   [0:0] deleted_zeros_1_fu_1769_p3;
wire   [0:0] xor_ln658_fu_1857_p2;
wire   [0:0] and_ln658_2_fu_1863_p2;
wire   [0:0] or_ln658_1_fu_1868_p2;
wire   [0:0] xor_ln658_3_fu_1874_p2;
wire   [0:0] or_ln557_1_fu_1828_p2;
wire   [0:0] xor_ln659_fu_1891_p2;
wire   [0:0] underflow_fu_1896_p2;
wire   [0:0] xor_ln340_fu_1906_p2;
wire   [0:0] or_ln340_2_fu_1911_p2;
wire   [0:0] or_ln340_fu_1901_p2;
wire   [0:0] or_ln571_fu_1935_p2;
wire   [31:0] select_ln571_fu_1928_p3;
wire   [0:0] sel_tmp57_demorgan_fu_1947_p2;
wire   [31:0] select_ln571_1_fu_1940_p3;
wire   [0:0] or_ln340_3_fu_1916_p2;
wire   [0:0] xor_ln571_fu_1958_p2;
wire   [0:0] and_ln340_fu_1963_p2;
wire   [0:0] and_ln340_1_fu_1969_p2;
wire   [31:0] select_ln340_fu_1921_p3;
wire   [31:0] sel_tmp58_fu_1951_p3;
wire   [0:0] xor_ln659_1_fu_1983_p2;
wire   [0:0] underflow_1_fu_1988_p2;
wire   [0:0] xor_ln340_1_fu_1998_p2;
wire   [0:0] or_ln340_4_fu_2003_p2;
wire   [0:0] or_ln340_1_fu_1993_p2;
wire   [0:0] or_ln571_1_fu_2027_p2;
wire   [31:0] select_ln571_2_fu_2020_p3;
wire   [0:0] sel_tmp122_demorgan_fu_2039_p2;
wire   [31:0] select_ln571_3_fu_2032_p3;
wire   [0:0] or_ln340_5_fu_2008_p2;
wire   [0:0] xor_ln571_1_fu_2050_p2;
wire   [0:0] and_ln340_2_fu_2055_p2;
wire   [0:0] and_ln340_3_fu_2061_p2;
wire   [31:0] select_ln340_1_fu_2013_p3;
wire   [31:0] sel_tmp123_fu_2043_p3;
wire   [4:0] tmp_6_fu_2087_p3;
reg   [31:0] p_Result_32_fu_2134_p4;
reg   [31:0] l_fu_2144_p3;
wire   [31:0] lsb_index_fu_2180_p2;
wire   [30:0] tmp_30_fu_2185_p4;
wire   [5:0] sub_ln947_fu_2201_p2;
wire   [31:0] zext_ln947_fu_2206_p1;
wire   [31:0] lshr_ln947_fu_2210_p2;
wire   [31:0] p_Result_12_fu_2216_p2;
wire   [0:0] icmp_ln947_fu_2195_p2;
wire   [0:0] icmp_ln947_1_fu_2221_p2;
wire   [0:0] tmp_31_fu_2233_p3;
wire   [0:0] p_Result_6_fu_2247_p3;
wire   [0:0] xor_ln949_fu_2241_p2;
wire   [0:0] and_ln949_fu_2254_p2;
wire   [0:0] a_fu_2227_p2;
wire   [0:0] or_ln949_2_fu_2260_p2;
reg   [31:0] p_Result_35_fu_2290_p4;
reg   [31:0] l_1_fu_2300_p3;
wire   [31:0] add_ln958_fu_2322_p2;
wire   [31:0] sub_ln958_fu_2332_p2;
wire   [31:0] lshr_ln958_fu_2327_p2;
wire   [31:0] shl_ln958_fu_2337_p2;
wire   [31:0] m_2_fu_2342_p3;
wire   [31:0] m_3_fu_2349_p2;
wire   [31:0] lsb_index_1_fu_2372_p2;
wire   [30:0] tmp_34_fu_2377_p4;
wire   [5:0] sub_ln947_1_fu_2393_p2;
wire   [31:0] zext_ln947_1_fu_2398_p1;
wire   [31:0] lshr_ln947_1_fu_2402_p2;
wire   [31:0] p_Result_18_fu_2408_p2;
wire   [0:0] icmp_ln947_2_fu_2387_p2;
wire   [0:0] icmp_ln947_3_fu_2413_p2;
wire   [0:0] tmp_35_fu_2425_p3;
wire   [0:0] p_Result_19_fu_2439_p3;
wire   [0:0] xor_ln949_1_fu_2433_p2;
wire   [0:0] and_ln949_1_fu_2446_p2;
wire   [0:0] a_1_fu_2419_p2;
wire   [0:0] or_ln949_fu_2452_p2;
wire   [7:0] sub_ln964_fu_2482_p2;
wire   [7:0] select_ln964_fu_2475_p3;
wire   [7:0] add_ln964_fu_2487_p2;
wire   [31:0] m_11_fu_2472_p1;
wire   [8:0] tmp_5_fu_2493_p3;
wire   [31:0] add_ln958_1_fu_2512_p2;
wire   [31:0] sub_ln958_1_fu_2522_p2;
wire   [31:0] lshr_ln958_1_fu_2517_p2;
wire   [31:0] shl_ln958_1_fu_2527_p2;
wire   [31:0] m_7_fu_2532_p3;
wire   [31:0] m_8_fu_2539_p2;
wire   [7:0] sub_ln964_1_fu_2576_p2;
wire   [7:0] select_ln964_1_fu_2569_p3;
wire   [7:0] add_ln964_1_fu_2581_p2;
wire   [31:0] m_12_fu_2566_p1;
wire   [8:0] tmp_7_fu_2587_p3;
wire   [31:0] bitcast_ln705_fu_2610_p1;
wire   [7:0] p_Result_s_22_fu_2633_p4;
wire   [30:0] trunc_ln262_fu_2621_p1;
wire   [8:0] exp_V_2_fu_2643_p1;
wire   [3:0] tmp_38_fu_2694_p4;
wire  signed [23:0] sext_ln281_fu_2676_p1;
wire   [0:0] xor_ln278_fu_2716_p2;
wire   [0:0] and_ln282_fu_2721_p2;
wire   [0:0] or_ln282_fu_2734_p2;
wire   [0:0] icmp_ln284_fu_2679_p2;
wire   [0:0] xor_ln282_fu_2738_p2;
wire   [0:0] and_ln285_fu_2750_p2;
wire   [23:0] lshr_ln286_fu_2710_p2;
wire   [23:0] select_ln282_fu_2726_p3;
wire   [0:0] or_ln284_fu_2764_p2;
wire   [0:0] icmp_ln295_fu_2704_p2;
wire   [0:0] xor_ln284_fu_2770_p2;
wire   [31:0] bitcast_ln705_1_fu_2782_p1;
wire   [7:0] p_Result_1_fu_2805_p4;
wire   [30:0] trunc_ln262_1_fu_2793_p1;
wire   [8:0] exp_V_3_fu_2815_p1;
wire   [0:0] tmp_39_fu_2847_p3;
wire   [31:0] zext_ln283_fu_2841_p1;
wire  signed [31:0] sext_ln294_fu_2844_p1;
wire   [31:0] shl_ln297_fu_2862_p2;
wire   [31:0] zext_ln285_fu_2868_p1;
wire   [31:0] select_ln295_fu_2871_p3;
wire   [0:0] xor_ln285_fu_2885_p2;
wire   [0:0] and_ln285_1_fu_2890_p2;
wire   [31:0] select_ln288_fu_2854_p3;
wire   [31:0] select_ln278_fu_2878_p3;
wire   [3:0] tmp_41_fu_2928_p4;
wire  signed [23:0] sext_ln281_1_fu_2910_p1;
wire   [0:0] xor_ln278_1_fu_2950_p2;
wire   [0:0] and_ln282_1_fu_2955_p2;
wire   [0:0] or_ln282_1_fu_2968_p2;
wire   [0:0] icmp_ln284_1_fu_2913_p2;
wire   [0:0] xor_ln282_1_fu_2972_p2;
wire   [0:0] and_ln285_2_fu_2984_p2;
wire   [23:0] lshr_ln286_1_fu_2944_p2;
wire   [23:0] select_ln282_1_fu_2960_p3;
wire   [0:0] or_ln284_1_fu_2998_p2;
wire   [0:0] icmp_ln295_1_fu_2938_p2;
wire   [0:0] xor_ln284_1_fu_3004_p2;
wire   [31:0] sub_ln461_fu_3021_p2;
wire   [0:0] tmp_42_fu_3038_p3;
wire   [31:0] zext_ln283_1_fu_3032_p1;
wire  signed [31:0] sext_ln294_1_fu_3035_p1;
wire   [31:0] shl_ln297_1_fu_3053_p2;
wire   [31:0] zext_ln285_1_fu_3059_p1;
wire   [31:0] select_ln295_1_fu_3062_p3;
wire   [0:0] xor_ln285_1_fu_3076_p2;
wire   [0:0] and_ln285_3_fu_3081_p2;
wire   [31:0] select_ln288_1_fu_3045_p3;
wire   [31:0] select_ln278_1_fu_3069_p3;
wire   [31:0] sub_ln461_1_fu_3104_p2;
reg   [57:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 58'd1;
#0 lrclk_V_0_data_reg = 1'd0;
#0 lrclk_V_0_vld_reg = 1'b0;
#0 readyRch = 1'd0;
#0 readyLch = 1'd0;
end

pynq_dsp_hls_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
pynq_dsp_hls_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .basePhysAddr_V(basePhysAddr_V),
    .configReg_address0(configReg_address0),
    .configReg_ce0(configReg_ce0),
    .configReg_q0(configReg_q0)
);

pynq_dsp_hls_physMemPtr_V_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_PHYSMEMPTR_V_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_PHYSMEMPTR_V_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_PHYSMEMPTR_V_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_PHYSMEMPTR_V_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_PHYSMEMPTR_V_CACHE_VALUE ))
pynq_dsp_hls_physMemPtr_V_m_axi_U(
    .AWVALID(m_axi_physMemPtr_V_AWVALID),
    .AWREADY(m_axi_physMemPtr_V_AWREADY),
    .AWADDR(m_axi_physMemPtr_V_AWADDR),
    .AWID(m_axi_physMemPtr_V_AWID),
    .AWLEN(m_axi_physMemPtr_V_AWLEN),
    .AWSIZE(m_axi_physMemPtr_V_AWSIZE),
    .AWBURST(m_axi_physMemPtr_V_AWBURST),
    .AWLOCK(m_axi_physMemPtr_V_AWLOCK),
    .AWCACHE(m_axi_physMemPtr_V_AWCACHE),
    .AWPROT(m_axi_physMemPtr_V_AWPROT),
    .AWQOS(m_axi_physMemPtr_V_AWQOS),
    .AWREGION(m_axi_physMemPtr_V_AWREGION),
    .AWUSER(m_axi_physMemPtr_V_AWUSER),
    .WVALID(m_axi_physMemPtr_V_WVALID),
    .WREADY(m_axi_physMemPtr_V_WREADY),
    .WDATA(m_axi_physMemPtr_V_WDATA),
    .WSTRB(m_axi_physMemPtr_V_WSTRB),
    .WLAST(m_axi_physMemPtr_V_WLAST),
    .WID(m_axi_physMemPtr_V_WID),
    .WUSER(m_axi_physMemPtr_V_WUSER),
    .ARVALID(m_axi_physMemPtr_V_ARVALID),
    .ARREADY(m_axi_physMemPtr_V_ARREADY),
    .ARADDR(m_axi_physMemPtr_V_ARADDR),
    .ARID(m_axi_physMemPtr_V_ARID),
    .ARLEN(m_axi_physMemPtr_V_ARLEN),
    .ARSIZE(m_axi_physMemPtr_V_ARSIZE),
    .ARBURST(m_axi_physMemPtr_V_ARBURST),
    .ARLOCK(m_axi_physMemPtr_V_ARLOCK),
    .ARCACHE(m_axi_physMemPtr_V_ARCACHE),
    .ARPROT(m_axi_physMemPtr_V_ARPROT),
    .ARQOS(m_axi_physMemPtr_V_ARQOS),
    .ARREGION(m_axi_physMemPtr_V_ARREGION),
    .ARUSER(m_axi_physMemPtr_V_ARUSER),
    .RVALID(m_axi_physMemPtr_V_RVALID),
    .RREADY(m_axi_physMemPtr_V_RREADY),
    .RDATA(m_axi_physMemPtr_V_RDATA),
    .RLAST(m_axi_physMemPtr_V_RLAST),
    .RID(m_axi_physMemPtr_V_RID),
    .RUSER(m_axi_physMemPtr_V_RUSER),
    .RRESP(m_axi_physMemPtr_V_RRESP),
    .BVALID(m_axi_physMemPtr_V_BVALID),
    .BREADY(m_axi_physMemPtr_V_BREADY),
    .BRESP(m_axi_physMemPtr_V_BRESP),
    .BID(m_axi_physMemPtr_V_BID),
    .BUSER(m_axi_physMemPtr_V_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(physMemPtr_V_ARVALID),
    .I_ARREADY(physMemPtr_V_ARREADY),
    .I_ARADDR(physMemPtr_V_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(physMemPtr_V_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(physMemPtr_V_RVALID),
    .I_RREADY(physMemPtr_V_RREADY),
    .I_RDATA(physMemPtr_V_RDATA),
    .I_RID(physMemPtr_V_RID),
    .I_RUSER(physMemPtr_V_RUSER),
    .I_RRESP(physMemPtr_V_RRESP),
    .I_RLAST(physMemPtr_V_RLAST),
    .I_AWVALID(physMemPtr_V_AWVALID),
    .I_AWREADY(physMemPtr_V_AWREADY),
    .I_AWADDR(physMemPtr_V_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd2),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(physMemPtr_V_WVALID),
    .I_WREADY(physMemPtr_V_WREADY),
    .I_WDATA(physMemPtr_V_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(physMemPtr_V_BVALID),
    .I_BREADY(physMemPtr_V_BREADY),
    .I_BRESP(physMemPtr_V_BRESP),
    .I_BID(physMemPtr_V_BID),
    .I_BUSER(physMemPtr_V_BUSER)
);

pynq_dsp_hls_fmulbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_364_p0),
    .din1(grp_fu_364_p1),
    .ce(1'b1),
    .dout(grp_fu_364_p2)
);

pynq_dsp_hls_fmulbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_1_reg_3221),
    .din1(32'd872415232),
    .ce(1'b1),
    .dout(grp_fu_369_p2)
);

pynq_dsp_hls_sitocud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_sitocud_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(lsignExt_V_1_reg_3206),
    .ce(1'b1),
    .dout(grp_fu_375_p1)
);

pynq_dsp_hls_sitocud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_sitocud_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(rsignExt_V_1_reg_3211),
    .ce(1'b1),
    .dout(grp_fu_378_p1)
);

pynq_dsp_hls_fpexdEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
pynq_dsp_hls_fpexdEe_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_395),
    .ce(1'b1),
    .dout(grp_fu_381_p1)
);

pynq_dsp_hls_fpexdEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
pynq_dsp_hls_fpexdEe_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(rsrcf_reg_3226),
    .ce(1'b1),
    .dout(grp_fu_384_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state39) & ((trunc_ln132_reg_3746 == 4'd2) | ((trunc_ln132_reg_3746 == 4'd3) | ((trunc_ln132_reg_3746 == 4'd4) | ((trunc_ln132_reg_3746 == 4'd5) | ((trunc_ln132_reg_3746 == 4'd6) | ((trunc_ln132_reg_3746 == 4'd7) | ((trunc_ln132_reg_3746 == 4'd8) | (trunc_ln132_reg_3746 == 4'd9))))))))) | ((trunc_ln132_fu_2117_p1 == 4'd0) & (1'b1 == ap_CS_fsm_state38)))) begin
        p_Val2_1_fu_232 <= currentData_rch_V_reg_3711;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        p_Val2_1_fu_232 <= currentData_rch_V_fu_2066_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state39) & ((trunc_ln132_reg_3746 == 4'd2) | ((trunc_ln132_reg_3746 == 4'd3) | ((trunc_ln132_reg_3746 == 4'd4) | ((trunc_ln132_reg_3746 == 4'd5) | ((trunc_ln132_reg_3746 == 4'd6) | ((trunc_ln132_reg_3746 == 4'd7) | ((trunc_ln132_reg_3746 == 4'd8) | (trunc_ln132_reg_3746 == 4'd9))))))))) | ((trunc_ln132_fu_2117_p1 == 4'd0) & (1'b1 == ap_CS_fsm_state38)))) begin
        p_Val2_s_fu_228 <= currentData_lch_V_reg_3706;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        p_Val2_s_fu_228 <= currentData_lch_V_fu_1974_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (or_ln107_fu_470_p2 == 1'd1) & (icmp_ln761_fu_430_p2 == 1'd0))) begin
        readyLch_flag_1_reg_350 <= xor_ln102_fu_448_p2;
    end else if ((~((ap_predicate_op619_writeresp_state58 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state58) & (or_ln107_reg_3170 == 1'd0) & (icmp_ln761_reg_3161 == 1'd0))) begin
        readyLch_flag_1_reg_350 <= 1'd1;
    end else if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln761_fu_430_p2 == 1'd1))) begin
        readyLch_flag_1_reg_350 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (or_ln107_fu_470_p2 == 1'd1) & (icmp_ln761_fu_430_p2 == 1'd0))) begin
        readyRch_flag_1_reg_320 <= lrclk_V_0_data_reg;
    end else if ((~((ap_predicate_op619_writeresp_state58 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state58) & (or_ln107_reg_3170 == 1'd0) & (icmp_ln761_reg_3161 == 1'd0))) begin
        readyRch_flag_1_reg_320 <= 1'd1;
    end else if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln761_fu_430_p2 == 1'd1))) begin
        readyRch_flag_1_reg_320 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (or_ln107_fu_470_p2 == 1'd1) & (icmp_ln761_fu_430_p2 == 1'd0))) begin
        readyRch_new_1_reg_334 <= 1'd1;
    end else if ((~((ap_predicate_op619_writeresp_state58 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state58) & (or_ln107_reg_3170 == 1'd0) & (icmp_ln761_reg_3161 == 1'd0))) begin
        readyRch_new_1_reg_334 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        t_V_reg_309 <= stageIndex_V_reg_3719;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        t_V_reg_309 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        F2_1_reg_3362 <= F2_1_fu_706_p2;
        F2_reg_3302 <= F2_fu_616_p2;
        QUAN_INC_1_reg_3371 <= QUAN_INC_1_fu_712_p2;
        QUAN_INC_reg_3311 <= QUAN_INC_fu_622_p2;
        icmp_ln571_1_reg_3354 <= icmp_ln571_1_fu_701_p2;
        icmp_ln571_reg_3294 <= icmp_ln571_fu_611_p2;
        icmp_ln591_1_reg_3395 <= icmp_ln591_1_fu_758_p2;
        icmp_ln591_reg_3335 <= icmp_ln591_fu_668_p2;
        icmp_ln603_1_reg_3389 <= icmp_ln603_1_fu_752_p2;
        icmp_ln603_reg_3329 <= icmp_ln603_fu_662_p2;
        p_Val2_27_reg_3285 <= p_Val2_27_fu_604_p3;
        p_Val2_28_reg_3345 <= p_Val2_28_fu_694_p3;
        sh_amt_1_reg_3377 <= sh_amt_1_fu_730_p3;
        sh_amt_reg_3317 <= sh_amt_fu_640_p3;
        trunc_ln583_1_reg_3383 <= trunc_ln583_1_fu_738_p1;
        trunc_ln583_reg_3323 <= trunc_ln583_fu_648_p1;
        zext_ln461_1_reg_3340[10 : 0] <= zext_ln461_1_fu_674_p1[10 : 0];
        zext_ln461_reg_3280[10 : 0] <= zext_ln461_fu_584_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        Range1_all_ones_1_reg_3556 <= Range1_all_ones_1_fu_1192_p2;
        Range1_all_ones_3_reg_3621 <= Range1_all_ones_3_fu_1434_p2;
        Range1_all_zeros_1_reg_3574 <= Range1_all_zeros_1_fu_1231_p2;
        Range1_all_zeros_3_reg_3639 <= Range1_all_zeros_3_fu_1473_p2;
        and_ln603_2_reg_3536 <= and_ln603_2_fu_1154_p2;
        and_ln603_3_reg_3596 <= and_ln603_3_fu_1374_p2;
        and_ln603_5_reg_3601 <= and_ln603_5_fu_1396_p2;
        and_ln603_reg_3531 <= and_ln603_fu_1132_p2;
        and_ln642_1_reg_3644 <= and_ln642_1_fu_1488_p2;
        and_ln642_reg_3579 <= and_ln642_fu_1246_p2;
        icmp_ln621_1_reg_3607 <= icmp_ln621_1_fu_1405_p2;
        icmp_ln621_reg_3542 <= icmp_ln621_fu_1163_p2;
        icmp_ln641_1_reg_3634 <= icmp_ln641_1_fu_1468_p2;
        icmp_ln641_reg_3569 <= icmp_ln641_fu_1226_p2;
        or_ln652_4_reg_3585 <= or_ln652_4_fu_1263_p2;
        or_ln652_5_reg_3650 <= or_ln652_5_fu_1505_p2;
        select_ln403_1_reg_3526 <= select_ln403_1_fu_1119_p3;
        select_ln403_3_reg_3591 <= select_ln403_3_fu_1361_p3;
        select_ln631_1_reg_3628 <= select_ln631_1_fu_1460_p3;
        select_ln631_reg_3563 <= select_ln631_fu_1218_p3;
        xor_ln621_2_reg_3549 <= xor_ln621_2_fu_1168_p2;
        xor_ln621_3_reg_3614 <= xor_ln621_3_fu_1410_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        Range2_V_1_reg_3452 <= Range2_V_1_fu_885_p2;
        Range2_V_3_reg_3515 <= Range2_V_3_fu_1016_p2;
        empty_16_reg_3416 <= empty_16_fu_839_p2;
        empty_19_reg_3479 <= empty_19_fu_970_p2;
        icmp_ln631_1_reg_3503 <= icmp_ln631_1_fu_1006_p2;
        icmp_ln631_reg_3440 <= icmp_ln631_fu_875_p2;
        icmp_ln642_1_reg_3521 <= icmp_ln642_1_fu_1021_p2;
        icmp_ln642_reg_3458 <= icmp_ln642_fu_890_p2;
        p_Result_25_reg_3410 <= p_Val2_9_fu_810_p3[32'd31];
        p_Result_29_reg_3473 <= p_Val2_18_fu_941_p3[32'd31];
        p_Val2_18_reg_3468 <= p_Val2_18_fu_941_p3;
        p_Val2_9_reg_3405 <= p_Val2_9_fu_810_p3;
        pos1_1_reg_3485 <= pos1_1_fu_976_p2;
        pos1_reg_3422 <= pos1_fu_845_p2;
        sext_ln581_1_reg_3463 <= sext_ln581_1_fu_901_p1;
        sext_ln581_reg_3400 <= sext_ln581_fu_769_p1;
        tmp_17_reg_3429 <= pos1_fu_845_p2[32'd11];
        tmp_18_reg_3435 <= pos2_fu_850_p2[32'd11];
        tmp_26_reg_3492 <= pos1_1_fu_976_p2[32'd11];
        tmp_27_reg_3498 <= pos2_1_fu_981_p2[32'd11];
        zext_ln635_1_reg_3510[31 : 0] <= zext_ln635_1_fu_1012_p1[31 : 0];
        zext_ln635_reg_3447[31 : 0] <= zext_ln635_fu_881_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        and_ln284_1_reg_4010 <= and_ln284_1_fu_2978_p2;
        icmp_ln285_1_reg_4000 <= icmp_ln285_1_fu_2918_p2;
        ret_V_3_reg_4025 <= ret_V_3_fu_3016_p2;
        select_ln285_1_reg_3989 <= select_ln285_1_fu_2895_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        and_ln284_reg_3938 <= and_ln284_fu_2744_p2;
        icmp_ln278_1_reg_3968 <= icmp_ln278_1_fu_2823_p2;
        icmp_ln282_1_reg_3983 <= icmp_ln282_1_fu_2835_p2;
        icmp_ln285_reg_3928 <= icmp_ln285_fu_2684_p2;
        p_Result_38_reg_3958 <= reg_V_1_fu_2786_p3[32'd31];
        reg_V_1_reg_3953 <= reg_V_1_fu_2786_p3;
        sh_amt_4_reg_3975 <= sh_amt_4_fu_2829_p2;
        trunc_ln270_1_reg_3963 <= trunc_ln270_1_fu_2819_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) & (icmp_ln278_1_reg_3968 == 1'd0))) begin
        and_ln295_1_reg_4020 <= and_ln295_1_fu_3010_p2;
        select_ln285_2_reg_4015 <= select_ln285_2_fu_2990_p3;
        sh_amt_5_reg_4005 <= sh_amt_5_fu_2923_p2;
        tmp_9_reg_3995[22 : 0] <= tmp_9_fu_2903_p3[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln278_reg_3902 == 1'd0))) begin
        and_ln295_reg_3948 <= and_ln295_fu_2776_p2;
        select_ln285_reg_3943 <= select_ln285_fu_2756_p3;
        sh_amt_3_reg_3933 <= sh_amt_3_fu_2689_p2;
        tmp_8_reg_3923[22 : 0] <= tmp_8_fu_2669_p3[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        and_ln659_2_reg_3700 <= and_ln659_2_fu_1885_p2;
        and_ln659_reg_3675 <= and_ln659_fu_1695_p2;
        overflow_1_reg_3694 <= overflow_1_fu_1879_p2;
        overflow_reg_3669 <= overflow_fu_1689_p2;
        p_Val2_14_reg_3656 <= p_Val2_14_fu_1515_p3;
        p_Val2_20_reg_3681 <= p_Val2_20_fu_1705_p3;
        select_ln557_1_reg_3688 <= select_ln557_1_fu_1849_p3;
        select_ln557_reg_3663 <= select_ln557_fu_1659_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        currentData_lch_V_reg_3706 <= currentData_lch_V_fu_1974_p3;
        currentData_rch_V_reg_3711 <= currentData_rch_V_fu_2066_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        exp_tmp_V_1_reg_3270 <= {{ireg_V_1_fu_554_p1[62:52]}};
        exp_tmp_V_reg_3246 <= {{ireg_V_fu_524_p1[62:52]}};
        p_Result_23_reg_3237 <= ireg_V_fu_524_p1[32'd63];
        p_Result_27_reg_3261 <= ireg_V_1_fu_554_p1[32'd63];
        trunc_ln556_1_reg_3256 <= trunc_ln556_1_fu_558_p1;
        trunc_ln556_reg_3232 <= trunc_ln556_fu_528_p1;
        trunc_ln565_1_reg_3275 <= trunc_ln565_1_fu_580_p1;
        trunc_ln565_reg_3251 <= trunc_ln565_fu_550_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        icmp_ln278_reg_3902 <= icmp_ln278_fu_2651_p2;
        icmp_ln282_reg_3917 <= icmp_ln282_fu_2663_p2;
        p_Result_37_reg_3892 <= reg_V_fu_2614_p3[32'd31];
        reg_V_reg_3887 <= reg_V_fu_2614_p3;
        sh_amt_2_reg_3909 <= sh_amt_2_fu_2657_p2;
        trunc_ln270_reg_3897 <= trunc_ln270_fu_2647_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln761_reg_3161 <= icmp_ln761_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        icmp_ln935_1_reg_3807 <= icmp_ln935_1_fu_2280_p2;
        sub_ln944_1_reg_3820 <= sub_ln944_1_fu_2308_p2;
        tmp_V_5_reg_3812 <= tmp_V_5_fu_2285_p3;
        trunc_ln943_1_reg_3832 <= trunc_ln943_1_fu_2318_p1;
        trunc_ln947_1_reg_3827 <= trunc_ln947_1_fu_2314_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        icmp_ln935_reg_3756 <= icmp_ln935_fu_2124_p2;
        p_Result_34_reg_3786 <= p_Val2_1_fu_232[32'd31];
        sub_ln944_reg_3769 <= sub_ln944_fu_2152_p2;
        tmp_V_2_reg_3792 <= tmp_V_2_fu_2174_p2;
        tmp_V_4_reg_3761 <= tmp_V_4_fu_2129_p3;
        trunc_ln943_reg_3781 <= trunc_ln943_fu_2162_p1;
        trunc_ln947_reg_3776 <= trunc_ln947_fu_2158_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_1_reg_3807 == 1'd0))) begin
        icmp_ln958_1_reg_3852 <= icmp_ln958_1_fu_2466_p2;
        or_ln949_1_reg_3847[0] <= or_ln949_1_fu_2458_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (icmp_ln935_reg_3756 == 1'd0))) begin
        icmp_ln958_reg_3802 <= icmp_ln958_fu_2274_p2;
        or_ln_reg_3797[0] <= or_ln_fu_2266_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (lrclk_V_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (lrclk_V_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (lrclk_V_0_vld_reg == 1'b1)))) begin
        lrclk_V_0_data_reg <= lrclk_V;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        lsignExt_V_1_reg_3206 <= lsignExt_V_1_fu_498_p3;
        rsignExt_V_1_reg_3211 <= rsignExt_V_1_fu_517_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        lsignExt_V_2_reg_3192 <= physMemPtr_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_reg_3756 == 1'd0))) begin
        m_reg_3837 <= {{m_3_fu_2349_p2[31:1]}};
        tmp_32_reg_3842 <= m_3_fu_2349_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) & (icmp_ln935_1_reg_3807 == 1'd0))) begin
        m_s_reg_3862 <= {{m_8_fu_2539_p2[31:1]}};
        tmp_36_reg_3867 <= m_8_fu_2539_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln761_fu_430_p2 == 1'd0))) begin
        or_ln107_reg_3170 <= or_ln107_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_2075_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        p_Result_31_reg_3735 <= p_Val2_s_fu_228[32'd31];
        tmp_V_reg_3741 <= tmp_V_fu_2111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) & (icmp_ln935_reg_3756 == 1'd0))) begin
        p_Result_33_reg_3857 <= p_Result_33_fu_2500_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (icmp_ln935_1_reg_3807 == 1'd0))) begin
        p_Result_36_reg_3877 <= p_Result_36_fu_2594_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_V_3_reg_3127 <= {{basePhysAddr_V[31:2]}};
        ret_V_reg_3137 <= ret_V_fu_414_p2;
        zext_ln215_reg_3132[29 : 0] <= zext_ln215_fu_410_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op619_writeresp_state58 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (ap_phi_mux_readyLch_flag_1_phi_fu_354_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
        readyLch <= ap_phi_mux_readyRch_new_1_phi_fu_339_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op619_writeresp_state58 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (ap_phi_mux_readyRch_flag_1_phi_fu_324_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
        readyRch <= ap_phi_mux_readyRch_new_1_phi_fu_339_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state48) & (icmp_ln935_1_reg_3807 == 1'd0)) | ((1'b1 == ap_CS_fsm_state47) & (icmp_ln935_reg_3756 == 1'd0)))) begin
        reg_395 <= grp_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        rsignExt_V_2_reg_3199 <= physMemPtr_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        rsrcf_reg_3226 <= grp_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
        select_ln285_3_reg_4035 <= select_ln285_3_fu_3086_p3;
        select_ln303_reg_4030 <= select_ln303_fu_3026_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
        select_ln303_1_reg_4048 <= select_ln303_1_fu_3109_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        stageIndex_V_reg_3719 <= stageIndex_V_fu_2081_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        status_V_reg_3156 <= physMemPtr_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_1_reg_3221 <= grp_fu_378_p1;
        tmp_reg_3216 <= grp_fu_375_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        trunc_ln132_reg_3746 <= trunc_ln132_fu_2117_p1;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op619_writeresp_state58 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) & (or_ln107_reg_3170 == 1'd0) & (icmp_ln761_reg_3161 == 1'd0))) begin
        ap_phi_mux_readyLch_flag_1_phi_fu_354_p6 = 1'd1;
    end else begin
        ap_phi_mux_readyLch_flag_1_phi_fu_354_p6 = readyLch_flag_1_reg_350;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) & (or_ln107_reg_3170 == 1'd0) & (icmp_ln761_reg_3161 == 1'd0))) begin
        ap_phi_mux_readyRch_flag_1_phi_fu_324_p6 = 1'd1;
    end else begin
        ap_phi_mux_readyRch_flag_1_phi_fu_324_p6 = readyRch_flag_1_reg_320;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) & (or_ln107_reg_3170 == 1'd0) & (icmp_ln761_reg_3161 == 1'd0))) begin
        ap_phi_mux_readyRch_new_1_phi_fu_339_p6 = 1'd0;
    end else begin
        ap_phi_mux_readyRch_new_1_phi_fu_339_p6 = readyRch_new_1_reg_334;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op619_writeresp_state58 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        configReg_ce0 = 1'b1;
    end else begin
        configReg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_364_p0 = bitcast_ln739_1_fu_2606_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_364_p0 = bitcast_ln739_fu_2562_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_364_p0 = tmp_reg_3216;
    end else begin
        grp_fu_364_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_364_p1 = 32'd1258291200;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_364_p1 = 32'd872415232;
    end else begin
        grp_fu_364_p1 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op619_writeresp_state58 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state58)) | ((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        lrclk_V_0_ack_out = 1'b1;
    end else begin
        lrclk_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op101_readreq_state10 == 1'b1) & (1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10))) begin
        physMemPtr_V_ARADDR = zext_ln544_1_fu_476_p1;
    end else if (((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        physMemPtr_V_ARADDR = zext_ln544_fu_420_p1;
    end else begin
        physMemPtr_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((ap_predicate_op101_readreq_state10 == 1'b1) & (1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10))) begin
        physMemPtr_V_ARLEN = 32'd2;
    end else if (((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        physMemPtr_V_ARLEN = 32'd1;
    end else begin
        physMemPtr_V_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op101_readreq_state10 == 1'b1) & (1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10)) | ((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        physMemPtr_V_ARVALID = 1'b1;
    end else begin
        physMemPtr_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((physMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
        physMemPtr_V_AWVALID = 1'b1;
    end else begin
        physMemPtr_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op619_writeresp_state58 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (ap_predicate_op619_writeresp_state58 == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
        physMemPtr_V_BREADY = 1'b1;
    end else begin
        physMemPtr_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        physMemPtr_V_RREADY = 1'b1;
    end else begin
        physMemPtr_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        physMemPtr_V_WDATA = select_ln303_1_reg_4048;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        physMemPtr_V_WDATA = select_ln303_reg_4030;
    end else begin
        physMemPtr_V_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state53)) | ((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52)))) begin
        physMemPtr_V_WVALID = 1'b1;
    end else begin
        physMemPtr_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state10) & (or_ln107_fu_470_p2 == 1'd0) & (icmp_ln761_fu_430_p2 == 1'd0)))) begin
        physMemPtr_V_blk_n_AR = m_axi_physMemPtr_V_ARREADY;
    end else begin
        physMemPtr_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        physMemPtr_V_blk_n_AW = m_axi_physMemPtr_V_AWREADY;
    end else begin
        physMemPtr_V_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) & (or_ln107_reg_3170 == 1'd0) & (icmp_ln761_reg_3161 == 1'd0))) begin
        physMemPtr_V_blk_n_B = m_axi_physMemPtr_V_BVALID;
    end else begin
        physMemPtr_V_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state9))) begin
        physMemPtr_V_blk_n_R = m_axi_physMemPtr_V_RVALID;
    end else begin
        physMemPtr_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52))) begin
        physMemPtr_V_blk_n_W = m_axi_physMemPtr_V_WREADY;
    end else begin
        physMemPtr_V_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (or_ln107_fu_470_p2 == 1'd0) & (icmp_ln761_fu_430_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & ((or_ln107_fu_470_p2 == 1'd1) | (icmp_ln761_fu_430_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((icmp_ln887_fu_2075_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((physMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if ((~((ap_predicate_op619_writeresp_state58 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_706_p2 = (12'd1075 - zext_ln461_1_fu_674_p1);

assign F2_fu_616_p2 = (12'd1075 - zext_ln461_fu_584_p1);

assign QUAN_INC_1_fu_712_p2 = (($signed(F2_1_fu_706_p2) > $signed(12'd23)) ? 1'b1 : 1'b0);

assign QUAN_INC_fu_622_p2 = (($signed(F2_fu_616_p2) > $signed(12'd23)) ? 1'b1 : 1'b0);

assign Range1_all_ones_1_fu_1192_p2 = (icmp_ln621_fu_1163_p2 & and_ln621_fu_1186_p2);

assign Range1_all_ones_2_fu_1723_p2 = (select_ln631_1_reg_3628 & Range1_all_ones_3_reg_3621);

assign Range1_all_ones_3_fu_1434_p2 = (icmp_ln621_1_fu_1405_p2 & and_ln621_4_fu_1428_p2);

assign Range1_all_ones_fu_1533_p2 = (select_ln631_reg_3563 & Range1_all_ones_1_reg_3556);

assign Range1_all_zeros_1_fu_1231_p2 = ((p_Val2_27_reg_3285 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_1727_p2 = (1'd1 ^ Range1_all_ones_3_reg_3621);

assign Range1_all_zeros_3_fu_1473_p2 = ((p_Val2_28_reg_3345 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_1537_p2 = (1'd1 ^ Range1_all_ones_1_reg_3556);

assign Range2_V_1_fu_885_p2 = p_Val2_27_reg_3285 >> zext_ln635_fu_881_p1;

assign Range2_V_3_fu_1016_p2 = p_Val2_28_reg_3345 >> zext_ln635_1_fu_1012_p1;

assign Range2_all_ones_1_fu_1455_p2 = ((Range2_V_3_reg_3515 == r_V_1_fu_1450_p2) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_1213_p2 = ((Range2_V_1_reg_3452 == r_V_fu_1208_p2) ? 1'b1 : 1'b0);

assign a_1_fu_2419_p2 = (icmp_ln947_3_fu_2413_p2 & icmp_ln947_2_fu_2387_p2);

assign a_fu_2227_p2 = (icmp_ln947_fu_2195_p2 & icmp_ln947_1_fu_2221_p2);

assign add_ln581_1_fu_718_p2 = ($signed(12'd4073) + $signed(F2_1_fu_706_p2));

assign add_ln581_fu_628_p2 = ($signed(12'd4073) + $signed(F2_fu_616_p2));

assign add_ln591_1_fu_1274_p2 = ($signed(12'd4072) + $signed(F2_1_reg_3362));

assign add_ln591_fu_1032_p2 = ($signed(12'd4072) + $signed(F2_reg_3302));

assign add_ln958_1_fu_2512_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_1_reg_3820));

assign add_ln958_fu_2322_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_3769));

assign add_ln964_1_fu_2581_p2 = (sub_ln964_1_fu_2576_p2 + select_ln964_1_fu_2569_p3);

assign add_ln964_fu_2487_p2 = (sub_ln964_fu_2482_p2 + select_ln964_fu_2475_p3);

assign and_ln107_fu_459_p2 = (xor_ln107_fu_453_p2 & lrclk_V_0_data_reg);

assign and_ln282_1_fu_2955_p2 = (xor_ln278_1_fu_2950_p2 & icmp_ln282_1_reg_3983);

assign and_ln282_fu_2721_p2 = (xor_ln278_fu_2716_p2 & icmp_ln282_reg_3917);

assign and_ln284_1_fu_2978_p2 = (xor_ln282_1_fu_2972_p2 & icmp_ln284_1_fu_2913_p2);

assign and_ln284_fu_2744_p2 = (xor_ln282_fu_2738_p2 & icmp_ln284_fu_2679_p2);

assign and_ln285_1_fu_2890_p2 = (xor_ln285_fu_2885_p2 & and_ln284_reg_3938);

assign and_ln285_2_fu_2984_p2 = (icmp_ln285_1_fu_2918_p2 & and_ln284_1_fu_2978_p2);

assign and_ln285_3_fu_3081_p2 = (xor_ln285_1_fu_3076_p2 & and_ln284_1_reg_4010);

assign and_ln285_fu_2750_p2 = (icmp_ln285_fu_2684_p2 & and_ln284_fu_2744_p2);

assign and_ln295_1_fu_3010_p2 = (xor_ln284_1_fu_3004_p2 & icmp_ln295_1_fu_2938_p2);

assign and_ln295_fu_2776_p2 = (xor_ln284_fu_2770_p2 & icmp_ln295_fu_2704_p2);

assign and_ln340_1_fu_1969_p2 = (empty_16_reg_3416 & and_ln340_fu_1963_p2);

assign and_ln340_2_fu_2055_p2 = (xor_ln571_1_fu_2050_p2 & or_ln340_5_fu_2008_p2);

assign and_ln340_3_fu_2061_p2 = (empty_19_reg_3479 & and_ln340_2_fu_2055_p2);

assign and_ln340_fu_1963_p2 = (xor_ln571_fu_1958_p2 & or_ln340_3_fu_1916_p2);

assign and_ln403_1_fu_1113_p2 = (xor_ln403_fu_1108_p2 & and_ln578_fu_1090_p2);

assign and_ln403_2_fu_1137_p2 = (xor_ln416_fu_1071_p2 & and_ln403_fu_1095_p2);

assign and_ln403_3_fu_1337_p2 = (p_Result_29_reg_3473 & and_ln578_1_fu_1332_p2);

assign and_ln403_4_fu_1355_p2 = (xor_ln403_1_fu_1350_p2 & and_ln578_1_fu_1332_p2);

assign and_ln403_5_fu_1379_p2 = (xor_ln416_1_fu_1313_p2 & and_ln403_3_fu_1337_p2);

assign and_ln403_fu_1095_p2 = (p_Result_25_reg_3410 & and_ln578_fu_1090_p2);

assign and_ln557_1_fu_1845_p2 = (p_Result_27_reg_3261 & icmp_ln621_1_reg_3607);

assign and_ln557_fu_1655_p2 = (p_Result_23_reg_3237 & icmp_ln621_reg_3542);

assign and_ln578_1_fu_1332_p2 = (xor_ln582_1_fu_1326_p2 & QUAN_INC_1_reg_3371);

assign and_ln578_fu_1090_p2 = (xor_ln582_fu_1084_p2 & QUAN_INC_reg_3311);

assign and_ln603_1_fu_1143_p2 = (icmp_ln603_reg_3329 & icmp_ln578_fu_1127_p2);

assign and_ln603_2_fu_1154_p2 = (xor_ln603_fu_1148_p2 & and_ln403_2_fu_1137_p2);

assign and_ln603_3_fu_1374_p2 = (icmp_ln603_1_reg_3389 & icmp_ln578_2_fu_1369_p2);

assign and_ln603_4_fu_1385_p2 = (icmp_ln603_1_reg_3389 & icmp_ln578_2_fu_1369_p2);

assign and_ln603_5_fu_1396_p2 = (xor_ln603_1_fu_1390_p2 & and_ln403_5_fu_1379_p2);

assign and_ln603_fu_1132_p2 = (icmp_ln603_reg_3329 & icmp_ln578_fu_1127_p2);

assign and_ln621_2_fu_1644_p2 = (xor_ln621_fu_1633_p2 & p_Result_26_fu_1521_p3);

assign and_ln621_3_fu_1650_p2 = (p_Result_23_reg_3237 & and_ln621_2_fu_1644_p2);

assign and_ln621_4_fu_1428_p2 = (xor_ln621_3_fu_1410_p2 & lD_1_fu_1424_p1);

assign and_ln621_6_fu_1834_p2 = (xor_ln621_1_fu_1823_p2 & p_Result_30_fu_1711_p3);

assign and_ln621_7_fu_1840_p2 = (p_Result_27_reg_3261 & and_ln621_6_fu_1834_p2);

assign and_ln621_fu_1186_p2 = (xor_ln621_2_fu_1168_p2 & lD_fu_1182_p1);

assign and_ln631_1_fu_1445_p2 = (xor_ln631_1_fu_1440_p2 & icmp_ln631_1_reg_3503);

assign and_ln631_fu_1203_p2 = (xor_ln631_fu_1198_p2 & icmp_ln631_reg_3440);

assign and_ln639_1_fu_1719_p2 = (xor_ln621_3_reg_3614 & icmp_ln631_1_reg_3503);

assign and_ln639_fu_1529_p2 = (xor_ln621_2_reg_3549 & icmp_ln631_reg_3440);

assign and_ln641_1_fu_1732_p2 = (icmp_ln641_1_reg_3634 & Range1_all_zeros_2_fu_1727_p2);

assign and_ln641_fu_1542_p2 = (icmp_ln641_reg_3569 & Range1_all_zeros_fu_1537_p2);

assign and_ln642_1_fu_1488_p2 = (or_ln639_1_fu_1483_p2 & icmp_ln642_1_reg_3521);

assign and_ln642_fu_1246_p2 = (or_ln639_fu_1241_p2 & icmp_ln642_reg_3458);

assign and_ln652_1_fu_1786_p2 = (select_ln639_2_fu_1746_p3 & or_ln652_5_reg_3650);

assign and_ln652_fu_1596_p2 = (select_ln639_fu_1556_p3 & or_ln652_4_reg_3585);

assign and_ln654_1_fu_1812_p2 = (select_ln639_2_fu_1746_p3 & and_ln603_5_reg_3601);

assign and_ln654_fu_1622_p2 = (select_ln639_fu_1556_p3 & and_ln603_2_reg_3536);

assign and_ln658_2_fu_1863_p2 = (xor_ln658_fu_1857_p2 & icmp_ln621_1_reg_3607);

assign and_ln658_fu_1673_p2 = (xor_ln658_2_fu_1667_p2 & icmp_ln621_reg_3542);

assign and_ln659_2_fu_1885_p2 = (p_Result_30_fu_1711_p3 & or_ln557_1_fu_1828_p2);

assign and_ln659_fu_1695_p2 = (p_Result_26_fu_1521_p3 & or_ln557_fu_1638_p2);

assign and_ln949_1_fu_2446_p2 = (xor_ln949_1_fu_2433_p2 & p_Result_19_fu_2439_p3);

assign and_ln949_fu_2254_p2 = (xor_ln949_fu_2241_p2 & p_Result_6_fu_2247_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10_io = ((ap_predicate_op101_readreq_state10 == 1'b1) & (physMemPtr_V_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state58 = ((ap_predicate_op619_writeresp_state58 == 1'b1) & (physMemPtr_V_BVALID == 1'b0));
end

always @ (*) begin
    ap_predicate_op101_readreq_state10 = ((or_ln107_fu_470_p2 == 1'd0) & (icmp_ln761_fu_430_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op619_writeresp_state58 = ((or_ln107_reg_3170 == 1'd0) & (icmp_ln761_reg_3161 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln586_1_fu_913_p2 = $signed(p_Val2_28_reg_3345) >>> zext_ln586_1_fu_909_p1;

assign ashr_ln586_fu_781_p2 = $signed(p_Val2_27_reg_3285) >>> zext_ln586_fu_777_p1;

assign ashr_ln623_1_fu_1419_p2 = $signed(p_Val2_28_reg_3345) >>> zext_ln623_1_fu_1415_p1;

assign ashr_ln623_fu_1177_p2 = $signed(p_Val2_27_reg_3285) >>> zext_ln623_fu_1173_p1;

assign bitcast_ln696_2_fu_922_p1 = rsrcf_reg_3226;

assign bitcast_ln696_fu_790_p1 = reg_395;

assign bitcast_ln705_1_fu_2782_p1 = reg_395;

assign bitcast_ln705_fu_2610_p1 = reg_395;

assign bitcast_ln739_1_fu_2606_p1 = p_Result_36_reg_3877;

assign bitcast_ln739_fu_2562_p1 = p_Result_33_reg_3857;

assign configReg_address0 = zext_ln129_fu_2095_p1;

assign currentData_lch_V_fu_1974_p3 = ((and_ln340_1_fu_1969_p2[0:0] === 1'b1) ? select_ln340_fu_1921_p3 : sel_tmp58_fu_1951_p3);

assign currentData_rch_V_fu_2066_p3 = ((and_ln340_3_fu_2061_p2[0:0] === 1'b1) ? select_ln340_1_fu_2013_p3 : sel_tmp123_fu_2043_p3);

assign deleted_ones_1_fu_1804_p3 = ((or_ln652_2_fu_1781_p2[0:0] === 1'b1) ? and_ln652_1_fu_1786_p2 : or_ln652_3_fu_1798_p2);

assign deleted_ones_fu_1614_p3 = ((or_ln652_fu_1591_p2[0:0] === 1'b1) ? and_ln652_fu_1596_p2 : or_ln652_1_fu_1608_p2);

assign deleted_zeros_1_fu_1769_p3 = ((and_ln603_5_reg_3601[0:0] === 1'b1) ? select_ln639_2_fu_1746_p3 : select_ln639_3_fu_1761_p3);

assign deleted_zeros_fu_1579_p3 = ((and_ln603_2_reg_3536[0:0] === 1'b1) ? select_ln639_fu_1556_p3 : select_ln639_1_fu_1571_p3);

assign empty_15_fu_833_p2 = (tmp185_cast_cast_fu_826_p3 + exp_V_fu_764_p2);

assign empty_16_fu_839_p2 = (($signed(empty_15_fu_833_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign empty_17_fu_1627_p2 = (1'd1 ^ and_ln654_fu_1622_p2);

assign empty_18_fu_964_p2 = (tmp190_cast_cast_fu_957_p3 + exp_V_1_fu_896_p2);

assign empty_19_fu_970_p2 = (($signed(empty_18_fu_964_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign empty_20_fu_1817_p2 = (1'd1 ^ and_ln654_1_fu_1812_p2);

assign exp_V_1_fu_896_p2 = ($signed(12'd3073) + $signed(zext_ln461_1_reg_3340));

assign exp_V_2_fu_2643_p1 = p_Result_s_22_fu_2633_p4;

assign exp_V_3_fu_2815_p1 = p_Result_1_fu_2805_p4;

assign exp_V_fu_764_p2 = ($signed(12'd3073) + $signed(zext_ln461_reg_3280));

assign icmp_ln278_1_fu_2823_p2 = ((trunc_ln262_1_fu_2793_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_2651_p2 = ((trunc_ln262_fu_2621_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln282_1_fu_2835_p2 = ((p_Result_1_fu_2805_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_2663_p2 = ((p_Result_s_22_fu_2633_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln284_1_fu_2913_p2 = (($signed(sh_amt_4_reg_3975) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_2679_p2 = (($signed(sh_amt_2_reg_3909) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln285_1_fu_2918_p2 = (($signed(sh_amt_4_reg_3975) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln285_fu_2684_p2 = (($signed(sh_amt_2_reg_3909) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln295_1_fu_2938_p2 = (($signed(tmp_41_fu_2928_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_2704_p2 = (($signed(tmp_38_fu_2694_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_701_p2 = ((trunc_ln556_1_reg_3256 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_611_p2 = ((trunc_ln556_reg_3232 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln578_2_fu_1369_p2 = (($signed(F2_1_reg_3362) < $signed(12'd23)) ? 1'b1 : 1'b0);

assign icmp_ln578_fu_1127_p2 = (($signed(F2_reg_3302) < $signed(12'd23)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_1269_p2 = ((F2_1_reg_3362 == 12'd23) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1027_p2 = ((F2_reg_3302 == 12'd23) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_904_p2 = ((sh_amt_1_reg_3377 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_772_p2 = ((sh_amt_reg_3317 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln591_1_fu_758_p2 = (($signed(add_ln581_1_fu_718_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_668_p2 = (($signed(add_ln581_fu_628_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_752_p2 = ((tmp_21_fu_742_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_662_p2 = ((tmp_12_fu_652_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln621_1_fu_1405_p2 = (($signed(pos1_1_reg_3485) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln621_fu_1163_p2 = (($signed(pos1_reg_3422) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln631_1_fu_1006_p2 = (($signed(pos2_1_fu_981_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln631_fu_875_p2 = (($signed(pos2_fu_850_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln641_1_fu_1468_p2 = ((Range2_V_3_reg_3515 == 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln641_fu_1226_p2 = ((Range2_V_1_reg_3452 == 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln642_1_fu_1021_p2 = ((pos2_1_fu_981_p2 == 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln642_fu_890_p2 = ((pos2_fu_850_p2 == 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln761_fu_430_p2 = ((status_V_reg_3156 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_2075_p2 = ((t_V_reg_309 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln935_1_fu_2280_p2 = ((p_Val2_1_fu_232 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_2124_p2 = ((p_Val2_s_fu_228 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_2221_p2 = ((p_Result_12_fu_2216_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_2_fu_2387_p2 = (($signed(tmp_34_fu_2377_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln947_3_fu_2413_p2 = ((p_Result_18_fu_2408_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_2195_p2 = (($signed(tmp_30_fu_2185_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_1_fu_2466_p2 = (($signed(lsb_index_1_fu_2372_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_2274_p2 = (($signed(lsb_index_fu_2180_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_V_1_fu_554_p1 = grp_fu_384_p1;

assign ireg_V_fu_524_p1 = grp_fu_381_p1;

assign lD_1_fu_1424_p1 = ashr_ln623_1_fu_1419_p2[0:0];

assign lD_fu_1182_p1 = ashr_ln623_fu_1177_p2[0:0];


always @ (p_Result_35_fu_2290_p4) begin
    if (p_Result_35_fu_2290_p4[0] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd0;
    end else if (p_Result_35_fu_2290_p4[1] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd1;
    end else if (p_Result_35_fu_2290_p4[2] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd2;
    end else if (p_Result_35_fu_2290_p4[3] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd3;
    end else if (p_Result_35_fu_2290_p4[4] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd4;
    end else if (p_Result_35_fu_2290_p4[5] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd5;
    end else if (p_Result_35_fu_2290_p4[6] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd6;
    end else if (p_Result_35_fu_2290_p4[7] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd7;
    end else if (p_Result_35_fu_2290_p4[8] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd8;
    end else if (p_Result_35_fu_2290_p4[9] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd9;
    end else if (p_Result_35_fu_2290_p4[10] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd10;
    end else if (p_Result_35_fu_2290_p4[11] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd11;
    end else if (p_Result_35_fu_2290_p4[12] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd12;
    end else if (p_Result_35_fu_2290_p4[13] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd13;
    end else if (p_Result_35_fu_2290_p4[14] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd14;
    end else if (p_Result_35_fu_2290_p4[15] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd15;
    end else if (p_Result_35_fu_2290_p4[16] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd16;
    end else if (p_Result_35_fu_2290_p4[17] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd17;
    end else if (p_Result_35_fu_2290_p4[18] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd18;
    end else if (p_Result_35_fu_2290_p4[19] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd19;
    end else if (p_Result_35_fu_2290_p4[20] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd20;
    end else if (p_Result_35_fu_2290_p4[21] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd21;
    end else if (p_Result_35_fu_2290_p4[22] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd22;
    end else if (p_Result_35_fu_2290_p4[23] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd23;
    end else if (p_Result_35_fu_2290_p4[24] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd24;
    end else if (p_Result_35_fu_2290_p4[25] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd25;
    end else if (p_Result_35_fu_2290_p4[26] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd26;
    end else if (p_Result_35_fu_2290_p4[27] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd27;
    end else if (p_Result_35_fu_2290_p4[28] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd28;
    end else if (p_Result_35_fu_2290_p4[29] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd29;
    end else if (p_Result_35_fu_2290_p4[30] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd30;
    end else if (p_Result_35_fu_2290_p4[31] == 1'b1) begin
        l_1_fu_2300_p3 = 32'd31;
    end else begin
        l_1_fu_2300_p3 = 32'd32;
    end
end


always @ (p_Result_32_fu_2134_p4) begin
    if (p_Result_32_fu_2134_p4[0] == 1'b1) begin
        l_fu_2144_p3 = 32'd0;
    end else if (p_Result_32_fu_2134_p4[1] == 1'b1) begin
        l_fu_2144_p3 = 32'd1;
    end else if (p_Result_32_fu_2134_p4[2] == 1'b1) begin
        l_fu_2144_p3 = 32'd2;
    end else if (p_Result_32_fu_2134_p4[3] == 1'b1) begin
        l_fu_2144_p3 = 32'd3;
    end else if (p_Result_32_fu_2134_p4[4] == 1'b1) begin
        l_fu_2144_p3 = 32'd4;
    end else if (p_Result_32_fu_2134_p4[5] == 1'b1) begin
        l_fu_2144_p3 = 32'd5;
    end else if (p_Result_32_fu_2134_p4[6] == 1'b1) begin
        l_fu_2144_p3 = 32'd6;
    end else if (p_Result_32_fu_2134_p4[7] == 1'b1) begin
        l_fu_2144_p3 = 32'd7;
    end else if (p_Result_32_fu_2134_p4[8] == 1'b1) begin
        l_fu_2144_p3 = 32'd8;
    end else if (p_Result_32_fu_2134_p4[9] == 1'b1) begin
        l_fu_2144_p3 = 32'd9;
    end else if (p_Result_32_fu_2134_p4[10] == 1'b1) begin
        l_fu_2144_p3 = 32'd10;
    end else if (p_Result_32_fu_2134_p4[11] == 1'b1) begin
        l_fu_2144_p3 = 32'd11;
    end else if (p_Result_32_fu_2134_p4[12] == 1'b1) begin
        l_fu_2144_p3 = 32'd12;
    end else if (p_Result_32_fu_2134_p4[13] == 1'b1) begin
        l_fu_2144_p3 = 32'd13;
    end else if (p_Result_32_fu_2134_p4[14] == 1'b1) begin
        l_fu_2144_p3 = 32'd14;
    end else if (p_Result_32_fu_2134_p4[15] == 1'b1) begin
        l_fu_2144_p3 = 32'd15;
    end else if (p_Result_32_fu_2134_p4[16] == 1'b1) begin
        l_fu_2144_p3 = 32'd16;
    end else if (p_Result_32_fu_2134_p4[17] == 1'b1) begin
        l_fu_2144_p3 = 32'd17;
    end else if (p_Result_32_fu_2134_p4[18] == 1'b1) begin
        l_fu_2144_p3 = 32'd18;
    end else if (p_Result_32_fu_2134_p4[19] == 1'b1) begin
        l_fu_2144_p3 = 32'd19;
    end else if (p_Result_32_fu_2134_p4[20] == 1'b1) begin
        l_fu_2144_p3 = 32'd20;
    end else if (p_Result_32_fu_2134_p4[21] == 1'b1) begin
        l_fu_2144_p3 = 32'd21;
    end else if (p_Result_32_fu_2134_p4[22] == 1'b1) begin
        l_fu_2144_p3 = 32'd22;
    end else if (p_Result_32_fu_2134_p4[23] == 1'b1) begin
        l_fu_2144_p3 = 32'd23;
    end else if (p_Result_32_fu_2134_p4[24] == 1'b1) begin
        l_fu_2144_p3 = 32'd24;
    end else if (p_Result_32_fu_2134_p4[25] == 1'b1) begin
        l_fu_2144_p3 = 32'd25;
    end else if (p_Result_32_fu_2134_p4[26] == 1'b1) begin
        l_fu_2144_p3 = 32'd26;
    end else if (p_Result_32_fu_2134_p4[27] == 1'b1) begin
        l_fu_2144_p3 = 32'd27;
    end else if (p_Result_32_fu_2134_p4[28] == 1'b1) begin
        l_fu_2144_p3 = 32'd28;
    end else if (p_Result_32_fu_2134_p4[29] == 1'b1) begin
        l_fu_2144_p3 = 32'd29;
    end else if (p_Result_32_fu_2134_p4[30] == 1'b1) begin
        l_fu_2144_p3 = 32'd30;
    end else if (p_Result_32_fu_2134_p4[31] == 1'b1) begin
        l_fu_2144_p3 = 32'd31;
    end else begin
        l_fu_2144_p3 = 32'd32;
    end
end

assign lsb_index_1_fu_2372_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_1_reg_3820));

assign lsb_index_fu_2180_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_reg_3769));

assign lshr_ln286_1_fu_2944_p2 = tmp_9_fu_2903_p3 >> sext_ln281_1_fu_2910_p1;

assign lshr_ln286_fu_2710_p2 = tmp_8_fu_2669_p3 >> sext_ln281_fu_2676_p1;

assign lshr_ln947_1_fu_2402_p2 = 32'd4294967295 >> zext_ln947_1_fu_2398_p1;

assign lshr_ln947_fu_2210_p2 = 32'd4294967295 >> zext_ln947_fu_2206_p1;

assign lshr_ln958_1_fu_2517_p2 = tmp_V_5_reg_3812 >> add_ln958_1_fu_2512_p2;

assign lshr_ln958_fu_2327_p2 = tmp_V_4_reg_3761 >> add_ln958_fu_2322_p2;

assign lsignExt_V_1_fu_498_p3 = ((tmp_4_fu_486_p3[0:0] === 1'b1) ? ret_V_4_fu_493_p2 : lsignExt_V_2_reg_3192);

assign m_11_fu_2472_p1 = m_reg_3837;

assign m_12_fu_2566_p1 = m_s_reg_3862;

assign m_2_fu_2342_p3 = ((icmp_ln958_reg_3802[0:0] === 1'b1) ? lshr_ln958_fu_2327_p2 : shl_ln958_fu_2337_p2);

assign m_3_fu_2349_p2 = (or_ln_reg_3797 + m_2_fu_2342_p3);

assign m_7_fu_2532_p3 = ((icmp_ln958_1_reg_3852[0:0] === 1'b1) ? lshr_ln958_1_fu_2517_p2 : shl_ln958_1_fu_2527_p2);

assign m_8_fu_2539_p2 = (or_ln949_1_reg_3847 + m_7_fu_2532_p3);

assign man_V_1_fu_598_p2 = (54'd0 - p_Result_24_fu_594_p1);

assign man_V_4_fu_688_p2 = (54'd0 - p_Result_28_fu_684_p1);

assign or_ln102_fu_443_p2 = (readyRch | lrclk_V_0_data_reg);

assign or_ln107_fu_470_p2 = (xor_ln107_1_fu_464_p2 | and_ln107_fu_459_p2);

assign or_ln282_1_fu_2968_p2 = (icmp_ln282_1_reg_3983 | icmp_ln278_1_reg_3968);

assign or_ln282_fu_2734_p2 = (icmp_ln282_reg_3917 | icmp_ln278_reg_3902);

assign or_ln284_1_fu_2998_p2 = (or_ln282_1_fu_2968_p2 | icmp_ln284_1_fu_2913_p2);

assign or_ln284_fu_2764_p2 = (or_ln282_fu_2734_p2 | icmp_ln284_fu_2679_p2);

assign or_ln340_1_fu_1993_p2 = (underflow_1_fu_1988_p2 | overflow_1_reg_3694);

assign or_ln340_2_fu_1911_p2 = (xor_ln340_fu_1906_p2 | overflow_reg_3669);

assign or_ln340_3_fu_1916_p2 = (or_ln340_2_fu_1911_p2 | and_ln659_reg_3675);

assign or_ln340_4_fu_2003_p2 = (xor_ln340_1_fu_1998_p2 | overflow_1_reg_3694);

assign or_ln340_5_fu_2008_p2 = (or_ln340_4_fu_2003_p2 | and_ln659_2_reg_3700);

assign or_ln340_fu_1901_p2 = (underflow_fu_1896_p2 | overflow_reg_3669);

assign or_ln557_1_fu_1828_p2 = (xor_ln621_1_fu_1823_p2 | deleted_ones_1_fu_1804_p3);

assign or_ln557_fu_1638_p2 = (xor_ln621_fu_1633_p2 | deleted_ones_fu_1614_p3);

assign or_ln571_1_fu_2027_p2 = (underflow_1_fu_1988_p2 | icmp_ln571_1_reg_3354);

assign or_ln571_fu_1935_p2 = (underflow_fu_1896_p2 | icmp_ln571_reg_3294);

assign or_ln639_1_fu_1483_p2 = (xor_ln639_fu_1478_p2 | tmp_26_reg_3492);

assign or_ln639_fu_1241_p2 = (xor_ln639_2_fu_1236_p2 | tmp_17_reg_3429);

assign or_ln645_1_fu_1737_p2 = (xor_ln621_3_reg_3614 | Range1_all_zeros_3_reg_3639);

assign or_ln645_fu_1547_p2 = (xor_ln621_2_reg_3549 | Range1_all_zeros_1_reg_3574);

assign or_ln652_1_fu_1608_p2 = (tmp_19_fu_1601_p3 | Range1_all_zeros_fu_1537_p2);

assign or_ln652_2_fu_1781_p2 = (xor_ln652_3_fu_1776_p2 | or_ln652_5_reg_3650);

assign or_ln652_3_fu_1798_p2 = (tmp_28_fu_1791_p3 | Range1_all_zeros_2_fu_1727_p2);

assign or_ln652_4_fu_1263_p2 = (or_ln652_6_fu_1257_p2 | and_ln603_fu_1132_p2);

assign or_ln652_5_fu_1505_p2 = (or_ln652_7_fu_1499_p2 | and_ln603_3_fu_1374_p2);

assign or_ln652_6_fu_1257_p2 = (xor_ln652_4_fu_1251_p2 | tmp_15_fu_1063_p3);

assign or_ln652_7_fu_1499_p2 = (xor_ln652_5_fu_1493_p2 | tmp_24_fu_1305_p3);

assign or_ln652_fu_1591_p2 = (xor_ln652_1_fu_1586_p2 | or_ln652_4_reg_3585);

assign or_ln658_1_fu_1868_p2 = (p_Result_30_fu_1711_p3 | and_ln658_2_fu_1863_p2);

assign or_ln658_fu_1678_p2 = (p_Result_26_fu_1521_p3 | and_ln658_fu_1673_p2);

assign or_ln949_1_fu_2458_p3 = {{31'd0}, {or_ln949_fu_2452_p2}};

assign or_ln949_2_fu_2260_p2 = (and_ln949_fu_2254_p2 | a_fu_2227_p2);

assign or_ln949_fu_2452_p2 = (and_ln949_1_fu_2446_p2 | a_1_fu_2419_p2);

assign or_ln_fu_2266_p3 = {{31'd0}, {or_ln949_2_fu_2260_p2}};

assign overflow_1_fu_1879_p2 = (xor_ln658_3_fu_1874_p2 & or_ln658_1_fu_1868_p2);

assign overflow_fu_1689_p2 = (xor_ln658_1_fu_1684_p2 & or_ln658_fu_1678_p2);

assign p_Result_12_fu_2216_p2 = (tmp_V_4_reg_3761 & lshr_ln947_fu_2210_p2);

assign p_Result_18_fu_2408_p2 = (tmp_V_5_reg_3812 & lshr_ln947_1_fu_2402_p2);

assign p_Result_19_fu_2439_p3 = tmp_V_5_reg_3812[lsb_index_1_fu_2372_p2];

assign p_Result_1_fu_2805_p4 = {{reg_V_1_fu_2786_p3[30:23]}};

assign p_Result_24_fu_594_p1 = tmp_2_fu_587_p3;

assign p_Result_26_fu_1521_p3 = p_Val2_14_fu_1515_p3[32'd31];

assign p_Result_28_fu_684_p1 = tmp_3_fu_677_p3;

assign p_Result_30_fu_1711_p3 = p_Val2_20_fu_1705_p3[32'd31];

integer ap_tvar_int_0;

always @ (tmp_V_4_fu_2129_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_32_fu_2134_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_32_fu_2134_p4[ap_tvar_int_0] = tmp_V_4_fu_2129_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_33_fu_2500_p5 = {{tmp_5_fu_2493_p3}, {m_11_fu_2472_p1[22:0]}};

integer ap_tvar_int_1;

always @ (tmp_V_5_fu_2285_p3) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_35_fu_2290_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_35_fu_2290_p4[ap_tvar_int_1] = tmp_V_5_fu_2285_p3[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_36_fu_2594_p5 = {{tmp_7_fu_2587_p3}, {m_12_fu_2566_p1[22:0]}};

assign p_Result_5_fu_1283_p3 = p_Val2_28_reg_3345[sext_ln591_1_fu_1279_p1];

assign p_Result_6_fu_2247_p3 = tmp_V_4_reg_3761[lsb_index_fu_2180_p2];

assign p_Result_s_22_fu_2633_p4 = {{reg_V_fu_2614_p3[30:23]}};

assign p_Result_s_fu_1041_p3 = p_Val2_27_reg_3285[sext_ln591_fu_1037_p1];

assign p_Val2_13_fu_1058_p2 = (p_Val2_9_reg_3405 + zext_ln415_fu_1054_p1);

assign p_Val2_14_fu_1515_p3 = ((and_ln603_reg_3531[0:0] === 1'b1) ? shl_ln604_fu_1511_p2 : select_ln403_1_reg_3526);

assign p_Val2_18_fu_941_p3 = ((icmp_ln585_1_fu_904_p2[0:0] === 1'b1) ? trunc_ln586_1_fu_918_p1 : select_ln588_1_fu_933_p3);

assign p_Val2_19_fu_1300_p2 = (p_Val2_18_reg_3468 + zext_ln415_1_fu_1296_p1);

assign p_Val2_20_fu_1705_p3 = ((and_ln603_3_reg_3596[0:0] === 1'b1) ? shl_ln604_1_fu_1701_p2 : select_ln403_3_reg_3591);

assign p_Val2_27_fu_604_p3 = ((p_Result_23_reg_3237[0:0] === 1'b1) ? man_V_1_fu_598_p2 : p_Result_24_fu_594_p1);

assign p_Val2_28_fu_694_p3 = ((p_Result_27_reg_3261[0:0] === 1'b1) ? man_V_4_fu_688_p2 : p_Result_28_fu_684_p1);

assign p_Val2_9_fu_810_p3 = ((icmp_ln585_fu_772_p2[0:0] === 1'b1) ? trunc_ln586_fu_786_p1 : select_ln588_fu_802_p3);

assign physMemPtr_V_AWADDR = zext_ln544_2_fu_3094_p1;

assign pos1_1_fu_976_p2 = (12'd9 + F2_1_reg_3362);

assign pos1_fu_845_p2 = (12'd9 + F2_reg_3302);

assign pos2_1_fu_981_p2 = (12'd10 + F2_1_reg_3362);

assign pos2_fu_850_p2 = (12'd10 + F2_reg_3302);

assign qb_1_fu_1290_p3 = ((icmp_ln591_1_reg_3395[0:0] === 1'b1) ? p_Result_27_reg_3261 : p_Result_5_fu_1283_p3);

assign qb_fu_1048_p3 = ((icmp_ln591_reg_3335[0:0] === 1'b1) ? p_Result_23_reg_3237 : p_Result_s_fu_1041_p3);

assign r_V_1_fu_1450_p2 = 54'd18014398509481983 >> zext_ln635_1_reg_3510;

assign r_V_3_fu_400_p4 = {{basePhysAddr_V[31:2]}};

assign r_V_fu_1208_p2 = 54'd18014398509481983 >> zext_ln635_reg_3447;

assign reg_V_1_fu_2786_p3 = ((icmp_ln935_1_reg_3807[0:0] === 1'b1) ? 32'd0 : bitcast_ln705_1_fu_2782_p1);

assign reg_V_fu_2614_p3 = ((icmp_ln935_reg_3756[0:0] === 1'b1) ? 32'd0 : bitcast_ln705_fu_2610_p1);

assign ret_V_3_fu_3016_p2 = (31'd2 + zext_ln215_reg_3132);

assign ret_V_4_fu_493_p2 = (lsignExt_V_2_reg_3192 | 32'd4278190080);

assign ret_V_5_fu_512_p2 = (rsignExt_V_2_reg_3199 | 32'd4278190080);

assign ret_V_fu_414_p2 = (zext_ln215_fu_410_p1 + 31'd4);

assign rsignExt_V_1_fu_517_p3 = ((tmp_10_fu_505_p3[0:0] === 1'b1) ? ret_V_5_fu_512_p2 : rsignExt_V_2_reg_3199);

assign sel_tmp122_demorgan_fu_2039_p2 = (icmp_ln571_1_reg_3354 | empty_19_reg_3479);

assign sel_tmp123_fu_2043_p3 = ((sel_tmp122_demorgan_fu_2039_p2[0:0] === 1'b1) ? select_ln571_3_fu_2032_p3 : p_Val2_20_reg_3681);

assign sel_tmp57_demorgan_fu_1947_p2 = (icmp_ln571_reg_3294 | empty_16_reg_3416);

assign sel_tmp58_fu_1951_p3 = ((sel_tmp57_demorgan_fu_1947_p2[0:0] === 1'b1) ? select_ln571_1_fu_1940_p3 : p_Val2_14_reg_3656);

assign select_ln278_1_fu_3069_p3 = ((icmp_ln278_1_reg_3968[0:0] === 1'b1) ? 32'd0 : select_ln295_1_fu_3062_p3);

assign select_ln278_fu_2878_p3 = ((icmp_ln278_reg_3902[0:0] === 1'b1) ? 32'd0 : select_ln295_fu_2871_p3);

assign select_ln282_1_fu_2960_p3 = ((and_ln282_1_fu_2955_p2[0:0] === 1'b1) ? tmp_9_fu_2903_p3 : 24'd0);

assign select_ln282_fu_2726_p3 = ((and_ln282_fu_2721_p2[0:0] === 1'b1) ? tmp_8_fu_2669_p3 : 24'd0);

assign select_ln285_1_fu_2895_p3 = ((and_ln285_1_fu_2890_p2[0:0] === 1'b1) ? select_ln288_fu_2854_p3 : select_ln278_fu_2878_p3);

assign select_ln285_2_fu_2990_p3 = ((and_ln285_2_fu_2984_p2[0:0] === 1'b1) ? lshr_ln286_1_fu_2944_p2 : select_ln282_1_fu_2960_p3);

assign select_ln285_3_fu_3086_p3 = ((and_ln285_3_fu_3081_p2[0:0] === 1'b1) ? select_ln288_1_fu_3045_p3 : select_ln278_1_fu_3069_p3);

assign select_ln285_fu_2756_p3 = ((and_ln285_fu_2750_p2[0:0] === 1'b1) ? lshr_ln286_fu_2710_p2 : select_ln282_fu_2726_p3);

assign select_ln288_1_fu_3045_p3 = ((tmp_42_fu_3038_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln288_fu_2854_p3 = ((tmp_39_fu_2847_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln295_1_fu_3062_p3 = ((and_ln295_1_reg_4020[0:0] === 1'b1) ? shl_ln297_1_fu_3053_p2 : zext_ln285_1_fu_3059_p1);

assign select_ln295_fu_2871_p3 = ((and_ln295_reg_3948[0:0] === 1'b1) ? shl_ln297_fu_2862_p2 : zext_ln285_fu_2868_p1);

assign select_ln303_1_fu_3109_p3 = ((p_Result_38_reg_3958[0:0] === 1'b1) ? sub_ln461_1_fu_3104_p2 : select_ln285_3_reg_4035);

assign select_ln303_fu_3026_p3 = ((p_Result_37_reg_3892[0:0] === 1'b1) ? sub_ln461_fu_3021_p2 : select_ln285_1_reg_3989);

assign select_ln340_1_fu_2013_p3 = ((or_ln340_1_fu_1993_p2[0:0] === 1'b1) ? 32'd2147483647 : p_Val2_20_reg_3681);

assign select_ln340_fu_1921_p3 = ((or_ln340_fu_1901_p2[0:0] === 1'b1) ? 32'd2147483647 : p_Val2_14_reg_3656);

assign select_ln403_1_fu_1119_p3 = ((and_ln403_1_fu_1113_p2[0:0] === 1'b1) ? p_Val2_13_fu_1058_p2 : select_ln403_fu_1100_p3);

assign select_ln403_2_fu_1342_p3 = ((and_ln403_3_fu_1337_p2[0:0] === 1'b1) ? p_Val2_19_fu_1300_p2 : select_ln582_1_fu_1319_p3);

assign select_ln403_3_fu_1361_p3 = ((and_ln403_4_fu_1355_p2[0:0] === 1'b1) ? p_Val2_19_fu_1300_p2 : select_ln403_2_fu_1342_p3);

assign select_ln403_fu_1100_p3 = ((and_ln403_fu_1095_p2[0:0] === 1'b1) ? p_Val2_13_fu_1058_p2 : select_ln582_fu_1077_p3);

assign select_ln557_1_fu_1849_p3 = ((and_ln557_1_fu_1845_p2[0:0] === 1'b1) ? empty_20_fu_1817_p2 : and_ln621_7_fu_1840_p2);

assign select_ln557_fu_1659_p3 = ((and_ln557_fu_1655_p2[0:0] === 1'b1) ? empty_17_fu_1627_p2 : and_ln621_3_fu_1650_p2);

assign select_ln571_1_fu_1940_p3 = ((or_ln571_fu_1935_p2[0:0] === 1'b1) ? select_ln571_fu_1928_p3 : p_Val2_14_reg_3656);

assign select_ln571_2_fu_2020_p3 = ((icmp_ln571_1_reg_3354[0:0] === 1'b1) ? 32'd0 : 32'd2147483648);

assign select_ln571_3_fu_2032_p3 = ((or_ln571_1_fu_2027_p2[0:0] === 1'b1) ? select_ln571_2_fu_2020_p3 : p_Val2_20_reg_3681);

assign select_ln571_fu_1928_p3 = ((icmp_ln571_reg_3294[0:0] === 1'b1) ? 32'd0 : 32'd2147483648);

assign select_ln582_1_fu_1319_p3 = ((icmp_ln582_1_fu_1269_p2[0:0] === 1'b1) ? trunc_ln583_1_reg_3383 : 32'd0);

assign select_ln582_fu_1077_p3 = ((icmp_ln582_fu_1027_p2[0:0] === 1'b1) ? trunc_ln583_reg_3323 : 32'd0);

assign select_ln588_1_fu_933_p3 = ((tmp_22_fu_925_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_fu_802_p3 = ((tmp_13_fu_794_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln631_1_fu_1460_p3 = ((and_ln631_1_fu_1445_p2[0:0] === 1'b1) ? Range2_all_ones_1_fu_1455_p2 : xor_ln631_1_fu_1440_p2);

assign select_ln631_fu_1218_p3 = ((and_ln631_fu_1203_p2[0:0] === 1'b1) ? Range2_all_ones_fu_1213_p2 : xor_ln631_fu_1198_p2);

assign select_ln639_1_fu_1571_p3 = ((and_ln639_fu_1529_p2[0:0] === 1'b1) ? and_ln641_fu_1542_p2 : select_ln642_1_fu_1564_p3);

assign select_ln639_2_fu_1746_p3 = ((and_ln639_1_fu_1719_p2[0:0] === 1'b1) ? Range1_all_ones_2_fu_1723_p2 : select_ln642_2_fu_1741_p3);

assign select_ln639_3_fu_1761_p3 = ((and_ln639_1_fu_1719_p2[0:0] === 1'b1) ? and_ln641_1_fu_1732_p2 : select_ln642_3_fu_1754_p3);

assign select_ln639_fu_1556_p3 = ((and_ln639_fu_1529_p2[0:0] === 1'b1) ? Range1_all_ones_fu_1533_p2 : select_ln642_fu_1551_p3);

assign select_ln642_1_fu_1564_p3 = ((and_ln642_reg_3579[0:0] === 1'b1) ? Range1_all_zeros_fu_1537_p2 : or_ln645_fu_1547_p2);

assign select_ln642_2_fu_1741_p3 = ((and_ln642_1_reg_3644[0:0] === 1'b1) ? Range1_all_ones_3_reg_3621 : xor_ln621_3_reg_3614);

assign select_ln642_3_fu_1754_p3 = ((and_ln642_1_reg_3644[0:0] === 1'b1) ? Range1_all_zeros_2_fu_1727_p2 : or_ln645_1_fu_1737_p2);

assign select_ln642_fu_1551_p3 = ((and_ln642_reg_3579[0:0] === 1'b1) ? Range1_all_ones_1_reg_3556 : xor_ln621_2_reg_3549);

assign select_ln964_1_fu_2569_p3 = ((tmp_36_reg_3867[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign select_ln964_fu_2475_p3 = ((tmp_32_reg_3842[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln281_1_fu_2910_p1 = sh_amt_4_reg_3975;

assign sext_ln281_fu_2676_p1 = sh_amt_2_reg_3909;

assign sext_ln294_1_fu_3035_p1 = sh_amt_5_reg_4005;

assign sext_ln294_fu_2844_p1 = sh_amt_3_reg_3933;

assign sext_ln581_1_fu_901_p1 = sh_amt_1_reg_3377;

assign sext_ln581_fu_769_p1 = sh_amt_reg_3317;

assign sext_ln591_1_fu_1279_p1 = $signed(add_ln591_1_fu_1274_p2);

assign sext_ln591_fu_1037_p1 = $signed(add_ln591_fu_1032_p2);

assign sext_ln618_1_fu_1402_p1 = pos1_1_reg_3485;

assign sext_ln618_fu_1160_p1 = pos1_reg_3422;

assign sext_ln619_1_fu_986_p1 = pos2_1_fu_981_p2;

assign sext_ln619_fu_855_p1 = pos2_fu_850_p2;

assign sh_amt_1_fu_730_p3 = ((QUAN_INC_1_fu_712_p2[0:0] === 1'b1) ? add_ln581_1_fu_718_p2 : sub_ln581_1_fu_724_p2);

assign sh_amt_2_fu_2657_p2 = (9'd150 - exp_V_2_fu_2643_p1);

assign sh_amt_3_fu_2689_p2 = ($signed(9'd0) - $signed(sh_amt_2_reg_3909));

assign sh_amt_4_fu_2829_p2 = (9'd150 - exp_V_3_fu_2815_p1);

assign sh_amt_5_fu_2923_p2 = ($signed(9'd0) - $signed(sh_amt_4_reg_3975));

assign sh_amt_fu_640_p3 = ((QUAN_INC_fu_622_p2[0:0] === 1'b1) ? add_ln581_fu_628_p2 : sub_ln581_fu_634_p2);

assign shl_ln297_1_fu_3053_p2 = zext_ln283_1_fu_3032_p1 << sext_ln294_1_fu_3035_p1;

assign shl_ln297_fu_2862_p2 = zext_ln283_fu_2841_p1 << sext_ln294_fu_2844_p1;

assign shl_ln604_1_fu_1701_p2 = trunc_ln583_1_reg_3383 << sext_ln581_1_reg_3463;

assign shl_ln604_fu_1511_p2 = trunc_ln583_reg_3323 << sext_ln581_reg_3400;

assign shl_ln958_1_fu_2527_p2 = tmp_V_5_reg_3812 << sub_ln958_1_fu_2522_p2;

assign shl_ln958_fu_2337_p2 = tmp_V_4_reg_3761 << sub_ln958_fu_2332_p2;

assign stageIndex_V_fu_2081_p2 = (t_V_reg_309 + 3'd1);

assign sub_ln461_1_fu_3104_p2 = (32'd0 - select_ln285_3_reg_4035);

assign sub_ln461_fu_3021_p2 = (32'd0 - select_ln285_1_reg_3989);

assign sub_ln581_1_fu_724_p2 = (12'd23 - F2_1_fu_706_p2);

assign sub_ln581_fu_634_p2 = (12'd23 - F2_fu_616_p2);

assign sub_ln944_1_fu_2308_p2 = (32'd32 - l_1_fu_2300_p3);

assign sub_ln944_fu_2152_p2 = (32'd32 - l_fu_2144_p3);

assign sub_ln947_1_fu_2393_p2 = ($signed(6'd57) - $signed(trunc_ln947_1_reg_3827));

assign sub_ln947_fu_2201_p2 = ($signed(6'd57) - $signed(trunc_ln947_reg_3776));

assign sub_ln958_1_fu_2522_p2 = (32'd25 - sub_ln944_1_reg_3820);

assign sub_ln958_fu_2332_p2 = (32'd25 - sub_ln944_reg_3769);

assign sub_ln964_1_fu_2576_p2 = (8'd9 - trunc_ln943_1_reg_3832);

assign sub_ln964_fu_2482_p2 = (8'd9 - trunc_ln943_reg_3781);

assign tmp185_cast_cast_fu_826_p3 = ((QUAN_INC_reg_3311[0:0] === 1'b1) ? 12'd2 : 12'd1);

assign tmp190_cast_cast_fu_957_p3 = ((QUAN_INC_1_reg_3371[0:0] === 1'b1) ? 12'd2 : 12'd1);

assign tmp_10_fu_505_p3 = rsignExt_V_2_reg_3199[32'd23];

assign tmp_12_fu_652_p4 = {{sh_amt_fu_640_p3[11:5]}};

assign tmp_13_fu_794_p3 = bitcast_ln696_fu_790_p1[32'd31];

assign tmp_15_fu_1063_p3 = p_Val2_13_fu_1058_p2[32'd31];

assign tmp_19_fu_1601_p3 = pos1_reg_3422[32'd11];

assign tmp_21_fu_742_p4 = {{sh_amt_1_fu_730_p3[11:5]}};

assign tmp_22_fu_925_p3 = bitcast_ln696_2_fu_922_p1[32'd31];

assign tmp_24_fu_1305_p3 = p_Val2_19_fu_1300_p2[32'd31];

assign tmp_28_fu_1791_p3 = pos1_1_reg_3485[32'd11];

assign tmp_2_fu_587_p3 = {{1'd1}, {trunc_ln565_reg_3251}};

assign tmp_30_fu_2185_p4 = {{lsb_index_fu_2180_p2[31:1]}};

assign tmp_31_fu_2233_p3 = lsb_index_fu_2180_p2[32'd31];

assign tmp_34_fu_2377_p4 = {{lsb_index_1_fu_2372_p2[31:1]}};

assign tmp_35_fu_2425_p3 = lsb_index_1_fu_2372_p2[32'd31];

assign tmp_38_fu_2694_p4 = {{sh_amt_3_fu_2689_p2[8:5]}};

assign tmp_39_fu_2847_p3 = reg_V_reg_3887[32'd31];

assign tmp_3_fu_677_p3 = {{1'd1}, {trunc_ln565_1_reg_3275}};

assign tmp_41_fu_2928_p4 = {{sh_amt_5_fu_2923_p2[8:5]}};

assign tmp_42_fu_3038_p3 = reg_V_1_reg_3953[32'd31];

assign tmp_4_fu_486_p3 = lsignExt_V_2_reg_3192[32'd23];

assign tmp_5_fu_2493_p3 = {{p_Result_31_reg_3735}, {add_ln964_fu_2487_p2}};

assign tmp_6_fu_2087_p3 = {{t_V_reg_309}, {2'd0}};

assign tmp_7_fu_2587_p3 = {{p_Result_34_reg_3786}, {add_ln964_1_fu_2581_p2}};

assign tmp_8_fu_2669_p3 = {{1'd1}, {trunc_ln270_reg_3897}};

assign tmp_9_fu_2903_p3 = {{1'd1}, {trunc_ln270_1_reg_3963}};

assign tmp_V_2_fu_2174_p2 = (32'd0 - p_Val2_1_fu_232);

assign tmp_V_4_fu_2129_p3 = ((p_Result_31_reg_3735[0:0] === 1'b1) ? tmp_V_reg_3741 : p_Val2_s_fu_228);

assign tmp_V_5_fu_2285_p3 = ((p_Result_34_reg_3786[0:0] === 1'b1) ? tmp_V_2_reg_3792 : p_Val2_1_fu_232);

assign tmp_V_fu_2111_p2 = (32'd0 - p_Val2_s_fu_228);

assign trunc_ln132_fu_2117_p1 = configReg_q0[3:0];

assign trunc_ln262_1_fu_2793_p1 = reg_V_1_fu_2786_p3[30:0];

assign trunc_ln262_fu_2621_p1 = reg_V_fu_2614_p3[30:0];

assign trunc_ln270_1_fu_2819_p1 = reg_V_1_fu_2786_p3[22:0];

assign trunc_ln270_fu_2647_p1 = reg_V_fu_2614_p3[22:0];

assign trunc_ln556_1_fu_558_p1 = ireg_V_1_fu_554_p1[62:0];

assign trunc_ln556_fu_528_p1 = ireg_V_fu_524_p1[62:0];

assign trunc_ln565_1_fu_580_p1 = ireg_V_1_fu_554_p1[51:0];

assign trunc_ln565_fu_550_p1 = ireg_V_fu_524_p1[51:0];

assign trunc_ln583_1_fu_738_p1 = p_Val2_28_fu_694_p3[31:0];

assign trunc_ln583_fu_648_p1 = p_Val2_27_fu_604_p3[31:0];

assign trunc_ln586_1_fu_918_p1 = ashr_ln586_1_fu_913_p2[31:0];

assign trunc_ln586_fu_786_p1 = ashr_ln586_fu_781_p2[31:0];

assign trunc_ln943_1_fu_2318_p1 = l_1_fu_2300_p3[7:0];

assign trunc_ln943_fu_2162_p1 = l_fu_2144_p3[7:0];

assign trunc_ln947_1_fu_2314_p1 = sub_ln944_1_fu_2308_p2[5:0];

assign trunc_ln947_fu_2158_p1 = sub_ln944_fu_2152_p2[5:0];

assign underflow_1_fu_1988_p2 = (xor_ln659_1_fu_1983_p2 & select_ln557_1_reg_3688);

assign underflow_fu_1896_p2 = (xor_ln659_fu_1891_p2 & select_ln557_reg_3663);

assign xor_ln102_fu_448_p2 = (lrclk_V_0_data_reg ^ 1'd1);

assign xor_ln107_1_fu_464_p2 = (or_ln102_fu_443_p2 ^ 1'd1);

assign xor_ln107_fu_453_p2 = (readyLch ^ 1'd1);

assign xor_ln278_1_fu_2950_p2 = (icmp_ln278_1_reg_3968 ^ 1'd1);

assign xor_ln278_fu_2716_p2 = (icmp_ln278_reg_3902 ^ 1'd1);

assign xor_ln282_1_fu_2972_p2 = (or_ln282_1_fu_2968_p2 ^ 1'd1);

assign xor_ln282_fu_2738_p2 = (or_ln282_fu_2734_p2 ^ 1'd1);

assign xor_ln284_1_fu_3004_p2 = (or_ln284_1_fu_2998_p2 ^ 1'd1);

assign xor_ln284_fu_2770_p2 = (or_ln284_fu_2764_p2 ^ 1'd1);

assign xor_ln285_1_fu_3076_p2 = (icmp_ln285_1_reg_4000 ^ 1'd1);

assign xor_ln285_fu_2885_p2 = (icmp_ln285_reg_3928 ^ 1'd1);

assign xor_ln340_1_fu_1998_p2 = (select_ln557_1_reg_3688 ^ 1'd1);

assign xor_ln340_fu_1906_p2 = (select_ln557_reg_3663 ^ 1'd1);

assign xor_ln403_1_fu_1350_p2 = (p_Result_29_reg_3473 ^ 1'd1);

assign xor_ln403_fu_1108_p2 = (p_Result_25_reg_3410 ^ 1'd1);

assign xor_ln416_1_fu_1313_p2 = (tmp_24_fu_1305_p3 ^ 1'd1);

assign xor_ln416_fu_1071_p2 = (tmp_15_fu_1063_p3 ^ 1'd1);

assign xor_ln571_1_fu_2050_p2 = (icmp_ln571_1_reg_3354 ^ 1'd1);

assign xor_ln571_fu_1958_p2 = (icmp_ln571_reg_3294 ^ 1'd1);

assign xor_ln582_1_fu_1326_p2 = (icmp_ln582_1_fu_1269_p2 ^ 1'd1);

assign xor_ln582_fu_1084_p2 = (icmp_ln582_fu_1027_p2 ^ 1'd1);

assign xor_ln603_1_fu_1390_p2 = (1'd1 ^ and_ln603_4_fu_1385_p2);

assign xor_ln603_fu_1148_p2 = (1'd1 ^ and_ln603_1_fu_1143_p2);

assign xor_ln621_1_fu_1823_p2 = (icmp_ln621_1_reg_3607 ^ 1'd1);

assign xor_ln621_2_fu_1168_p2 = (tmp_17_reg_3429 ^ 1'd1);

assign xor_ln621_3_fu_1410_p2 = (tmp_26_reg_3492 ^ 1'd1);

assign xor_ln621_fu_1633_p2 = (icmp_ln621_reg_3542 ^ 1'd1);

assign xor_ln631_1_fu_1440_p2 = (tmp_27_reg_3498 ^ 1'd1);

assign xor_ln631_fu_1198_p2 = (tmp_18_reg_3435 ^ 1'd1);

assign xor_ln639_2_fu_1236_p2 = (icmp_ln631_reg_3440 ^ 1'd1);

assign xor_ln639_fu_1478_p2 = (icmp_ln631_1_reg_3503 ^ 1'd1);

assign xor_ln652_1_fu_1586_p2 = (select_ln631_reg_3563 ^ 1'd1);

assign xor_ln652_3_fu_1776_p2 = (select_ln631_1_reg_3628 ^ 1'd1);

assign xor_ln652_4_fu_1251_p2 = (1'd1 ^ and_ln403_fu_1095_p2);

assign xor_ln652_5_fu_1493_p2 = (1'd1 ^ and_ln403_3_fu_1337_p2);

assign xor_ln658_1_fu_1684_p2 = (p_Result_23_reg_3237 ^ 1'd1);

assign xor_ln658_2_fu_1667_p2 = (deleted_zeros_fu_1579_p3 ^ 1'd1);

assign xor_ln658_3_fu_1874_p2 = (p_Result_27_reg_3261 ^ 1'd1);

assign xor_ln658_fu_1857_p2 = (deleted_zeros_1_fu_1769_p3 ^ 1'd1);

assign xor_ln659_1_fu_1983_p2 = (1'd1 ^ and_ln659_2_reg_3700);

assign xor_ln659_fu_1891_p2 = (1'd1 ^ and_ln659_reg_3675);

assign xor_ln949_1_fu_2433_p2 = (tmp_35_fu_2425_p3 ^ 1'd1);

assign xor_ln949_fu_2241_p2 = (tmp_31_fu_2233_p3 ^ 1'd1);

assign zext_ln129_fu_2095_p1 = tmp_6_fu_2087_p3;

assign zext_ln215_fu_410_p1 = r_V_3_fu_400_p4;

assign zext_ln283_1_fu_3032_p1 = tmp_9_reg_3995;

assign zext_ln283_fu_2841_p1 = tmp_8_reg_3923;

assign zext_ln285_1_fu_3059_p1 = select_ln285_2_reg_4015;

assign zext_ln285_fu_2868_p1 = select_ln285_reg_3943;

assign zext_ln415_1_fu_1296_p1 = qb_1_fu_1290_p3;

assign zext_ln415_fu_1054_p1 = qb_fu_1048_p3;

assign zext_ln461_1_fu_674_p1 = exp_tmp_V_1_reg_3270;

assign zext_ln461_fu_584_p1 = exp_tmp_V_reg_3246;

assign zext_ln544_1_fu_476_p1 = r_V_3_reg_3127;

assign zext_ln544_2_fu_3094_p1 = ret_V_3_reg_4025;

assign zext_ln544_fu_420_p1 = ret_V_reg_3137;

assign zext_ln586_1_fu_909_p1 = $unsigned(sext_ln581_1_fu_901_p1);

assign zext_ln586_fu_777_p1 = $unsigned(sext_ln581_fu_769_p1);

assign zext_ln623_1_fu_1415_p1 = $unsigned(sext_ln618_1_fu_1402_p1);

assign zext_ln623_fu_1173_p1 = $unsigned(sext_ln618_fu_1160_p1);

assign zext_ln635_1_fu_1012_p1 = $unsigned(sext_ln619_1_fu_986_p1);

assign zext_ln635_fu_881_p1 = $unsigned(sext_ln619_fu_855_p1);

assign zext_ln947_1_fu_2398_p1 = sub_ln947_1_fu_2393_p2;

assign zext_ln947_fu_2206_p1 = sub_ln947_fu_2201_p2;

always @ (posedge ap_clk) begin
    zext_ln215_reg_3132[30] <= 1'b0;
    zext_ln461_reg_3280[11] <= 1'b0;
    zext_ln461_1_reg_3340[11] <= 1'b0;
    zext_ln635_reg_3447[53:32] <= 22'b0000000000000000000000;
    zext_ln635_1_reg_3510[53:32] <= 22'b0000000000000000000000;
    or_ln_reg_3797[31:1] <= 31'b0000000000000000000000000000000;
    or_ln949_1_reg_3847[31:1] <= 31'b0000000000000000000000000000000;
    tmp_8_reg_3923[23] <= 1'b1;
    tmp_9_reg_3995[23] <= 1'b1;
end

endmodule //pynq_dsp_hls
