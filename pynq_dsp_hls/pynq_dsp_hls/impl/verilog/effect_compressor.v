// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module effect_compressor (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inData_l,
        inData_r,
        config_r_address0,
        config_r_ce0,
        config_r_q0,
        config_offset,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] inData_l;
input  [31:0] inData_r;
output  [7:0] config_r_address0;
output   config_r_ce0;
input  [31:0] config_r_q0;
input  [4:0] config_offset;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] config_r_address0;
reg config_r_ce0;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] grp_fu_95_p2;
reg   [31:0] reg_121;
wire    ap_CS_fsm_state11;
reg   [0:0] and_ln24_1_reg_525;
wire    ap_CS_fsm_state22;
wire   [31:0] grp_fu_99_p2;
reg   [31:0] reg_126;
reg   [0:0] and_ln31_1_reg_531;
wire   [8:0] tmp_43_fu_131_p3;
reg   [8:0] tmp_43_reg_458;
wire   [30:0] trunc_ln368_fu_154_p1;
reg   [30:0] trunc_ln368_reg_468;
wire    ap_CS_fsm_state2;
wire   [0:0] or_ln24_1_fu_184_p2;
reg   [0:0] or_ln24_1_reg_473;
wire    ap_CS_fsm_state3;
wire   [31:0] thresh_fu_197_p1;
reg   [31:0] thresh_reg_491;
wire   [31:0] absL_fu_223_p1;
reg   [31:0] absL_reg_501;
wire   [31:0] absR_fu_248_p1;
reg   [31:0] absR_reg_507;
wire   [0:0] or_ln24_fu_275_p2;
reg   [0:0] or_ln24_reg_513;
wire   [0:0] or_ln31_fu_303_p2;
reg   [0:0] or_ln31_reg_519;
wire   [0:0] and_ln24_1_fu_313_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] and_ln31_1_fu_323_p2;
wire    ap_CS_fsm_state10;
wire   [30:0] trunc_ln368_4_fu_343_p1;
reg   [30:0] trunc_ln368_4_reg_542;
wire   [31:0] ratio_fu_354_p1;
wire    ap_CS_fsm_state12;
wire   [31:0] grp_fu_103_p2;
reg   [31:0] tmp_22_reg_553;
wire    ap_CS_fsm_state15;
wire   [31:0] grp_fu_107_p2;
reg   [31:0] tmp_26_reg_558;
wire   [0:0] grp_fu_111_p2;
reg   [0:0] tmp_34_reg_563;
wire   [0:0] grp_fu_115_p2;
reg   [0:0] tmp_39_reg_568;
wire   [63:0] tmp_44_fu_145_p3;
wire   [63:0] tmp_45_fu_334_p3;
reg   [31:0] grp_fu_95_p0;
reg   [31:0] grp_fu_95_p1;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state16;
reg   [31:0] grp_fu_99_p0;
reg   [31:0] grp_fu_99_p1;
reg   [31:0] grp_fu_111_p0;
reg   [31:0] grp_fu_111_p1;
wire    ap_CS_fsm_state21;
reg   [31:0] grp_fu_115_p0;
reg   [31:0] grp_fu_115_p1;
wire   [8:0] or_ln17_fu_139_p2;
wire   [7:0] tmp_31_fu_162_p4;
wire   [22:0] trunc_ln31_fu_158_p1;
wire   [0:0] icmp_ln24_3_fu_178_p2;
wire   [0:0] icmp_ln24_2_fu_172_p2;
wire   [31:0] p_Result_s_fu_190_p3;
wire   [31:0] p_Val2_13_fu_203_p1;
wire   [30:0] trunc_ln368_5_fu_207_p1;
wire   [31:0] p_Result_10_fu_215_p3;
wire   [31:0] p_Val2_14_fu_228_p1;
wire   [30:0] trunc_ln368_6_fu_232_p1;
wire   [31:0] p_Result_11_fu_240_p3;
wire   [7:0] tmp_30_fu_253_p4;
wire   [22:0] trunc_ln24_fu_211_p1;
wire   [0:0] icmp_ln24_1_fu_269_p2;
wire   [0:0] icmp_ln24_fu_263_p2;
wire   [7:0] tmp_35_fu_281_p4;
wire   [22:0] trunc_ln31_1_fu_236_p1;
wire   [0:0] icmp_ln31_1_fu_297_p2;
wire   [0:0] icmp_ln31_fu_291_p2;
wire   [0:0] and_ln24_fu_309_p2;
wire   [0:0] and_ln31_fu_319_p2;
wire   [8:0] or_ln18_fu_329_p2;
wire   [31:0] p_Result_9_fu_347_p3;
wire    ap_CS_fsm_state23;
wire   [31:0] bitcast_ln28_fu_364_p1;
wire   [31:0] xor_ln28_fu_368_p2;
wire   [0:0] and_ln28_fu_360_p2;
wire   [0:0] xor_ln24_fu_378_p2;
wire   [0:0] and_ln28_1_fu_383_p2;
wire   [31:0] bitcast_ln28_1_fu_374_p1;
wire   [31:0] select_ln28_fu_389_p3;
wire   [31:0] bitcast_ln35_fu_407_p1;
wire   [31:0] xor_ln35_fu_411_p2;
wire   [0:0] and_ln35_fu_403_p2;
wire   [0:0] xor_ln31_fu_421_p2;
wire   [0:0] and_ln35_1_fu_426_p2;
wire   [31:0] bitcast_ln35_1_fu_417_p1;
wire   [31:0] select_ln35_fu_432_p3;
wire   [31:0] dst_l_fu_397_p3;
wire   [31:0] dst_r_fu_440_p3;
reg   [1:0] grp_fu_95_opcode;
reg   [1:0] grp_fu_99_opcode;
reg   [22:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
end

pynq_dsp_hls_faddfYi #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_faddfYi_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_95_p0),
    .din1(grp_fu_95_p1),
    .opcode(grp_fu_95_opcode),
    .ce(1'b1),
    .dout(grp_fu_95_p2)
);

pynq_dsp_hls_faddfYi #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_faddfYi_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_99_p0),
    .din1(grp_fu_99_p1),
    .opcode(grp_fu_99_opcode),
    .ce(1'b1),
    .dout(grp_fu_99_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_121),
    .din1(ratio_fu_354_p1),
    .ce(1'b1),
    .dout(grp_fu_103_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_126),
    .din1(ratio_fu_354_p1),
    .ce(1'b1),
    .dout(grp_fu_107_p2)
);

pynq_dsp_hls_fcmpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pynq_dsp_hls_fcmpeOg_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_111_p0),
    .din1(grp_fu_111_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_111_p2)
);

pynq_dsp_hls_fcmpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
pynq_dsp_hls_fcmpeOg_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_115_p0),
    .din1(grp_fu_115_p1),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_115_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        absL_reg_501[30 : 0] <= absL_fu_223_p1[30 : 0];
        absR_reg_507[30 : 0] <= absR_fu_248_p1[30 : 0];
        or_ln24_reg_513 <= or_ln24_fu_275_p2;
        or_ln31_reg_519 <= or_ln31_fu_303_p2;
        thresh_reg_491[30 : 0] <= thresh_fu_197_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln24_1_reg_525 <= and_ln24_1_fu_313_p2;
        and_ln31_1_reg_531 <= and_ln31_1_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        or_ln24_1_reg_473 <= or_ln24_1_fu_184_p2;
        trunc_ln368_reg_468 <= trunc_ln368_fu_154_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln24_1_reg_525) & (1'b1 == ap_CS_fsm_state22)) | ((1'd0 == and_ln24_1_reg_525) & (1'b1 == ap_CS_fsm_state11)))) begin
        reg_121 <= grp_fu_95_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln31_1_reg_531) & (1'b1 == ap_CS_fsm_state22)) | ((1'd0 == and_ln31_1_reg_531) & (1'b1 == ap_CS_fsm_state11)))) begin
        reg_126 <= grp_fu_99_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln24_1_reg_525) & (1'b1 == ap_CS_fsm_state15))) begin
        tmp_22_reg_553 <= grp_fu_103_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln31_1_reg_531) & (1'b1 == ap_CS_fsm_state15))) begin
        tmp_26_reg_558 <= grp_fu_107_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln24_1_reg_525) & (1'b1 == ap_CS_fsm_state22))) begin
        tmp_34_reg_563 <= grp_fu_111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln31_1_reg_531) & (1'b1 == ap_CS_fsm_state22))) begin
        tmp_39_reg_568 <= grp_fu_115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_43_reg_458[8 : 4] <= tmp_43_fu_131_p3[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        trunc_ln368_4_reg_542 <= trunc_ln368_4_fu_343_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        config_r_address0 = tmp_45_fu_334_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        config_r_address0 = tmp_44_fu_145_p3;
    end else begin
        config_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        config_r_ce0 = 1'b1;
    end else begin
        config_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_111_p0 = inData_l;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_111_p0 = absL_fu_223_p1;
    end else begin
        grp_fu_111_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_111_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_111_p1 = thresh_fu_197_p1;
    end else begin
        grp_fu_111_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_115_p0 = inData_r;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_115_p0 = absR_fu_248_p1;
    end else begin
        grp_fu_115_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_115_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_115_p1 = thresh_fu_197_p1;
    end else begin
        grp_fu_115_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln24_1_reg_525)) begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_fu_95_opcode = 2'd1;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_fu_95_opcode = 2'd0;
        end else begin
            grp_fu_95_opcode = 'bx;
        end
    end else begin
        grp_fu_95_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_95_p0 = thresh_reg_491;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_95_p0 = absL_reg_501;
    end else begin
        grp_fu_95_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_95_p1 = tmp_22_reg_553;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_95_p1 = thresh_reg_491;
    end else begin
        grp_fu_95_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'd0 == and_ln31_1_reg_531)) begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_fu_99_opcode = 2'd1;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_fu_99_opcode = 2'd0;
        end else begin
            grp_fu_99_opcode = 'bx;
        end
    end else begin
        grp_fu_99_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_99_p0 = thresh_reg_491;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_99_p0 = absR_reg_507;
    end else begin
        grp_fu_99_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_99_p1 = tmp_26_reg_558;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_99_p1 = thresh_reg_491;
    end else begin
        grp_fu_99_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign absL_fu_223_p1 = p_Result_10_fu_215_p3;

assign absR_fu_248_p1 = p_Result_11_fu_240_p3;

assign and_ln24_1_fu_313_p2 = (grp_fu_111_p2 & and_ln24_fu_309_p2);

assign and_ln24_fu_309_p2 = (or_ln24_reg_513 & or_ln24_1_reg_473);

assign and_ln28_1_fu_383_p2 = (xor_ln24_fu_378_p2 & and_ln28_fu_360_p2);

assign and_ln28_fu_360_p2 = (tmp_34_reg_563 & or_ln24_reg_513);

assign and_ln31_1_fu_323_p2 = (grp_fu_115_p2 & and_ln31_fu_319_p2);

assign and_ln31_fu_319_p2 = (or_ln31_reg_519 & or_ln24_1_reg_473);

assign and_ln35_1_fu_426_p2 = (xor_ln31_fu_421_p2 & and_ln35_fu_403_p2);

assign and_ln35_fu_403_p2 = (tmp_39_reg_568 & or_ln31_reg_519);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_return_0 = dst_l_fu_397_p3;

assign ap_return_1 = dst_r_fu_440_p3;

assign bitcast_ln28_1_fu_374_p1 = xor_ln28_fu_368_p2;

assign bitcast_ln28_fu_364_p1 = reg_121;

assign bitcast_ln35_1_fu_417_p1 = xor_ln35_fu_411_p2;

assign bitcast_ln35_fu_407_p1 = reg_126;

assign dst_l_fu_397_p3 = ((and_ln24_1_reg_525[0:0] === 1'b1) ? inData_l : select_ln28_fu_389_p3);

assign dst_r_fu_440_p3 = ((and_ln31_1_reg_531[0:0] === 1'b1) ? inData_r : select_ln35_fu_432_p3);

assign icmp_ln24_1_fu_269_p2 = ((trunc_ln24_fu_211_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln24_2_fu_172_p2 = ((tmp_31_fu_162_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln24_3_fu_178_p2 = ((trunc_ln31_fu_158_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_263_p2 = ((tmp_30_fu_253_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln31_1_fu_297_p2 = ((trunc_ln31_1_fu_236_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_291_p2 = ((tmp_35_fu_281_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln17_fu_139_p2 = (tmp_43_fu_131_p3 | 9'd1);

assign or_ln18_fu_329_p2 = (tmp_43_reg_458 | 9'd2);

assign or_ln24_1_fu_184_p2 = (icmp_ln24_3_fu_178_p2 | icmp_ln24_2_fu_172_p2);

assign or_ln24_fu_275_p2 = (icmp_ln24_fu_263_p2 | icmp_ln24_1_fu_269_p2);

assign or_ln31_fu_303_p2 = (icmp_ln31_fu_291_p2 | icmp_ln31_1_fu_297_p2);

assign p_Result_10_fu_215_p3 = {{1'd0}, {trunc_ln368_5_fu_207_p1}};

assign p_Result_11_fu_240_p3 = {{1'd0}, {trunc_ln368_6_fu_232_p1}};

assign p_Result_9_fu_347_p3 = {{1'd0}, {trunc_ln368_4_reg_542}};

assign p_Result_s_fu_190_p3 = {{1'd0}, {trunc_ln368_reg_468}};

assign p_Val2_13_fu_203_p1 = inData_l;

assign p_Val2_14_fu_228_p1 = inData_r;

assign ratio_fu_354_p1 = p_Result_9_fu_347_p3;

assign select_ln28_fu_389_p3 = ((and_ln28_1_fu_383_p2[0:0] === 1'b1) ? bitcast_ln28_1_fu_374_p1 : reg_121);

assign select_ln35_fu_432_p3 = ((and_ln35_1_fu_426_p2[0:0] === 1'b1) ? bitcast_ln35_1_fu_417_p1 : reg_126);

assign thresh_fu_197_p1 = p_Result_s_fu_190_p3;

assign tmp_30_fu_253_p4 = {{p_Val2_13_fu_203_p1[30:23]}};

assign tmp_31_fu_162_p4 = {{config_r_q0[30:23]}};

assign tmp_35_fu_281_p4 = {{p_Val2_14_fu_228_p1[30:23]}};

assign tmp_43_fu_131_p3 = {{config_offset}, {4'd0}};

assign tmp_44_fu_145_p3 = {{55'd0}, {or_ln17_fu_139_p2}};

assign tmp_45_fu_334_p3 = {{55'd0}, {or_ln18_fu_329_p2}};

assign trunc_ln24_fu_211_p1 = p_Val2_13_fu_203_p1[22:0];

assign trunc_ln31_1_fu_236_p1 = p_Val2_14_fu_228_p1[22:0];

assign trunc_ln31_fu_158_p1 = config_r_q0[22:0];

assign trunc_ln368_4_fu_343_p1 = config_r_q0[30:0];

assign trunc_ln368_5_fu_207_p1 = p_Val2_13_fu_203_p1[30:0];

assign trunc_ln368_6_fu_232_p1 = p_Val2_14_fu_228_p1[30:0];

assign trunc_ln368_fu_154_p1 = config_r_q0[30:0];

assign xor_ln24_fu_378_p2 = (1'd1 ^ and_ln24_1_reg_525);

assign xor_ln28_fu_368_p2 = (bitcast_ln28_fu_364_p1 ^ 32'd2147483648);

assign xor_ln31_fu_421_p2 = (1'd1 ^ and_ln31_1_reg_531);

assign xor_ln35_fu_411_p2 = (bitcast_ln35_fu_407_p1 ^ 32'd2147483648);

always @ (posedge ap_clk) begin
    tmp_43_reg_458[3:0] <= 4'b0000;
    thresh_reg_491[31] <= 1'b0;
    absL_reg_501[31] <= 1'b0;
    absR_reg_507[31] <= 1'b0;
end

endmodule //effect_compressor
