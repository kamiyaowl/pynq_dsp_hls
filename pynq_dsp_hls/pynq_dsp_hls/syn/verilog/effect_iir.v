// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module effect_iir (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        inData_l,
        inData_r,
        config_r_address0,
        config_r_ce0,
        config_r_we0,
        config_r_d0,
        config_r_q0,
        config_offset,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 38'd1;
parameter    ap_ST_fsm_state2 = 38'd2;
parameter    ap_ST_fsm_state3 = 38'd4;
parameter    ap_ST_fsm_state4 = 38'd8;
parameter    ap_ST_fsm_state5 = 38'd16;
parameter    ap_ST_fsm_state6 = 38'd32;
parameter    ap_ST_fsm_state7 = 38'd64;
parameter    ap_ST_fsm_state8 = 38'd128;
parameter    ap_ST_fsm_state9 = 38'd256;
parameter    ap_ST_fsm_state10 = 38'd512;
parameter    ap_ST_fsm_state11 = 38'd1024;
parameter    ap_ST_fsm_state12 = 38'd2048;
parameter    ap_ST_fsm_state13 = 38'd4096;
parameter    ap_ST_fsm_state14 = 38'd8192;
parameter    ap_ST_fsm_state15 = 38'd16384;
parameter    ap_ST_fsm_state16 = 38'd32768;
parameter    ap_ST_fsm_state17 = 38'd65536;
parameter    ap_ST_fsm_state18 = 38'd131072;
parameter    ap_ST_fsm_state19 = 38'd262144;
parameter    ap_ST_fsm_state20 = 38'd524288;
parameter    ap_ST_fsm_state21 = 38'd1048576;
parameter    ap_ST_fsm_state22 = 38'd2097152;
parameter    ap_ST_fsm_state23 = 38'd4194304;
parameter    ap_ST_fsm_state24 = 38'd8388608;
parameter    ap_ST_fsm_state25 = 38'd16777216;
parameter    ap_ST_fsm_state26 = 38'd33554432;
parameter    ap_ST_fsm_state27 = 38'd67108864;
parameter    ap_ST_fsm_state28 = 38'd134217728;
parameter    ap_ST_fsm_state29 = 38'd268435456;
parameter    ap_ST_fsm_state30 = 38'd536870912;
parameter    ap_ST_fsm_state31 = 38'd1073741824;
parameter    ap_ST_fsm_state32 = 38'd2147483648;
parameter    ap_ST_fsm_state33 = 38'd4294967296;
parameter    ap_ST_fsm_state34 = 38'd8589934592;
parameter    ap_ST_fsm_state35 = 38'd17179869184;
parameter    ap_ST_fsm_state36 = 38'd34359738368;
parameter    ap_ST_fsm_state37 = 38'd68719476736;
parameter    ap_ST_fsm_state38 = 38'd137438953472;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] inData_l;
input  [31:0] inData_r;
output  [7:0] config_r_address0;
output   config_r_ce0;
output   config_r_we0;
output  [31:0] config_r_d0;
input  [31:0] config_r_q0;
input  [4:0] config_offset;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] config_r_address0;
reg config_r_ce0;
reg config_r_we0;
reg[31:0] config_r_d0;

(* fsm_encoding = "none" *) reg   [37:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_206;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state5;
reg   [31:0] reg_211;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [31:0] grp_fu_188_p2;
reg   [31:0] reg_215;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state22;
wire   [31:0] grp_fu_193_p2;
reg   [31:0] reg_221;
reg   [31:0] reg_226;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state16;
reg   [31:0] reg_232;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state14;
wire   [31:0] grp_fu_184_p2;
reg   [31:0] reg_237;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state36;
reg   [31:0] reg_242;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state37;
wire   [8:0] tmp_15_fu_247_p3;
reg   [8:0] tmp_15_reg_530;
reg   [7:0] config_addr_9_reg_556;
reg   [7:0] config_addr_10_reg_561;
wire    ap_CS_fsm_state4;
reg   [31:0] config_load_9_reg_566;
wire   [31:0] b0_fu_312_p1;
reg   [31:0] b0_reg_578;
wire   [31:0] b1_fu_317_p1;
reg   [31:0] b1_reg_583;
wire   [31:0] bz1L_fu_322_p1;
wire    ap_CS_fsm_state6;
wire   [31:0] bz1R_fu_326_p1;
reg   [31:0] tmp_2_reg_609;
reg   [7:0] config_addr_11_reg_614;
reg   [7:0] config_addr_12_reg_619;
wire   [31:0] b2_fu_387_p1;
reg   [31:0] b2_reg_629;
wire   [31:0] bz2L_fu_392_p1;
reg   [7:0] config_addr_5_reg_639;
wire   [31:0] bz2R_fu_411_p1;
reg   [7:0] config_addr_6_reg_649;
reg   [31:0] config_load_6_reg_659;
reg   [7:0] config_addr_7_reg_664;
reg   [7:0] config_addr_8_reg_669;
reg   [31:0] config_load_1_reg_674;
reg   [31:0] config_load_7_reg_679;
wire    ap_CS_fsm_state17;
reg   [31:0] config_load_8_reg_684;
wire    ap_CS_fsm_state18;
wire   [31:0] a1_fu_472_p1;
wire    ap_CS_fsm_state19;
wire   [31:0] a2_fu_478_p1;
wire   [31:0] az1L_fu_483_p1;
wire   [31:0] az2L_fu_492_p1;
wire   [31:0] grp_fu_198_p2;
reg   [31:0] tmp_12_reg_721;
wire   [31:0] grp_fu_202_p2;
reg   [31:0] tmp_14_reg_726;
wire   [63:0] tmp_18_fu_261_p3;
wire   [63:0] tmp_19_fu_275_p3;
wire   [63:0] tmp_25_fu_289_p3;
wire   [63:0] tmp_26_fu_303_p3;
wire   [63:0] tmp_20_fu_336_p3;
wire   [63:0] tmp_27_fu_350_p3;
wire   [63:0] tmp_28_fu_364_p3;
wire   [63:0] tmp_16_fu_378_p3;
wire   [63:0] tmp_21_fu_402_p3;
wire   [63:0] tmp_22_fu_421_p3;
wire   [63:0] tmp_17_fu_435_p3;
wire   [63:0] tmp_23_fu_449_p3;
wire   [63:0] tmp_24_fu_463_p3;
wire    ap_CS_fsm_state20;
wire   [31:0] bitcast_ln705_2_fu_500_p1;
wire    ap_CS_fsm_state21;
wire   [31:0] bitcast_ln705_3_fu_504_p1;
wire   [31:0] bitcast_ln705_fu_508_p1;
wire    ap_CS_fsm_state38;
wire   [31:0] bitcast_ln705_1_fu_513_p1;
reg   [31:0] grp_fu_184_p0;
reg   [31:0] grp_fu_184_p1;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state31;
reg   [31:0] grp_fu_188_p0;
reg   [31:0] grp_fu_188_p1;
reg   [31:0] grp_fu_193_p0;
reg   [31:0] grp_fu_193_p1;
wire   [31:0] grp_fu_198_p0;
wire   [31:0] grp_fu_198_p1;
wire   [31:0] grp_fu_202_p0;
wire   [31:0] grp_fu_202_p1;
wire   [8:0] or_ln112_fu_255_p2;
wire   [8:0] or_ln113_fu_270_p2;
wire   [8:0] or_ln121_fu_284_p2;
wire   [8:0] or_ln122_fu_298_p2;
wire   [8:0] or_ln114_fu_331_p2;
wire   [8:0] or_ln123_fu_345_p2;
wire   [8:0] or_ln124_fu_359_p2;
wire   [8:0] or_ln110_fu_373_p2;
wire   [8:0] or_ln117_fu_397_p2;
wire   [8:0] or_ln118_fu_416_p2;
wire   [8:0] or_ln111_fu_430_p2;
wire   [8:0] or_ln119_fu_444_p2;
wire   [8:0] or_ln120_fu_458_p2;
reg   [37:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 38'd1;
end

pynq_dsp_hls_faddbkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_faddbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_184_p0),
    .din1(grp_fu_184_p1),
    .ce(1'b1),
    .dout(grp_fu_184_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_188_p0),
    .din1(grp_fu_188_p1),
    .ce(1'b1),
    .dout(grp_fu_188_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_193_p0),
    .din1(grp_fu_193_p1),
    .ce(1'b1),
    .dout(grp_fu_193_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_198_p0),
    .din1(grp_fu_198_p1),
    .ce(1'b1),
    .dout(grp_fu_198_p2)
);

pynq_dsp_hls_fmulcud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulcud_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_202_p0),
    .din1(grp_fu_202_p1),
    .ce(1'b1),
    .dout(grp_fu_202_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        b0_reg_578 <= b0_fu_312_p1;
        b1_reg_583 <= b1_fu_317_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        b2_reg_629 <= b2_fu_387_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        config_addr_10_reg_561[7 : 4] <= tmp_26_fu_303_p3[7 : 4];
        config_load_9_reg_566 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        config_addr_11_reg_614[7 : 4] <= tmp_27_fu_350_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        config_addr_12_reg_619[7 : 4] <= tmp_28_fu_364_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        config_addr_5_reg_639[7 : 4] <= tmp_21_fu_402_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        config_addr_6_reg_649[7 : 4] <= tmp_22_fu_421_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        config_addr_7_reg_664[7 : 4] <= tmp_23_fu_449_p3[7 : 4];
        config_addr_8_reg_669[7 : 4] <= tmp_24_fu_463_p3[7 : 4];
        config_load_1_reg_674 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        config_addr_9_reg_556[7 : 4] <= tmp_25_fu_289_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        config_load_6_reg_659 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        config_load_7_reg_679 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        config_load_8_reg_684 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_206 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_211 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_215 <= grp_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_221 <= grp_fu_193_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_226 <= grp_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_232 <= config_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_237 <= grp_fu_184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_242 <= grp_fu_184_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_12_reg_721 <= grp_fu_198_p2;
        tmp_14_reg_726 <= grp_fu_202_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_15_reg_530[8 : 4] <= tmp_15_fu_247_p3[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_2_reg_609 <= grp_fu_193_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        config_r_address0 = config_addr_6_reg_649;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        config_r_address0 = config_addr_5_reg_639;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        config_r_address0 = config_addr_12_reg_619;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        config_r_address0 = config_addr_11_reg_614;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        config_r_address0 = config_addr_10_reg_561;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        config_r_address0 = config_addr_9_reg_556;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        config_r_address0 = config_addr_7_reg_664;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17))) begin
        config_r_address0 = config_addr_8_reg_669;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        config_r_address0 = tmp_23_fu_449_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        config_r_address0 = tmp_17_fu_435_p3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        config_r_address0 = tmp_22_fu_421_p3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        config_r_address0 = tmp_21_fu_402_p3;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        config_r_address0 = tmp_16_fu_378_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        config_r_address0 = tmp_28_fu_364_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        config_r_address0 = tmp_27_fu_350_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        config_r_address0 = tmp_20_fu_336_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        config_r_address0 = tmp_26_fu_303_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        config_r_address0 = tmp_25_fu_289_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        config_r_address0 = tmp_19_fu_275_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        config_r_address0 = tmp_18_fu_261_p3;
    end else begin
        config_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        config_r_ce0 = 1'b1;
    end else begin
        config_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        config_r_d0 = bitcast_ln705_1_fu_513_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        config_r_d0 = bitcast_ln705_fu_508_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        config_r_d0 = reg_206;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        config_r_d0 = config_load_9_reg_566;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        config_r_d0 = bitcast_ln705_3_fu_504_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        config_r_d0 = bitcast_ln705_2_fu_500_p1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        config_r_d0 = reg_232;
    end else begin
        config_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        config_r_we0 = 1'b1;
    end else begin
        config_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_184_p0 = reg_242;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_184_p0 = reg_237;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_184_p0 = reg_226;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_184_p0 = reg_215;
    end else begin
        grp_fu_184_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_184_p1 = tmp_14_reg_726;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_184_p1 = tmp_12_reg_721;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_184_p1 = reg_226;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_184_p1 = reg_215;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_184_p1 = tmp_2_reg_609;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_184_p1 = reg_221;
    end else begin
        grp_fu_184_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_188_p0 = az1L_fu_483_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_188_p0 = bz2R_fu_411_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_188_p0 = bz2L_fu_392_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_188_p0 = b0_reg_578;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_188_p0 = b0_fu_312_p1;
    end else begin
        grp_fu_188_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_188_p1 = a1_fu_472_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_188_p1 = b2_reg_629;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_188_p1 = b2_fu_387_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_188_p1 = inData_r;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_188_p1 = inData_l;
    end else begin
        grp_fu_188_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_193_p0 = az2L_fu_492_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_193_p0 = bz1R_fu_326_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_193_p0 = bz1L_fu_322_p1;
    end else begin
        grp_fu_193_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_193_p1 = a2_fu_478_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_193_p1 = b1_reg_583;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_193_p1 = b1_fu_317_p1;
    end else begin
        grp_fu_193_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a1_fu_472_p1 = reg_211;

assign a2_fu_478_p1 = config_load_1_reg_674;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return_0 = reg_237;

assign ap_return_1 = reg_242;

assign az1L_fu_483_p1 = reg_232;

assign az2L_fu_492_p1 = config_load_7_reg_679;

assign b0_fu_312_p1 = reg_206;

assign b1_fu_317_p1 = reg_211;

assign b2_fu_387_p1 = reg_211;

assign bitcast_ln705_1_fu_513_p1 = reg_242;

assign bitcast_ln705_2_fu_500_p1 = inData_l;

assign bitcast_ln705_3_fu_504_p1 = inData_r;

assign bitcast_ln705_fu_508_p1 = reg_237;

assign bz1L_fu_322_p1 = config_load_9_reg_566;

assign bz1R_fu_326_p1 = reg_206;

assign bz2L_fu_392_p1 = reg_232;

assign bz2R_fu_411_p1 = reg_211;

assign grp_fu_198_p0 = config_load_6_reg_659;

assign grp_fu_198_p1 = reg_211;

assign grp_fu_202_p0 = config_load_8_reg_684;

assign grp_fu_202_p1 = config_load_1_reg_674;

assign or_ln110_fu_373_p2 = (tmp_15_reg_530 | 9'd3);

assign or_ln111_fu_430_p2 = (tmp_15_reg_530 | 9'd4);

assign or_ln112_fu_255_p2 = (tmp_15_fu_247_p3 | 9'd5);

assign or_ln113_fu_270_p2 = (tmp_15_reg_530 | 9'd6);

assign or_ln114_fu_331_p2 = (tmp_15_reg_530 | 9'd7);

assign or_ln117_fu_397_p2 = (tmp_15_reg_530 | 9'd8);

assign or_ln118_fu_416_p2 = (tmp_15_reg_530 | 9'd9);

assign or_ln119_fu_444_p2 = (tmp_15_reg_530 | 9'd10);

assign or_ln120_fu_458_p2 = (tmp_15_reg_530 | 9'd11);

assign or_ln121_fu_284_p2 = (tmp_15_reg_530 | 9'd12);

assign or_ln122_fu_298_p2 = (tmp_15_reg_530 | 9'd13);

assign or_ln123_fu_345_p2 = (tmp_15_reg_530 | 9'd14);

assign or_ln124_fu_359_p2 = (tmp_15_reg_530 | 9'd15);

assign tmp_15_fu_247_p3 = {{config_offset}, {4'd0}};

assign tmp_16_fu_378_p3 = {{55'd0}, {or_ln110_fu_373_p2}};

assign tmp_17_fu_435_p3 = {{55'd0}, {or_ln111_fu_430_p2}};

assign tmp_18_fu_261_p3 = {{55'd0}, {or_ln112_fu_255_p2}};

assign tmp_19_fu_275_p3 = {{55'd0}, {or_ln113_fu_270_p2}};

assign tmp_20_fu_336_p3 = {{55'd0}, {or_ln114_fu_331_p2}};

assign tmp_21_fu_402_p3 = {{55'd0}, {or_ln117_fu_397_p2}};

assign tmp_22_fu_421_p3 = {{55'd0}, {or_ln118_fu_416_p2}};

assign tmp_23_fu_449_p3 = {{55'd0}, {or_ln119_fu_444_p2}};

assign tmp_24_fu_463_p3 = {{55'd0}, {or_ln120_fu_458_p2}};

assign tmp_25_fu_289_p3 = {{55'd0}, {or_ln121_fu_284_p2}};

assign tmp_26_fu_303_p3 = {{55'd0}, {or_ln122_fu_298_p2}};

assign tmp_27_fu_350_p3 = {{55'd0}, {or_ln123_fu_345_p2}};

assign tmp_28_fu_364_p3 = {{55'd0}, {or_ln124_fu_359_p2}};

always @ (posedge ap_clk) begin
    tmp_15_reg_530[3:0] <= 4'b0000;
    config_addr_9_reg_556[3:0] <= 4'b1100;
    config_addr_10_reg_561[3:0] <= 4'b1101;
    config_addr_11_reg_614[3:0] <= 4'b1110;
    config_addr_12_reg_619[3:0] <= 4'b1111;
    config_addr_5_reg_639[3:0] <= 4'b1000;
    config_addr_6_reg_649[3:0] <= 4'b1001;
    config_addr_7_reg_664[3:0] <= 4'b1010;
    config_addr_8_reg_669[3:0] <= 4'b1011;
end

endmodule //effect_iir
