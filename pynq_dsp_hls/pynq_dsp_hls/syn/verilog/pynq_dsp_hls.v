// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pynq_dsp_hls,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.000000,HLS_SYN_LAT=29,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=6,HLS_SYN_FF=4191,HLS_SYN_LUT=9418,HLS_VERSION=2019_1_3}" *)

module pynq_dsp_hls (
        ap_clk,
        ap_rst_n,
        lrclk_V,
        m_axi_physMemPtr_V_AWVALID,
        m_axi_physMemPtr_V_AWREADY,
        m_axi_physMemPtr_V_AWADDR,
        m_axi_physMemPtr_V_AWID,
        m_axi_physMemPtr_V_AWLEN,
        m_axi_physMemPtr_V_AWSIZE,
        m_axi_physMemPtr_V_AWBURST,
        m_axi_physMemPtr_V_AWLOCK,
        m_axi_physMemPtr_V_AWCACHE,
        m_axi_physMemPtr_V_AWPROT,
        m_axi_physMemPtr_V_AWQOS,
        m_axi_physMemPtr_V_AWREGION,
        m_axi_physMemPtr_V_AWUSER,
        m_axi_physMemPtr_V_WVALID,
        m_axi_physMemPtr_V_WREADY,
        m_axi_physMemPtr_V_WDATA,
        m_axi_physMemPtr_V_WSTRB,
        m_axi_physMemPtr_V_WLAST,
        m_axi_physMemPtr_V_WID,
        m_axi_physMemPtr_V_WUSER,
        m_axi_physMemPtr_V_ARVALID,
        m_axi_physMemPtr_V_ARREADY,
        m_axi_physMemPtr_V_ARADDR,
        m_axi_physMemPtr_V_ARID,
        m_axi_physMemPtr_V_ARLEN,
        m_axi_physMemPtr_V_ARSIZE,
        m_axi_physMemPtr_V_ARBURST,
        m_axi_physMemPtr_V_ARLOCK,
        m_axi_physMemPtr_V_ARCACHE,
        m_axi_physMemPtr_V_ARPROT,
        m_axi_physMemPtr_V_ARQOS,
        m_axi_physMemPtr_V_ARREGION,
        m_axi_physMemPtr_V_ARUSER,
        m_axi_physMemPtr_V_RVALID,
        m_axi_physMemPtr_V_RREADY,
        m_axi_physMemPtr_V_RDATA,
        m_axi_physMemPtr_V_RLAST,
        m_axi_physMemPtr_V_RID,
        m_axi_physMemPtr_V_RUSER,
        m_axi_physMemPtr_V_RRESP,
        m_axi_physMemPtr_V_BVALID,
        m_axi_physMemPtr_V_BREADY,
        m_axi_physMemPtr_V_BRESP,
        m_axi_physMemPtr_V_BID,
        m_axi_physMemPtr_V_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 57'd1;
parameter    ap_ST_fsm_state2 = 57'd2;
parameter    ap_ST_fsm_state3 = 57'd4;
parameter    ap_ST_fsm_state4 = 57'd8;
parameter    ap_ST_fsm_state5 = 57'd16;
parameter    ap_ST_fsm_state6 = 57'd32;
parameter    ap_ST_fsm_state7 = 57'd64;
parameter    ap_ST_fsm_state8 = 57'd128;
parameter    ap_ST_fsm_state9 = 57'd256;
parameter    ap_ST_fsm_state10 = 57'd512;
parameter    ap_ST_fsm_state11 = 57'd1024;
parameter    ap_ST_fsm_state12 = 57'd2048;
parameter    ap_ST_fsm_state13 = 57'd4096;
parameter    ap_ST_fsm_state14 = 57'd8192;
parameter    ap_ST_fsm_state15 = 57'd16384;
parameter    ap_ST_fsm_state16 = 57'd32768;
parameter    ap_ST_fsm_state17 = 57'd65536;
parameter    ap_ST_fsm_state18 = 57'd131072;
parameter    ap_ST_fsm_state19 = 57'd262144;
parameter    ap_ST_fsm_state20 = 57'd524288;
parameter    ap_ST_fsm_state21 = 57'd1048576;
parameter    ap_ST_fsm_state22 = 57'd2097152;
parameter    ap_ST_fsm_state23 = 57'd4194304;
parameter    ap_ST_fsm_state24 = 57'd8388608;
parameter    ap_ST_fsm_state25 = 57'd16777216;
parameter    ap_ST_fsm_state26 = 57'd33554432;
parameter    ap_ST_fsm_state27 = 57'd67108864;
parameter    ap_ST_fsm_state28 = 57'd134217728;
parameter    ap_ST_fsm_state29 = 57'd268435456;
parameter    ap_ST_fsm_state30 = 57'd536870912;
parameter    ap_ST_fsm_state31 = 57'd1073741824;
parameter    ap_ST_fsm_state32 = 57'd2147483648;
parameter    ap_ST_fsm_state33 = 57'd4294967296;
parameter    ap_ST_fsm_state34 = 57'd8589934592;
parameter    ap_ST_fsm_state35 = 57'd17179869184;
parameter    ap_ST_fsm_state36 = 57'd34359738368;
parameter    ap_ST_fsm_state37 = 57'd68719476736;
parameter    ap_ST_fsm_state38 = 57'd137438953472;
parameter    ap_ST_fsm_state39 = 57'd274877906944;
parameter    ap_ST_fsm_state40 = 57'd549755813888;
parameter    ap_ST_fsm_state41 = 57'd1099511627776;
parameter    ap_ST_fsm_state42 = 57'd2199023255552;
parameter    ap_ST_fsm_state43 = 57'd4398046511104;
parameter    ap_ST_fsm_state44 = 57'd8796093022208;
parameter    ap_ST_fsm_state45 = 57'd17592186044416;
parameter    ap_ST_fsm_state46 = 57'd35184372088832;
parameter    ap_ST_fsm_state47 = 57'd70368744177664;
parameter    ap_ST_fsm_state48 = 57'd140737488355328;
parameter    ap_ST_fsm_state49 = 57'd281474976710656;
parameter    ap_ST_fsm_state50 = 57'd562949953421312;
parameter    ap_ST_fsm_state51 = 57'd1125899906842624;
parameter    ap_ST_fsm_state52 = 57'd2251799813685248;
parameter    ap_ST_fsm_state53 = 57'd4503599627370496;
parameter    ap_ST_fsm_state54 = 57'd9007199254740992;
parameter    ap_ST_fsm_state55 = 57'd18014398509481984;
parameter    ap_ST_fsm_state56 = 57'd36028797018963968;
parameter    ap_ST_fsm_state57 = 57'd72057594037927936;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_PHYSMEMPTR_V_ID_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH = 32;
parameter    C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH = 32;
parameter    C_M_AXI_PHYSMEMPTR_V_AWUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_ARUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_WUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_RUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_BUSER_WIDTH = 1;
parameter    C_M_AXI_PHYSMEMPTR_V_TARGET_ADDR = 0;
parameter    C_M_AXI_PHYSMEMPTR_V_USER_VALUE = 0;
parameter    C_M_AXI_PHYSMEMPTR_V_PROT_VALUE = 0;
parameter    C_M_AXI_PHYSMEMPTR_V_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_PHYSMEMPTR_V_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [0:0] lrclk_V;
output   m_axi_physMemPtr_V_AWVALID;
input   m_axi_physMemPtr_V_AWREADY;
output  [C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH - 1:0] m_axi_physMemPtr_V_AWADDR;
output  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_AWID;
output  [7:0] m_axi_physMemPtr_V_AWLEN;
output  [2:0] m_axi_physMemPtr_V_AWSIZE;
output  [1:0] m_axi_physMemPtr_V_AWBURST;
output  [1:0] m_axi_physMemPtr_V_AWLOCK;
output  [3:0] m_axi_physMemPtr_V_AWCACHE;
output  [2:0] m_axi_physMemPtr_V_AWPROT;
output  [3:0] m_axi_physMemPtr_V_AWQOS;
output  [3:0] m_axi_physMemPtr_V_AWREGION;
output  [C_M_AXI_PHYSMEMPTR_V_AWUSER_WIDTH - 1:0] m_axi_physMemPtr_V_AWUSER;
output   m_axi_physMemPtr_V_WVALID;
input   m_axi_physMemPtr_V_WREADY;
output  [C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH - 1:0] m_axi_physMemPtr_V_WDATA;
output  [C_M_AXI_PHYSMEMPTR_V_WSTRB_WIDTH - 1:0] m_axi_physMemPtr_V_WSTRB;
output   m_axi_physMemPtr_V_WLAST;
output  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_WID;
output  [C_M_AXI_PHYSMEMPTR_V_WUSER_WIDTH - 1:0] m_axi_physMemPtr_V_WUSER;
output   m_axi_physMemPtr_V_ARVALID;
input   m_axi_physMemPtr_V_ARREADY;
output  [C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH - 1:0] m_axi_physMemPtr_V_ARADDR;
output  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_ARID;
output  [7:0] m_axi_physMemPtr_V_ARLEN;
output  [2:0] m_axi_physMemPtr_V_ARSIZE;
output  [1:0] m_axi_physMemPtr_V_ARBURST;
output  [1:0] m_axi_physMemPtr_V_ARLOCK;
output  [3:0] m_axi_physMemPtr_V_ARCACHE;
output  [2:0] m_axi_physMemPtr_V_ARPROT;
output  [3:0] m_axi_physMemPtr_V_ARQOS;
output  [3:0] m_axi_physMemPtr_V_ARREGION;
output  [C_M_AXI_PHYSMEMPTR_V_ARUSER_WIDTH - 1:0] m_axi_physMemPtr_V_ARUSER;
input   m_axi_physMemPtr_V_RVALID;
output   m_axi_physMemPtr_V_RREADY;
input  [C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH - 1:0] m_axi_physMemPtr_V_RDATA;
input   m_axi_physMemPtr_V_RLAST;
input  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_RID;
input  [C_M_AXI_PHYSMEMPTR_V_RUSER_WIDTH - 1:0] m_axi_physMemPtr_V_RUSER;
input  [1:0] m_axi_physMemPtr_V_RRESP;
input   m_axi_physMemPtr_V_BVALID;
output   m_axi_physMemPtr_V_BREADY;
input  [1:0] m_axi_physMemPtr_V_BRESP;
input  [C_M_AXI_PHYSMEMPTR_V_ID_WIDTH - 1:0] m_axi_physMemPtr_V_BID;
input  [C_M_AXI_PHYSMEMPTR_V_BUSER_WIDTH - 1:0] m_axi_physMemPtr_V_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [56:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [0:0] lrclk_V_0_data_reg;
reg    lrclk_V_0_vld_reg;
reg    lrclk_V_0_ack_out;
wire   [31:0] basePhysAddr_V;
wire   [5:0] configReg_address0;
reg    configReg_ce0;
wire   [7:0] configReg_q0;
reg   [0:0] readyRch;
reg   [0:0] readyLch;
reg    physMemPtr_V_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    physMemPtr_V_blk_n_R;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln761_fu_428_p2;
wire   [0:0] or_ln105_fu_468_p2;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg    physMemPtr_V_blk_n_AW;
wire    ap_CS_fsm_state50;
reg    physMemPtr_V_blk_n_W;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
reg    physMemPtr_V_blk_n_B;
wire    ap_CS_fsm_state57;
reg   [0:0] icmp_ln761_reg_3121;
reg   [0:0] or_ln105_reg_3130;
reg    physMemPtr_V_AWVALID;
wire    physMemPtr_V_AWREADY;
wire   [31:0] physMemPtr_V_AWADDR;
reg    physMemPtr_V_WVALID;
wire    physMemPtr_V_WREADY;
reg   [31:0] physMemPtr_V_WDATA;
reg    physMemPtr_V_ARVALID;
wire    physMemPtr_V_ARREADY;
reg   [31:0] physMemPtr_V_ARADDR;
reg   [31:0] physMemPtr_V_ARLEN;
wire    physMemPtr_V_RVALID;
reg    physMemPtr_V_RREADY;
wire   [31:0] physMemPtr_V_RDATA;
wire    physMemPtr_V_RLAST;
wire   [0:0] physMemPtr_V_RID;
wire   [0:0] physMemPtr_V_RUSER;
wire   [1:0] physMemPtr_V_RRESP;
wire    physMemPtr_V_BVALID;
reg    physMemPtr_V_BREADY;
wire   [1:0] physMemPtr_V_BRESP;
wire   [0:0] physMemPtr_V_BID;
wire   [0:0] physMemPtr_V_BUSER;
wire   [31:0] grp_fu_362_p2;
reg   [31:0] reg_393;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state46;
reg   [0:0] icmp_ln935_reg_3702;
wire    ap_CS_fsm_state47;
reg   [0:0] icmp_ln935_1_reg_3753;
wire   [29:0] r_V_3_fu_398_p4;
reg   [29:0] r_V_3_reg_3087;
wire   [30:0] zext_ln215_fu_408_p1;
reg   [30:0] zext_ln215_reg_3092;
wire   [30:0] ret_V_fu_412_p2;
reg   [30:0] ret_V_reg_3097;
reg   [31:0] status_V_reg_3116;
reg    ap_predicate_op100_readreq_state10;
reg    ap_block_state10_io;
wire   [0:0] xor_ln100_fu_446_p2;
reg   [31:0] lsrc_V_reg_3152;
reg   [31:0] rsrc_V_reg_3157;
wire   [31:0] grp_fu_373_p1;
reg   [31:0] tmp_reg_3162;
wire    ap_CS_fsm_state24;
wire   [31:0] grp_fu_376_p1;
reg   [31:0] tmp_1_reg_3167;
wire   [31:0] grp_fu_367_p2;
reg   [31:0] rsrcf_reg_3172;
wire   [62:0] trunc_ln556_fu_488_p1;
reg   [62:0] trunc_ln556_reg_3178;
wire    ap_CS_fsm_state30;
reg   [0:0] p_Result_19_reg_3183;
reg   [10:0] exp_tmp_V_reg_3192;
wire   [51:0] trunc_ln565_fu_510_p1;
reg   [51:0] trunc_ln565_reg_3197;
wire   [62:0] trunc_ln556_1_fu_518_p1;
reg   [62:0] trunc_ln556_1_reg_3202;
reg   [0:0] p_Result_23_reg_3207;
reg   [10:0] exp_tmp_V_1_reg_3216;
wire   [51:0] trunc_ln565_1_fu_540_p1;
reg   [51:0] trunc_ln565_1_reg_3221;
wire   [11:0] zext_ln461_fu_544_p1;
reg   [11:0] zext_ln461_reg_3226;
wire    ap_CS_fsm_state31;
wire   [53:0] p_Val2_20_fu_564_p3;
reg   [53:0] p_Val2_20_reg_3231;
wire   [0:0] icmp_ln571_fu_571_p2;
reg   [0:0] icmp_ln571_reg_3240;
wire   [11:0] F2_fu_576_p2;
reg   [11:0] F2_reg_3248;
wire   [0:0] QUAN_INC_fu_582_p2;
reg   [0:0] QUAN_INC_reg_3257;
wire  signed [11:0] sh_amt_fu_600_p3;
reg  signed [11:0] sh_amt_reg_3263;
wire   [31:0] trunc_ln583_fu_608_p1;
reg   [31:0] trunc_ln583_reg_3269;
wire   [0:0] icmp_ln603_fu_622_p2;
reg   [0:0] icmp_ln603_reg_3275;
wire   [0:0] icmp_ln591_fu_628_p2;
reg   [0:0] icmp_ln591_reg_3281;
wire   [11:0] zext_ln461_1_fu_634_p1;
reg   [11:0] zext_ln461_1_reg_3286;
wire   [53:0] p_Val2_21_fu_654_p3;
reg   [53:0] p_Val2_21_reg_3291;
wire   [0:0] icmp_ln571_1_fu_661_p2;
reg   [0:0] icmp_ln571_1_reg_3300;
wire   [11:0] F2_1_fu_666_p2;
reg   [11:0] F2_1_reg_3308;
wire   [0:0] QUAN_INC_1_fu_672_p2;
reg   [0:0] QUAN_INC_1_reg_3317;
wire  signed [11:0] sh_amt_1_fu_690_p3;
reg  signed [11:0] sh_amt_1_reg_3323;
wire   [31:0] trunc_ln583_1_fu_698_p1;
reg   [31:0] trunc_ln583_1_reg_3329;
wire   [0:0] icmp_ln603_1_fu_712_p2;
reg   [0:0] icmp_ln603_1_reg_3335;
wire   [0:0] icmp_ln591_1_fu_718_p2;
reg   [0:0] icmp_ln591_1_reg_3341;
wire  signed [31:0] sext_ln581_fu_729_p1;
reg  signed [31:0] sext_ln581_reg_3346;
wire    ap_CS_fsm_state32;
wire   [31:0] p_Val2_5_fu_770_p3;
reg   [31:0] p_Val2_5_reg_3351;
reg   [0:0] p_Result_21_reg_3356;
wire   [0:0] empty_16_fu_799_p2;
reg   [0:0] empty_16_reg_3362;
wire  signed [11:0] pos1_fu_805_p2;
reg  signed [11:0] pos1_reg_3368;
reg   [0:0] tmp_15_reg_3375;
reg   [0:0] tmp_16_reg_3381;
wire   [0:0] icmp_ln631_fu_835_p2;
reg   [0:0] icmp_ln631_reg_3386;
wire   [53:0] zext_ln635_fu_841_p1;
reg   [53:0] zext_ln635_reg_3393;
wire   [53:0] Range2_V_1_fu_845_p2;
reg   [53:0] Range2_V_1_reg_3398;
wire   [0:0] icmp_ln642_fu_850_p2;
reg   [0:0] icmp_ln642_reg_3404;
wire  signed [31:0] sext_ln581_1_fu_861_p1;
reg  signed [31:0] sext_ln581_1_reg_3409;
wire   [31:0] p_Val2_11_fu_901_p3;
reg   [31:0] p_Val2_11_reg_3414;
reg   [0:0] p_Result_25_reg_3419;
wire   [0:0] empty_19_fu_930_p2;
reg   [0:0] empty_19_reg_3425;
wire  signed [11:0] pos1_1_fu_936_p2;
reg  signed [11:0] pos1_1_reg_3431;
reg   [0:0] tmp_24_reg_3438;
reg   [0:0] tmp_25_reg_3444;
wire   [0:0] icmp_ln631_1_fu_966_p2;
reg   [0:0] icmp_ln631_1_reg_3449;
wire   [53:0] zext_ln635_1_fu_972_p1;
reg   [53:0] zext_ln635_1_reg_3456;
wire   [53:0] Range2_V_3_fu_976_p2;
reg   [53:0] Range2_V_3_reg_3461;
wire   [0:0] icmp_ln642_1_fu_981_p2;
reg   [0:0] icmp_ln642_1_reg_3467;
wire   [31:0] select_ln403_1_fu_1079_p3;
reg   [31:0] select_ln403_1_reg_3472;
wire    ap_CS_fsm_state33;
wire   [0:0] and_ln603_fu_1092_p2;
reg   [0:0] and_ln603_reg_3477;
wire   [0:0] and_ln603_2_fu_1114_p2;
reg   [0:0] and_ln603_2_reg_3482;
wire   [0:0] icmp_ln621_fu_1123_p2;
reg   [0:0] icmp_ln621_reg_3488;
wire   [0:0] xor_ln621_2_fu_1128_p2;
reg   [0:0] xor_ln621_2_reg_3495;
wire   [0:0] Range1_all_ones_1_fu_1152_p2;
reg   [0:0] Range1_all_ones_1_reg_3502;
wire   [0:0] select_ln631_fu_1178_p3;
reg   [0:0] select_ln631_reg_3509;
wire   [0:0] icmp_ln641_fu_1186_p2;
reg   [0:0] icmp_ln641_reg_3515;
wire   [0:0] Range1_all_zeros_1_fu_1191_p2;
reg   [0:0] Range1_all_zeros_1_reg_3520;
wire   [0:0] and_ln642_fu_1206_p2;
reg   [0:0] and_ln642_reg_3525;
wire   [0:0] or_ln652_4_fu_1223_p2;
reg   [0:0] or_ln652_4_reg_3531;
wire   [31:0] select_ln403_3_fu_1321_p3;
reg   [31:0] select_ln403_3_reg_3537;
wire   [0:0] and_ln603_3_fu_1334_p2;
reg   [0:0] and_ln603_3_reg_3542;
wire   [0:0] and_ln603_5_fu_1356_p2;
reg   [0:0] and_ln603_5_reg_3547;
wire   [0:0] icmp_ln621_1_fu_1365_p2;
reg   [0:0] icmp_ln621_1_reg_3553;
wire   [0:0] xor_ln621_3_fu_1370_p2;
reg   [0:0] xor_ln621_3_reg_3560;
wire   [0:0] Range1_all_ones_3_fu_1394_p2;
reg   [0:0] Range1_all_ones_3_reg_3567;
wire   [0:0] select_ln631_1_fu_1420_p3;
reg   [0:0] select_ln631_1_reg_3574;
wire   [0:0] icmp_ln641_1_fu_1428_p2;
reg   [0:0] icmp_ln641_1_reg_3580;
wire   [0:0] Range1_all_zeros_3_fu_1433_p2;
reg   [0:0] Range1_all_zeros_3_reg_3585;
wire   [0:0] and_ln642_1_fu_1448_p2;
reg   [0:0] and_ln642_1_reg_3590;
wire   [0:0] or_ln652_5_fu_1465_p2;
reg   [0:0] or_ln652_5_reg_3596;
wire   [31:0] p_Val2_7_fu_1475_p3;
reg   [31:0] p_Val2_7_reg_3602;
wire    ap_CS_fsm_state34;
wire   [0:0] select_ln557_fu_1619_p3;
reg   [0:0] select_ln557_reg_3609;
wire   [0:0] overflow_fu_1649_p2;
reg   [0:0] overflow_reg_3615;
wire   [0:0] and_ln659_fu_1655_p2;
reg   [0:0] and_ln659_reg_3621;
wire   [31:0] p_Val2_13_fu_1665_p3;
reg   [31:0] p_Val2_13_reg_3627;
wire   [0:0] select_ln557_1_fu_1809_p3;
reg   [0:0] select_ln557_1_reg_3634;
wire   [0:0] overflow_1_fu_1839_p2;
reg   [0:0] overflow_1_reg_3640;
wire   [0:0] and_ln659_2_fu_1845_p2;
reg   [0:0] and_ln659_2_reg_3646;
wire   [31:0] currentData_lch_V_fu_1934_p3;
reg   [31:0] currentData_lch_V_reg_3652;
wire    ap_CS_fsm_state35;
wire   [31:0] currentData_rch_V_fu_2026_p3;
reg   [31:0] currentData_rch_V_reg_3657;
wire   [2:0] stageIndex_V_fu_2041_p2;
reg   [2:0] stageIndex_V_reg_3665;
wire    ap_CS_fsm_state36;
wire   [0:0] icmp_ln887_fu_2035_p2;
reg   [0:0] p_Result_27_reg_3681;
wire   [31:0] tmp_V_fu_2071_p2;
reg   [31:0] tmp_V_reg_3687;
wire   [3:0] trunc_ln128_fu_2077_p1;
reg   [3:0] trunc_ln128_reg_3692;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state39;
wire   [0:0] icmp_ln935_fu_2084_p2;
wire   [31:0] tmp_V_4_fu_2089_p3;
reg   [31:0] tmp_V_4_reg_3707;
wire   [31:0] sub_ln944_fu_2112_p2;
reg   [31:0] sub_ln944_reg_3715;
wire   [5:0] trunc_ln947_fu_2118_p1;
reg   [5:0] trunc_ln947_reg_3722;
wire   [7:0] trunc_ln943_fu_2122_p1;
reg   [7:0] trunc_ln943_reg_3727;
reg   [0:0] p_Result_30_reg_3732;
wire   [31:0] tmp_V_2_fu_2134_p2;
reg   [31:0] tmp_V_2_reg_3738;
wire   [31:0] or_ln_fu_2226_p3;
reg   [31:0] or_ln_reg_3743;
wire    ap_CS_fsm_state40;
wire   [0:0] icmp_ln958_fu_2234_p2;
reg   [0:0] icmp_ln958_reg_3748;
wire   [0:0] icmp_ln935_1_fu_2240_p2;
wire   [31:0] tmp_V_5_fu_2245_p3;
reg   [31:0] tmp_V_5_reg_3758;
wire   [31:0] sub_ln944_1_fu_2268_p2;
reg   [31:0] sub_ln944_1_reg_3766;
wire   [5:0] trunc_ln947_1_fu_2274_p1;
reg   [5:0] trunc_ln947_1_reg_3773;
wire   [7:0] trunc_ln943_1_fu_2278_p1;
reg   [7:0] trunc_ln943_1_reg_3778;
reg   [30:0] m_reg_3783;
wire    ap_CS_fsm_state41;
reg   [0:0] tmp_30_reg_3788;
wire   [31:0] or_ln949_1_fu_2418_p3;
reg   [31:0] or_ln949_1_reg_3793;
wire   [0:0] icmp_ln958_1_fu_2426_p2;
reg   [0:0] icmp_ln958_1_reg_3798;
wire   [31:0] p_Result_29_fu_2460_p5;
reg   [31:0] p_Result_29_reg_3803;
wire    ap_CS_fsm_state42;
reg   [30:0] m_s_reg_3808;
reg   [0:0] tmp_34_reg_3813;
wire   [31:0] bitcast_ln739_fu_2522_p1;
wire    ap_CS_fsm_state43;
wire   [31:0] p_Result_32_fu_2554_p5;
reg   [31:0] p_Result_32_reg_3823;
wire   [31:0] bitcast_ln739_1_fu_2566_p1;
wire    ap_CS_fsm_state44;
wire   [31:0] reg_V_fu_2574_p3;
reg   [31:0] reg_V_reg_3833;
reg   [0:0] p_Result_33_reg_3838;
wire   [22:0] trunc_ln270_fu_2607_p1;
reg   [22:0] trunc_ln270_reg_3843;
wire   [0:0] icmp_ln278_fu_2611_p2;
reg   [0:0] icmp_ln278_reg_3848;
wire  signed [8:0] sh_amt_2_fu_2617_p2;
reg  signed [8:0] sh_amt_2_reg_3855;
wire   [0:0] icmp_ln282_fu_2623_p2;
reg   [0:0] icmp_ln282_reg_3863;
wire   [23:0] tmp_8_fu_2629_p3;
reg   [23:0] tmp_8_reg_3869;
wire    ap_CS_fsm_state48;
wire   [0:0] icmp_ln285_fu_2644_p2;
reg   [0:0] icmp_ln285_reg_3874;
wire  signed [8:0] sh_amt_3_fu_2649_p2;
reg  signed [8:0] sh_amt_3_reg_3879;
wire   [0:0] and_ln284_fu_2704_p2;
reg   [0:0] and_ln284_reg_3884;
wire   [23:0] select_ln285_fu_2716_p3;
reg   [23:0] select_ln285_reg_3889;
wire   [0:0] and_ln295_fu_2736_p2;
reg   [0:0] and_ln295_reg_3894;
wire   [31:0] reg_V_1_fu_2746_p3;
reg   [31:0] reg_V_1_reg_3899;
reg   [0:0] p_Result_34_reg_3904;
wire   [22:0] trunc_ln270_1_fu_2779_p1;
reg   [22:0] trunc_ln270_1_reg_3909;
wire   [0:0] icmp_ln278_1_fu_2783_p2;
reg   [0:0] icmp_ln278_1_reg_3914;
wire  signed [8:0] sh_amt_4_fu_2789_p2;
reg  signed [8:0] sh_amt_4_reg_3921;
wire   [0:0] icmp_ln282_1_fu_2795_p2;
reg   [0:0] icmp_ln282_1_reg_3929;
wire   [31:0] select_ln285_1_fu_2855_p3;
reg   [31:0] select_ln285_1_reg_3935;
wire    ap_CS_fsm_state49;
wire   [23:0] tmp_9_fu_2863_p3;
reg   [23:0] tmp_9_reg_3941;
wire   [0:0] icmp_ln285_1_fu_2878_p2;
reg   [0:0] icmp_ln285_1_reg_3946;
wire  signed [8:0] sh_amt_5_fu_2883_p2;
reg  signed [8:0] sh_amt_5_reg_3951;
wire   [0:0] and_ln284_1_fu_2938_p2;
reg   [0:0] and_ln284_1_reg_3956;
wire   [23:0] select_ln285_2_fu_2950_p3;
reg   [23:0] select_ln285_2_reg_3961;
wire   [0:0] and_ln295_1_fu_2970_p2;
reg   [0:0] and_ln295_1_reg_3966;
wire   [30:0] ret_V_1_fu_2976_p2;
reg   [30:0] ret_V_1_reg_3971;
wire   [31:0] select_ln303_fu_2986_p3;
reg   [31:0] select_ln303_reg_3976;
wire   [31:0] select_ln285_3_fu_3046_p3;
reg   [31:0] select_ln285_3_reg_3981;
wire   [31:0] select_ln303_1_fu_3069_p3;
reg   [31:0] select_ln303_1_reg_3994;
reg   [2:0] t_V_reg_307;
wire    ap_CS_fsm_state38;
reg   [0:0] ap_phi_mux_readyRch_flag_1_phi_fu_322_p6;
reg   [0:0] readyRch_flag_1_reg_318;
reg    ap_predicate_op612_writeresp_state57;
reg    ap_block_state57;
reg   [0:0] ap_phi_mux_readyRch_new_1_phi_fu_337_p6;
reg   [0:0] readyRch_new_1_reg_332;
reg   [0:0] ap_phi_mux_readyLch_flag_1_phi_fu_352_p6;
reg   [0:0] readyLch_flag_1_reg_348;
wire   [63:0] zext_ln125_fu_2055_p1;
wire   [63:0] zext_ln544_fu_418_p1;
wire   [63:0] zext_ln544_1_fu_474_p1;
wire   [63:0] zext_ln544_2_fu_3054_p1;
reg   [31:0] p_Val2_s_fu_226;
reg   [31:0] p_Val2_1_fu_230;
reg   [31:0] grp_fu_362_p0;
reg   [31:0] grp_fu_362_p1;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state29;
wire   [0:0] xor_ln105_fu_451_p2;
wire   [0:0] or_ln100_fu_441_p2;
wire   [0:0] and_ln105_fu_457_p2;
wire   [0:0] xor_ln105_1_fu_462_p2;
wire   [63:0] grp_fu_379_p1;
wire   [63:0] ireg_V_fu_484_p1;
wire   [63:0] grp_fu_382_p1;
wire   [63:0] ireg_V_1_fu_514_p1;
wire   [52:0] tmp_2_fu_547_p3;
wire   [53:0] p_Result_20_fu_554_p1;
wire   [53:0] man_V_1_fu_558_p2;
wire   [11:0] add_ln581_fu_588_p2;
wire   [11:0] sub_ln581_fu_594_p2;
wire   [6:0] tmp_10_fu_612_p4;
wire   [52:0] tmp_3_fu_637_p3;
wire   [53:0] p_Result_24_fu_644_p1;
wire   [53:0] man_V_4_fu_648_p2;
wire   [11:0] add_ln581_1_fu_678_p2;
wire   [11:0] sub_ln581_1_fu_684_p2;
wire   [6:0] tmp_19_fu_702_p4;
wire   [53:0] zext_ln586_fu_737_p1;
wire   [53:0] ashr_ln586_fu_741_p2;
wire   [31:0] bitcast_ln696_fu_750_p1;
wire   [0:0] tmp_11_fu_754_p3;
wire   [0:0] icmp_ln585_fu_732_p2;
wire   [31:0] trunc_ln586_fu_746_p1;
wire   [31:0] select_ln588_fu_762_p3;
wire   [11:0] tmp185_cast_cast_fu_786_p3;
wire   [11:0] exp_V_fu_724_p2;
wire   [11:0] empty_15_fu_793_p2;
wire  signed [11:0] pos2_fu_810_p2;
wire  signed [31:0] sext_ln619_fu_815_p1;
wire   [53:0] zext_ln586_1_fu_869_p1;
wire   [53:0] ashr_ln586_1_fu_873_p2;
wire   [31:0] bitcast_ln696_2_fu_882_p1;
wire   [0:0] tmp_20_fu_885_p3;
wire   [0:0] icmp_ln585_1_fu_864_p2;
wire   [31:0] trunc_ln586_1_fu_878_p1;
wire   [31:0] select_ln588_1_fu_893_p3;
wire   [11:0] tmp190_cast_cast_fu_917_p3;
wire   [11:0] exp_V_1_fu_856_p2;
wire   [11:0] empty_18_fu_924_p2;
wire  signed [11:0] pos2_1_fu_941_p2;
wire  signed [31:0] sext_ln619_1_fu_946_p1;
wire   [11:0] add_ln591_fu_992_p2;
wire  signed [31:0] sext_ln591_fu_997_p1;
wire   [0:0] p_Result_s_fu_1001_p3;
wire   [0:0] qb_fu_1008_p3;
wire   [31:0] zext_ln415_fu_1014_p1;
wire   [31:0] p_Val2_6_fu_1018_p2;
wire   [0:0] tmp_13_fu_1023_p3;
wire   [0:0] icmp_ln582_fu_987_p2;
wire   [0:0] xor_ln582_fu_1044_p2;
wire   [0:0] and_ln578_fu_1050_p2;
wire   [0:0] and_ln403_fu_1055_p2;
wire   [31:0] select_ln582_fu_1037_p3;
wire   [0:0] xor_ln403_fu_1068_p2;
wire   [0:0] and_ln403_1_fu_1073_p2;
wire   [31:0] select_ln403_fu_1060_p3;
wire   [0:0] icmp_ln578_fu_1087_p2;
wire   [0:0] xor_ln416_fu_1031_p2;
wire   [0:0] and_ln603_1_fu_1103_p2;
wire   [0:0] and_ln403_2_fu_1097_p2;
wire   [0:0] xor_ln603_fu_1108_p2;
wire  signed [31:0] sext_ln618_fu_1120_p1;
wire   [53:0] zext_ln623_fu_1133_p1;
wire   [53:0] ashr_ln623_fu_1137_p2;
wire   [0:0] lD_fu_1142_p1;
wire   [0:0] and_ln621_fu_1146_p2;
wire   [0:0] xor_ln631_fu_1158_p2;
wire   [53:0] r_V_fu_1168_p2;
wire   [0:0] and_ln631_fu_1163_p2;
wire   [0:0] Range2_all_ones_fu_1173_p2;
wire   [0:0] xor_ln639_2_fu_1196_p2;
wire   [0:0] or_ln639_fu_1201_p2;
wire   [0:0] xor_ln652_4_fu_1211_p2;
wire   [0:0] or_ln652_6_fu_1217_p2;
wire   [11:0] add_ln591_1_fu_1234_p2;
wire  signed [31:0] sext_ln591_1_fu_1239_p1;
wire   [0:0] p_Result_5_fu_1243_p3;
wire   [0:0] qb_1_fu_1250_p3;
wire   [31:0] zext_ln415_1_fu_1256_p1;
wire   [31:0] p_Val2_12_fu_1260_p2;
wire   [0:0] tmp_22_fu_1265_p3;
wire   [0:0] icmp_ln582_1_fu_1229_p2;
wire   [0:0] xor_ln582_1_fu_1286_p2;
wire   [0:0] and_ln578_1_fu_1292_p2;
wire   [0:0] and_ln403_3_fu_1297_p2;
wire   [31:0] select_ln582_1_fu_1279_p3;
wire   [0:0] xor_ln403_1_fu_1310_p2;
wire   [0:0] and_ln403_4_fu_1315_p2;
wire   [31:0] select_ln403_2_fu_1302_p3;
wire   [0:0] icmp_ln578_2_fu_1329_p2;
wire   [0:0] xor_ln416_1_fu_1273_p2;
wire   [0:0] and_ln603_4_fu_1345_p2;
wire   [0:0] and_ln403_5_fu_1339_p2;
wire   [0:0] xor_ln603_1_fu_1350_p2;
wire  signed [31:0] sext_ln618_1_fu_1362_p1;
wire   [53:0] zext_ln623_1_fu_1375_p1;
wire   [53:0] ashr_ln623_1_fu_1379_p2;
wire   [0:0] lD_1_fu_1384_p1;
wire   [0:0] and_ln621_4_fu_1388_p2;
wire   [0:0] xor_ln631_1_fu_1400_p2;
wire   [53:0] r_V_1_fu_1410_p2;
wire   [0:0] and_ln631_1_fu_1405_p2;
wire   [0:0] Range2_all_ones_1_fu_1415_p2;
wire   [0:0] xor_ln639_fu_1438_p2;
wire   [0:0] or_ln639_1_fu_1443_p2;
wire   [0:0] xor_ln652_5_fu_1453_p2;
wire   [0:0] or_ln652_7_fu_1459_p2;
wire   [31:0] shl_ln604_fu_1471_p2;
wire   [0:0] Range1_all_zeros_fu_1497_p2;
wire   [0:0] and_ln639_fu_1489_p2;
wire   [0:0] Range1_all_ones_fu_1493_p2;
wire   [0:0] select_ln642_fu_1511_p3;
wire   [0:0] or_ln645_fu_1507_p2;
wire   [0:0] and_ln641_fu_1502_p2;
wire   [0:0] select_ln642_1_fu_1524_p3;
wire   [0:0] select_ln639_fu_1516_p3;
wire   [0:0] select_ln639_1_fu_1531_p3;
wire   [0:0] xor_ln652_1_fu_1546_p2;
wire   [0:0] tmp_17_fu_1561_p3;
wire   [0:0] or_ln652_fu_1551_p2;
wire   [0:0] and_ln652_fu_1556_p2;
wire   [0:0] or_ln652_1_fu_1568_p2;
wire   [0:0] and_ln654_fu_1582_p2;
wire   [0:0] deleted_ones_fu_1574_p3;
wire   [0:0] xor_ln621_fu_1593_p2;
wire   [0:0] p_Result_22_fu_1481_p3;
wire   [0:0] and_ln621_2_fu_1604_p2;
wire   [0:0] and_ln557_fu_1615_p2;
wire   [0:0] empty_17_fu_1587_p2;
wire   [0:0] and_ln621_3_fu_1610_p2;
wire   [0:0] deleted_zeros_fu_1539_p3;
wire   [0:0] xor_ln658_2_fu_1627_p2;
wire   [0:0] and_ln658_fu_1633_p2;
wire   [0:0] or_ln658_fu_1638_p2;
wire   [0:0] xor_ln658_1_fu_1644_p2;
wire   [0:0] or_ln557_fu_1598_p2;
wire   [31:0] shl_ln604_1_fu_1661_p2;
wire   [0:0] Range1_all_zeros_2_fu_1687_p2;
wire   [0:0] and_ln639_1_fu_1679_p2;
wire   [0:0] Range1_all_ones_2_fu_1683_p2;
wire   [0:0] select_ln642_2_fu_1701_p3;
wire   [0:0] or_ln645_1_fu_1697_p2;
wire   [0:0] and_ln641_1_fu_1692_p2;
wire   [0:0] select_ln642_3_fu_1714_p3;
wire   [0:0] select_ln639_2_fu_1706_p3;
wire   [0:0] select_ln639_3_fu_1721_p3;
wire   [0:0] xor_ln652_3_fu_1736_p2;
wire   [0:0] tmp_26_fu_1751_p3;
wire   [0:0] or_ln652_2_fu_1741_p2;
wire   [0:0] and_ln652_1_fu_1746_p2;
wire   [0:0] or_ln652_3_fu_1758_p2;
wire   [0:0] and_ln654_1_fu_1772_p2;
wire   [0:0] deleted_ones_1_fu_1764_p3;
wire   [0:0] xor_ln621_1_fu_1783_p2;
wire   [0:0] p_Result_26_fu_1671_p3;
wire   [0:0] and_ln621_6_fu_1794_p2;
wire   [0:0] and_ln557_1_fu_1805_p2;
wire   [0:0] empty_20_fu_1777_p2;
wire   [0:0] and_ln621_7_fu_1800_p2;
wire   [0:0] deleted_zeros_1_fu_1729_p3;
wire   [0:0] xor_ln658_fu_1817_p2;
wire   [0:0] and_ln658_2_fu_1823_p2;
wire   [0:0] or_ln658_1_fu_1828_p2;
wire   [0:0] xor_ln658_3_fu_1834_p2;
wire   [0:0] or_ln557_1_fu_1788_p2;
wire   [0:0] xor_ln659_fu_1851_p2;
wire   [0:0] underflow_fu_1856_p2;
wire   [0:0] xor_ln340_fu_1866_p2;
wire   [0:0] or_ln340_2_fu_1871_p2;
wire   [0:0] or_ln340_fu_1861_p2;
wire   [0:0] or_ln571_fu_1895_p2;
wire   [31:0] select_ln571_fu_1888_p3;
wire   [0:0] sel_tmp57_demorgan_fu_1907_p2;
wire   [31:0] select_ln571_1_fu_1900_p3;
wire   [0:0] or_ln340_3_fu_1876_p2;
wire   [0:0] xor_ln571_fu_1918_p2;
wire   [0:0] and_ln340_fu_1923_p2;
wire   [0:0] and_ln340_1_fu_1929_p2;
wire   [31:0] select_ln340_fu_1881_p3;
wire   [31:0] sel_tmp58_fu_1911_p3;
wire   [0:0] xor_ln659_1_fu_1943_p2;
wire   [0:0] underflow_1_fu_1948_p2;
wire   [0:0] xor_ln340_1_fu_1958_p2;
wire   [0:0] or_ln340_4_fu_1963_p2;
wire   [0:0] or_ln340_1_fu_1953_p2;
wire   [0:0] or_ln571_1_fu_1987_p2;
wire   [31:0] select_ln571_2_fu_1980_p3;
wire   [0:0] sel_tmp122_demorgan_fu_1999_p2;
wire   [31:0] select_ln571_3_fu_1992_p3;
wire   [0:0] or_ln340_5_fu_1968_p2;
wire   [0:0] xor_ln571_1_fu_2010_p2;
wire   [0:0] and_ln340_2_fu_2015_p2;
wire   [0:0] and_ln340_3_fu_2021_p2;
wire   [31:0] select_ln340_1_fu_1973_p3;
wire   [31:0] sel_tmp123_fu_2003_p3;
wire   [4:0] tmp_6_fu_2047_p3;
reg   [31:0] p_Result_28_fu_2094_p4;
reg   [31:0] l_fu_2104_p3;
wire   [31:0] lsb_index_fu_2140_p2;
wire   [30:0] tmp_28_fu_2145_p4;
wire   [5:0] sub_ln947_fu_2161_p2;
wire   [31:0] zext_ln947_fu_2166_p1;
wire   [31:0] lshr_ln947_fu_2170_p2;
wire   [31:0] p_Result_14_fu_2176_p2;
wire   [0:0] icmp_ln947_fu_2155_p2;
wire   [0:0] icmp_ln947_1_fu_2181_p2;
wire   [0:0] tmp_29_fu_2193_p3;
wire   [0:0] p_Result_9_fu_2207_p3;
wire   [0:0] xor_ln949_fu_2201_p2;
wire   [0:0] and_ln949_fu_2214_p2;
wire   [0:0] a_fu_2187_p2;
wire   [0:0] or_ln949_2_fu_2220_p2;
reg   [31:0] p_Result_31_fu_2250_p4;
reg   [31:0] l_1_fu_2260_p3;
wire   [31:0] add_ln958_fu_2282_p2;
wire   [31:0] sub_ln958_fu_2292_p2;
wire   [31:0] lshr_ln958_fu_2287_p2;
wire   [31:0] shl_ln958_fu_2297_p2;
wire   [31:0] m_2_fu_2302_p3;
wire   [31:0] m_3_fu_2309_p2;
wire   [31:0] lsb_index_1_fu_2332_p2;
wire   [30:0] tmp_32_fu_2337_p4;
wire   [5:0] sub_ln947_1_fu_2353_p2;
wire   [31:0] zext_ln947_1_fu_2358_p1;
wire   [31:0] lshr_ln947_1_fu_2362_p2;
wire   [31:0] p_Result_16_fu_2368_p2;
wire   [0:0] icmp_ln947_2_fu_2347_p2;
wire   [0:0] icmp_ln947_3_fu_2373_p2;
wire   [0:0] tmp_33_fu_2385_p3;
wire   [0:0] p_Result_6_fu_2399_p3;
wire   [0:0] xor_ln949_1_fu_2393_p2;
wire   [0:0] and_ln949_1_fu_2406_p2;
wire   [0:0] a_1_fu_2379_p2;
wire   [0:0] or_ln949_fu_2412_p2;
wire   [7:0] sub_ln964_fu_2442_p2;
wire   [7:0] select_ln964_fu_2435_p3;
wire   [7:0] add_ln964_fu_2447_p2;
wire   [31:0] m_11_fu_2432_p1;
wire   [8:0] tmp_5_fu_2453_p3;
wire   [31:0] add_ln958_1_fu_2472_p2;
wire   [31:0] sub_ln958_1_fu_2482_p2;
wire   [31:0] lshr_ln958_1_fu_2477_p2;
wire   [31:0] shl_ln958_1_fu_2487_p2;
wire   [31:0] m_7_fu_2492_p3;
wire   [31:0] m_8_fu_2499_p2;
wire   [7:0] sub_ln964_1_fu_2536_p2;
wire   [7:0] select_ln964_1_fu_2529_p3;
wire   [7:0] add_ln964_1_fu_2541_p2;
wire   [31:0] m_12_fu_2526_p1;
wire   [8:0] tmp_7_fu_2547_p3;
wire   [31:0] bitcast_ln705_fu_2570_p1;
wire   [7:0] p_Result_s_22_fu_2593_p4;
wire   [30:0] trunc_ln262_fu_2581_p1;
wire   [8:0] exp_V_2_fu_2603_p1;
wire   [3:0] tmp_36_fu_2654_p4;
wire  signed [23:0] sext_ln281_fu_2636_p1;
wire   [0:0] xor_ln278_fu_2676_p2;
wire   [0:0] and_ln282_fu_2681_p2;
wire   [0:0] or_ln282_fu_2694_p2;
wire   [0:0] icmp_ln284_fu_2639_p2;
wire   [0:0] xor_ln282_fu_2698_p2;
wire   [0:0] and_ln285_fu_2710_p2;
wire   [23:0] lshr_ln286_fu_2670_p2;
wire   [23:0] select_ln282_fu_2686_p3;
wire   [0:0] or_ln284_fu_2724_p2;
wire   [0:0] icmp_ln295_fu_2664_p2;
wire   [0:0] xor_ln284_fu_2730_p2;
wire   [31:0] bitcast_ln705_1_fu_2742_p1;
wire   [7:0] p_Result_3_fu_2765_p4;
wire   [30:0] trunc_ln262_1_fu_2753_p1;
wire   [8:0] exp_V_3_fu_2775_p1;
wire   [0:0] tmp_37_fu_2807_p3;
wire   [31:0] zext_ln283_fu_2801_p1;
wire  signed [31:0] sext_ln294_fu_2804_p1;
wire   [31:0] shl_ln297_fu_2822_p2;
wire   [31:0] zext_ln285_fu_2828_p1;
wire   [31:0] select_ln295_fu_2831_p3;
wire   [0:0] xor_ln285_fu_2845_p2;
wire   [0:0] and_ln285_1_fu_2850_p2;
wire   [31:0] select_ln288_fu_2814_p3;
wire   [31:0] select_ln278_fu_2838_p3;
wire   [3:0] tmp_39_fu_2888_p4;
wire  signed [23:0] sext_ln281_1_fu_2870_p1;
wire   [0:0] xor_ln278_1_fu_2910_p2;
wire   [0:0] and_ln282_1_fu_2915_p2;
wire   [0:0] or_ln282_1_fu_2928_p2;
wire   [0:0] icmp_ln284_1_fu_2873_p2;
wire   [0:0] xor_ln282_1_fu_2932_p2;
wire   [0:0] and_ln285_2_fu_2944_p2;
wire   [23:0] lshr_ln286_1_fu_2904_p2;
wire   [23:0] select_ln282_1_fu_2920_p3;
wire   [0:0] or_ln284_1_fu_2958_p2;
wire   [0:0] icmp_ln295_1_fu_2898_p2;
wire   [0:0] xor_ln284_1_fu_2964_p2;
wire   [31:0] sub_ln461_fu_2981_p2;
wire   [0:0] tmp_40_fu_2998_p3;
wire   [31:0] zext_ln283_1_fu_2992_p1;
wire  signed [31:0] sext_ln294_1_fu_2995_p1;
wire   [31:0] shl_ln297_1_fu_3013_p2;
wire   [31:0] zext_ln285_1_fu_3019_p1;
wire   [31:0] select_ln295_1_fu_3022_p3;
wire   [0:0] xor_ln285_1_fu_3036_p2;
wire   [0:0] and_ln285_3_fu_3041_p2;
wire   [31:0] select_ln288_1_fu_3005_p3;
wire   [31:0] select_ln278_1_fu_3029_p3;
wire   [31:0] sub_ln461_1_fu_3064_p2;
reg   [56:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 57'd1;
#0 lrclk_V_0_data_reg = 1'd0;
#0 lrclk_V_0_vld_reg = 1'b0;
#0 readyRch = 1'd0;
#0 readyLch = 1'd0;
end

pynq_dsp_hls_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
pynq_dsp_hls_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .basePhysAddr_V(basePhysAddr_V),
    .configReg_address0(configReg_address0),
    .configReg_ce0(configReg_ce0),
    .configReg_q0(configReg_q0)
);

pynq_dsp_hls_physMemPtr_V_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_PHYSMEMPTR_V_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_PHYSMEMPTR_V_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_PHYSMEMPTR_V_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_PHYSMEMPTR_V_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_PHYSMEMPTR_V_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_PHYSMEMPTR_V_CACHE_VALUE ))
pynq_dsp_hls_physMemPtr_V_m_axi_U(
    .AWVALID(m_axi_physMemPtr_V_AWVALID),
    .AWREADY(m_axi_physMemPtr_V_AWREADY),
    .AWADDR(m_axi_physMemPtr_V_AWADDR),
    .AWID(m_axi_physMemPtr_V_AWID),
    .AWLEN(m_axi_physMemPtr_V_AWLEN),
    .AWSIZE(m_axi_physMemPtr_V_AWSIZE),
    .AWBURST(m_axi_physMemPtr_V_AWBURST),
    .AWLOCK(m_axi_physMemPtr_V_AWLOCK),
    .AWCACHE(m_axi_physMemPtr_V_AWCACHE),
    .AWPROT(m_axi_physMemPtr_V_AWPROT),
    .AWQOS(m_axi_physMemPtr_V_AWQOS),
    .AWREGION(m_axi_physMemPtr_V_AWREGION),
    .AWUSER(m_axi_physMemPtr_V_AWUSER),
    .WVALID(m_axi_physMemPtr_V_WVALID),
    .WREADY(m_axi_physMemPtr_V_WREADY),
    .WDATA(m_axi_physMemPtr_V_WDATA),
    .WSTRB(m_axi_physMemPtr_V_WSTRB),
    .WLAST(m_axi_physMemPtr_V_WLAST),
    .WID(m_axi_physMemPtr_V_WID),
    .WUSER(m_axi_physMemPtr_V_WUSER),
    .ARVALID(m_axi_physMemPtr_V_ARVALID),
    .ARREADY(m_axi_physMemPtr_V_ARREADY),
    .ARADDR(m_axi_physMemPtr_V_ARADDR),
    .ARID(m_axi_physMemPtr_V_ARID),
    .ARLEN(m_axi_physMemPtr_V_ARLEN),
    .ARSIZE(m_axi_physMemPtr_V_ARSIZE),
    .ARBURST(m_axi_physMemPtr_V_ARBURST),
    .ARLOCK(m_axi_physMemPtr_V_ARLOCK),
    .ARCACHE(m_axi_physMemPtr_V_ARCACHE),
    .ARPROT(m_axi_physMemPtr_V_ARPROT),
    .ARQOS(m_axi_physMemPtr_V_ARQOS),
    .ARREGION(m_axi_physMemPtr_V_ARREGION),
    .ARUSER(m_axi_physMemPtr_V_ARUSER),
    .RVALID(m_axi_physMemPtr_V_RVALID),
    .RREADY(m_axi_physMemPtr_V_RREADY),
    .RDATA(m_axi_physMemPtr_V_RDATA),
    .RLAST(m_axi_physMemPtr_V_RLAST),
    .RID(m_axi_physMemPtr_V_RID),
    .RUSER(m_axi_physMemPtr_V_RUSER),
    .RRESP(m_axi_physMemPtr_V_RRESP),
    .BVALID(m_axi_physMemPtr_V_BVALID),
    .BREADY(m_axi_physMemPtr_V_BREADY),
    .BRESP(m_axi_physMemPtr_V_BRESP),
    .BID(m_axi_physMemPtr_V_BID),
    .BUSER(m_axi_physMemPtr_V_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(physMemPtr_V_ARVALID),
    .I_ARREADY(physMemPtr_V_ARREADY),
    .I_ARADDR(physMemPtr_V_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(physMemPtr_V_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(physMemPtr_V_RVALID),
    .I_RREADY(physMemPtr_V_RREADY),
    .I_RDATA(physMemPtr_V_RDATA),
    .I_RID(physMemPtr_V_RID),
    .I_RUSER(physMemPtr_V_RUSER),
    .I_RRESP(physMemPtr_V_RRESP),
    .I_RLAST(physMemPtr_V_RLAST),
    .I_AWVALID(physMemPtr_V_AWVALID),
    .I_AWREADY(physMemPtr_V_AWREADY),
    .I_AWADDR(physMemPtr_V_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd2),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(physMemPtr_V_WVALID),
    .I_WREADY(physMemPtr_V_WREADY),
    .I_WDATA(physMemPtr_V_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(physMemPtr_V_BVALID),
    .I_BREADY(physMemPtr_V_BREADY),
    .I_BRESP(physMemPtr_V_BRESP),
    .I_BID(physMemPtr_V_BID),
    .I_BUSER(physMemPtr_V_BUSER)
);

pynq_dsp_hls_fmulbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_362_p0),
    .din1(grp_fu_362_p1),
    .ce(1'b1),
    .dout(grp_fu_362_p2)
);

pynq_dsp_hls_fmulbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_fmulbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_1_reg_3167),
    .din1(32'd872415232),
    .ce(1'b1),
    .dout(grp_fu_367_p2)
);

pynq_dsp_hls_uitocud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_uitocud_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(lsrc_V_reg_3152),
    .ce(1'b1),
    .dout(grp_fu_373_p1)
);

pynq_dsp_hls_uitocud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
pynq_dsp_hls_uitocud_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(rsrc_V_reg_3157),
    .ce(1'b1),
    .dout(grp_fu_376_p1)
);

pynq_dsp_hls_fpexdEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
pynq_dsp_hls_fpexdEe_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_393),
    .ce(1'b1),
    .dout(grp_fu_379_p1)
);

pynq_dsp_hls_fpexdEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
pynq_dsp_hls_fpexdEe_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(rsrcf_reg_3172),
    .ce(1'b1),
    .dout(grp_fu_382_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state38) & ((trunc_ln128_reg_3692 == 4'd2) | ((trunc_ln128_reg_3692 == 4'd3) | ((trunc_ln128_reg_3692 == 4'd4) | ((trunc_ln128_reg_3692 == 4'd5) | ((trunc_ln128_reg_3692 == 4'd6) | ((trunc_ln128_reg_3692 == 4'd7) | ((trunc_ln128_reg_3692 == 4'd8) | (trunc_ln128_reg_3692 == 4'd9))))))))) | ((trunc_ln128_fu_2077_p1 == 4'd0) & (1'b1 == ap_CS_fsm_state37)))) begin
        p_Val2_1_fu_230 <= currentData_rch_V_reg_3657;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        p_Val2_1_fu_230 <= currentData_rch_V_fu_2026_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state38) & ((trunc_ln128_reg_3692 == 4'd2) | ((trunc_ln128_reg_3692 == 4'd3) | ((trunc_ln128_reg_3692 == 4'd4) | ((trunc_ln128_reg_3692 == 4'd5) | ((trunc_ln128_reg_3692 == 4'd6) | ((trunc_ln128_reg_3692 == 4'd7) | ((trunc_ln128_reg_3692 == 4'd8) | (trunc_ln128_reg_3692 == 4'd9))))))))) | ((trunc_ln128_fu_2077_p1 == 4'd0) & (1'b1 == ap_CS_fsm_state37)))) begin
        p_Val2_s_fu_226 <= currentData_lch_V_reg_3652;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        p_Val2_s_fu_226 <= currentData_lch_V_fu_1934_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (or_ln105_fu_468_p2 == 1'd1) & (icmp_ln761_fu_428_p2 == 1'd0))) begin
        readyLch_flag_1_reg_348 <= xor_ln100_fu_446_p2;
    end else if ((~((ap_predicate_op612_writeresp_state57 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state57) & (or_ln105_reg_3130 == 1'd0) & (icmp_ln761_reg_3121 == 1'd0))) begin
        readyLch_flag_1_reg_348 <= 1'd1;
    end else if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln761_fu_428_p2 == 1'd1))) begin
        readyLch_flag_1_reg_348 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (or_ln105_fu_468_p2 == 1'd1) & (icmp_ln761_fu_428_p2 == 1'd0))) begin
        readyRch_flag_1_reg_318 <= lrclk_V_0_data_reg;
    end else if ((~((ap_predicate_op612_writeresp_state57 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state57) & (or_ln105_reg_3130 == 1'd0) & (icmp_ln761_reg_3121 == 1'd0))) begin
        readyRch_flag_1_reg_318 <= 1'd1;
    end else if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln761_fu_428_p2 == 1'd1))) begin
        readyRch_flag_1_reg_318 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (or_ln105_fu_468_p2 == 1'd1) & (icmp_ln761_fu_428_p2 == 1'd0))) begin
        readyRch_new_1_reg_332 <= 1'd1;
    end else if ((~((ap_predicate_op612_writeresp_state57 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state57) & (or_ln105_reg_3130 == 1'd0) & (icmp_ln761_reg_3121 == 1'd0))) begin
        readyRch_new_1_reg_332 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        t_V_reg_307 <= stageIndex_V_reg_3665;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        t_V_reg_307 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        F2_1_reg_3308 <= F2_1_fu_666_p2;
        F2_reg_3248 <= F2_fu_576_p2;
        QUAN_INC_1_reg_3317 <= QUAN_INC_1_fu_672_p2;
        QUAN_INC_reg_3257 <= QUAN_INC_fu_582_p2;
        icmp_ln571_1_reg_3300 <= icmp_ln571_1_fu_661_p2;
        icmp_ln571_reg_3240 <= icmp_ln571_fu_571_p2;
        icmp_ln591_1_reg_3341 <= icmp_ln591_1_fu_718_p2;
        icmp_ln591_reg_3281 <= icmp_ln591_fu_628_p2;
        icmp_ln603_1_reg_3335 <= icmp_ln603_1_fu_712_p2;
        icmp_ln603_reg_3275 <= icmp_ln603_fu_622_p2;
        p_Val2_20_reg_3231 <= p_Val2_20_fu_564_p3;
        p_Val2_21_reg_3291 <= p_Val2_21_fu_654_p3;
        sh_amt_1_reg_3323 <= sh_amt_1_fu_690_p3;
        sh_amt_reg_3263 <= sh_amt_fu_600_p3;
        trunc_ln583_1_reg_3329 <= trunc_ln583_1_fu_698_p1;
        trunc_ln583_reg_3269 <= trunc_ln583_fu_608_p1;
        zext_ln461_1_reg_3286[10 : 0] <= zext_ln461_1_fu_634_p1[10 : 0];
        zext_ln461_reg_3226[10 : 0] <= zext_ln461_fu_544_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        Range1_all_ones_1_reg_3502 <= Range1_all_ones_1_fu_1152_p2;
        Range1_all_ones_3_reg_3567 <= Range1_all_ones_3_fu_1394_p2;
        Range1_all_zeros_1_reg_3520 <= Range1_all_zeros_1_fu_1191_p2;
        Range1_all_zeros_3_reg_3585 <= Range1_all_zeros_3_fu_1433_p2;
        and_ln603_2_reg_3482 <= and_ln603_2_fu_1114_p2;
        and_ln603_3_reg_3542 <= and_ln603_3_fu_1334_p2;
        and_ln603_5_reg_3547 <= and_ln603_5_fu_1356_p2;
        and_ln603_reg_3477 <= and_ln603_fu_1092_p2;
        and_ln642_1_reg_3590 <= and_ln642_1_fu_1448_p2;
        and_ln642_reg_3525 <= and_ln642_fu_1206_p2;
        icmp_ln621_1_reg_3553 <= icmp_ln621_1_fu_1365_p2;
        icmp_ln621_reg_3488 <= icmp_ln621_fu_1123_p2;
        icmp_ln641_1_reg_3580 <= icmp_ln641_1_fu_1428_p2;
        icmp_ln641_reg_3515 <= icmp_ln641_fu_1186_p2;
        or_ln652_4_reg_3531 <= or_ln652_4_fu_1223_p2;
        or_ln652_5_reg_3596 <= or_ln652_5_fu_1465_p2;
        select_ln403_1_reg_3472 <= select_ln403_1_fu_1079_p3;
        select_ln403_3_reg_3537 <= select_ln403_3_fu_1321_p3;
        select_ln631_1_reg_3574 <= select_ln631_1_fu_1420_p3;
        select_ln631_reg_3509 <= select_ln631_fu_1178_p3;
        xor_ln621_2_reg_3495 <= xor_ln621_2_fu_1128_p2;
        xor_ln621_3_reg_3560 <= xor_ln621_3_fu_1370_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        Range2_V_1_reg_3398 <= Range2_V_1_fu_845_p2;
        Range2_V_3_reg_3461 <= Range2_V_3_fu_976_p2;
        empty_16_reg_3362 <= empty_16_fu_799_p2;
        empty_19_reg_3425 <= empty_19_fu_930_p2;
        icmp_ln631_1_reg_3449 <= icmp_ln631_1_fu_966_p2;
        icmp_ln631_reg_3386 <= icmp_ln631_fu_835_p2;
        icmp_ln642_1_reg_3467 <= icmp_ln642_1_fu_981_p2;
        icmp_ln642_reg_3404 <= icmp_ln642_fu_850_p2;
        p_Result_21_reg_3356 <= p_Val2_5_fu_770_p3[32'd31];
        p_Result_25_reg_3419 <= p_Val2_11_fu_901_p3[32'd31];
        p_Val2_11_reg_3414 <= p_Val2_11_fu_901_p3;
        p_Val2_5_reg_3351 <= p_Val2_5_fu_770_p3;
        pos1_1_reg_3431 <= pos1_1_fu_936_p2;
        pos1_reg_3368 <= pos1_fu_805_p2;
        sext_ln581_1_reg_3409 <= sext_ln581_1_fu_861_p1;
        sext_ln581_reg_3346 <= sext_ln581_fu_729_p1;
        tmp_15_reg_3375 <= pos1_fu_805_p2[32'd11];
        tmp_16_reg_3381 <= pos2_fu_810_p2[32'd11];
        tmp_24_reg_3438 <= pos1_1_fu_936_p2[32'd11];
        tmp_25_reg_3444 <= pos2_1_fu_941_p2[32'd11];
        zext_ln635_1_reg_3456[31 : 0] <= zext_ln635_1_fu_972_p1[31 : 0];
        zext_ln635_reg_3393[31 : 0] <= zext_ln635_fu_841_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        and_ln284_1_reg_3956 <= and_ln284_1_fu_2938_p2;
        icmp_ln285_1_reg_3946 <= icmp_ln285_1_fu_2878_p2;
        ret_V_1_reg_3971 <= ret_V_1_fu_2976_p2;
        select_ln285_1_reg_3935 <= select_ln285_1_fu_2855_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        and_ln284_reg_3884 <= and_ln284_fu_2704_p2;
        icmp_ln278_1_reg_3914 <= icmp_ln278_1_fu_2783_p2;
        icmp_ln282_1_reg_3929 <= icmp_ln282_1_fu_2795_p2;
        icmp_ln285_reg_3874 <= icmp_ln285_fu_2644_p2;
        p_Result_34_reg_3904 <= reg_V_1_fu_2746_p3[32'd31];
        reg_V_1_reg_3899 <= reg_V_1_fu_2746_p3;
        sh_amt_4_reg_3921 <= sh_amt_4_fu_2789_p2;
        trunc_ln270_1_reg_3909 <= trunc_ln270_1_fu_2779_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln278_1_reg_3914 == 1'd0))) begin
        and_ln295_1_reg_3966 <= and_ln295_1_fu_2970_p2;
        select_ln285_2_reg_3961 <= select_ln285_2_fu_2950_p3;
        sh_amt_5_reg_3951 <= sh_amt_5_fu_2883_p2;
        tmp_9_reg_3941[22 : 0] <= tmp_9_fu_2863_p3[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & (icmp_ln278_reg_3848 == 1'd0))) begin
        and_ln295_reg_3894 <= and_ln295_fu_2736_p2;
        select_ln285_reg_3889 <= select_ln285_fu_2716_p3;
        sh_amt_3_reg_3879 <= sh_amt_3_fu_2649_p2;
        tmp_8_reg_3869[22 : 0] <= tmp_8_fu_2629_p3[22 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        and_ln659_2_reg_3646 <= and_ln659_2_fu_1845_p2;
        and_ln659_reg_3621 <= and_ln659_fu_1655_p2;
        overflow_1_reg_3640 <= overflow_1_fu_1839_p2;
        overflow_reg_3615 <= overflow_fu_1649_p2;
        p_Val2_13_reg_3627 <= p_Val2_13_fu_1665_p3;
        p_Val2_7_reg_3602 <= p_Val2_7_fu_1475_p3;
        select_ln557_1_reg_3634 <= select_ln557_1_fu_1809_p3;
        select_ln557_reg_3609 <= select_ln557_fu_1619_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        currentData_lch_V_reg_3652 <= currentData_lch_V_fu_1934_p3;
        currentData_rch_V_reg_3657 <= currentData_rch_V_fu_2026_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        exp_tmp_V_1_reg_3216 <= {{ireg_V_1_fu_514_p1[62:52]}};
        exp_tmp_V_reg_3192 <= {{ireg_V_fu_484_p1[62:52]}};
        p_Result_19_reg_3183 <= ireg_V_fu_484_p1[32'd63];
        p_Result_23_reg_3207 <= ireg_V_1_fu_514_p1[32'd63];
        trunc_ln556_1_reg_3202 <= trunc_ln556_1_fu_518_p1;
        trunc_ln556_reg_3178 <= trunc_ln556_fu_488_p1;
        trunc_ln565_1_reg_3221 <= trunc_ln565_1_fu_540_p1;
        trunc_ln565_reg_3197 <= trunc_ln565_fu_510_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        icmp_ln278_reg_3848 <= icmp_ln278_fu_2611_p2;
        icmp_ln282_reg_3863 <= icmp_ln282_fu_2623_p2;
        p_Result_33_reg_3838 <= reg_V_fu_2574_p3[32'd31];
        reg_V_reg_3833 <= reg_V_fu_2574_p3;
        sh_amt_2_reg_3855 <= sh_amt_2_fu_2617_p2;
        trunc_ln270_reg_3843 <= trunc_ln270_fu_2607_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln761_reg_3121 <= icmp_ln761_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        icmp_ln935_1_reg_3753 <= icmp_ln935_1_fu_2240_p2;
        sub_ln944_1_reg_3766 <= sub_ln944_1_fu_2268_p2;
        tmp_V_5_reg_3758 <= tmp_V_5_fu_2245_p3;
        trunc_ln943_1_reg_3778 <= trunc_ln943_1_fu_2278_p1;
        trunc_ln947_1_reg_3773 <= trunc_ln947_1_fu_2274_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        icmp_ln935_reg_3702 <= icmp_ln935_fu_2084_p2;
        p_Result_30_reg_3732 <= p_Val2_1_fu_230[32'd31];
        sub_ln944_reg_3715 <= sub_ln944_fu_2112_p2;
        tmp_V_2_reg_3738 <= tmp_V_2_fu_2134_p2;
        tmp_V_4_reg_3707 <= tmp_V_4_fu_2089_p3;
        trunc_ln943_reg_3727 <= trunc_ln943_fu_2122_p1;
        trunc_ln947_reg_3722 <= trunc_ln947_fu_2118_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (icmp_ln935_1_reg_3753 == 1'd0))) begin
        icmp_ln958_1_reg_3798 <= icmp_ln958_1_fu_2426_p2;
        or_ln949_1_reg_3793[0] <= or_ln949_1_fu_2418_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln935_reg_3702 == 1'd0))) begin
        icmp_ln958_reg_3748 <= icmp_ln958_fu_2234_p2;
        or_ln_reg_3743[0] <= or_ln_fu_2226_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (lrclk_V_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (lrclk_V_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (lrclk_V_0_vld_reg == 1'b1)))) begin
        lrclk_V_0_data_reg <= lrclk_V;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        lsrc_V_reg_3152 <= physMemPtr_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) & (icmp_ln935_reg_3702 == 1'd0))) begin
        m_reg_3783 <= {{m_3_fu_2309_p2[31:1]}};
        tmp_30_reg_3788 <= m_3_fu_2309_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_1_reg_3753 == 1'd0))) begin
        m_s_reg_3808 <= {{m_8_fu_2499_p2[31:1]}};
        tmp_34_reg_3813 <= m_8_fu_2499_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln761_fu_428_p2 == 1'd0))) begin
        or_ln105_reg_3130 <= or_ln105_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_2035_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        p_Result_27_reg_3681 <= p_Val2_s_fu_226[32'd31];
        tmp_V_reg_3687 <= tmp_V_fu_2071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (icmp_ln935_reg_3702 == 1'd0))) begin
        p_Result_29_reg_3803 <= p_Result_29_fu_2460_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) & (icmp_ln935_1_reg_3753 == 1'd0))) begin
        p_Result_32_reg_3823 <= p_Result_32_fu_2554_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_V_3_reg_3087 <= {{basePhysAddr_V[31:2]}};
        ret_V_reg_3097 <= ret_V_fu_412_p2;
        zext_ln215_reg_3092[29 : 0] <= zext_ln215_fu_408_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op612_writeresp_state57 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (ap_phi_mux_readyLch_flag_1_phi_fu_352_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        readyLch <= ap_phi_mux_readyRch_new_1_phi_fu_337_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op612_writeresp_state57 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (ap_phi_mux_readyRch_flag_1_phi_fu_322_p6 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        readyRch <= ap_phi_mux_readyRch_new_1_phi_fu_337_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) | ((1'b1 == ap_CS_fsm_state47) & (icmp_ln935_1_reg_3753 == 1'd0)) | ((1'b1 == ap_CS_fsm_state46) & (icmp_ln935_reg_3702 == 1'd0)))) begin
        reg_393 <= grp_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        rsrc_V_reg_3157 <= physMemPtr_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        rsrcf_reg_3172 <= grp_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
        select_ln285_3_reg_3981 <= select_ln285_3_fu_3046_p3;
        select_ln303_reg_3976 <= select_ln303_fu_2986_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
        select_ln303_1_reg_3994 <= select_ln303_1_fu_3069_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        stageIndex_V_reg_3665 <= stageIndex_V_fu_2041_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        status_V_reg_3116 <= physMemPtr_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_1_reg_3167 <= grp_fu_376_p1;
        tmp_reg_3162 <= grp_fu_373_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        trunc_ln128_reg_3692 <= trunc_ln128_fu_2077_p1;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op612_writeresp_state57 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state57))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) & (or_ln105_reg_3130 == 1'd0) & (icmp_ln761_reg_3121 == 1'd0))) begin
        ap_phi_mux_readyLch_flag_1_phi_fu_352_p6 = 1'd1;
    end else begin
        ap_phi_mux_readyLch_flag_1_phi_fu_352_p6 = readyLch_flag_1_reg_348;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) & (or_ln105_reg_3130 == 1'd0) & (icmp_ln761_reg_3121 == 1'd0))) begin
        ap_phi_mux_readyRch_flag_1_phi_fu_322_p6 = 1'd1;
    end else begin
        ap_phi_mux_readyRch_flag_1_phi_fu_322_p6 = readyRch_flag_1_reg_318;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) & (or_ln105_reg_3130 == 1'd0) & (icmp_ln761_reg_3121 == 1'd0))) begin
        ap_phi_mux_readyRch_new_1_phi_fu_337_p6 = 1'd0;
    end else begin
        ap_phi_mux_readyRch_new_1_phi_fu_337_p6 = readyRch_new_1_reg_332;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op612_writeresp_state57 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state57))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        configReg_ce0 = 1'b1;
    end else begin
        configReg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_362_p0 = bitcast_ln739_1_fu_2566_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        grp_fu_362_p0 = bitcast_ln739_fu_2522_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_362_p0 = tmp_reg_3162;
    end else begin
        grp_fu_362_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43))) begin
        grp_fu_362_p1 = 32'd1258291200;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_362_p1 = 32'd872415232;
    end else begin
        grp_fu_362_p1 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op612_writeresp_state57 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state57)) | ((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        lrclk_V_0_ack_out = 1'b1;
    end else begin
        lrclk_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op100_readreq_state10 == 1'b1) & (1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10))) begin
        physMemPtr_V_ARADDR = zext_ln544_1_fu_474_p1;
    end else if (((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        physMemPtr_V_ARADDR = zext_ln544_fu_418_p1;
    end else begin
        physMemPtr_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((ap_predicate_op100_readreq_state10 == 1'b1) & (1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10))) begin
        physMemPtr_V_ARLEN = 32'd2;
    end else if (((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        physMemPtr_V_ARLEN = 32'd1;
    end else begin
        physMemPtr_V_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op100_readreq_state10 == 1'b1) & (1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10)) | ((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        physMemPtr_V_ARVALID = 1'b1;
    end else begin
        physMemPtr_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((physMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
        physMemPtr_V_AWVALID = 1'b1;
    end else begin
        physMemPtr_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op612_writeresp_state57 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (ap_predicate_op612_writeresp_state57 == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
        physMemPtr_V_BREADY = 1'b1;
    end else begin
        physMemPtr_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        physMemPtr_V_RREADY = 1'b1;
    end else begin
        physMemPtr_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        physMemPtr_V_WDATA = select_ln303_1_reg_3994;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        physMemPtr_V_WDATA = select_ln303_reg_3976;
    end else begin
        physMemPtr_V_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52)) | ((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51)))) begin
        physMemPtr_V_WVALID = 1'b1;
    end else begin
        physMemPtr_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state10) & (or_ln105_fu_468_p2 == 1'd0) & (icmp_ln761_fu_428_p2 == 1'd0)))) begin
        physMemPtr_V_blk_n_AR = m_axi_physMemPtr_V_ARREADY;
    end else begin
        physMemPtr_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        physMemPtr_V_blk_n_AW = m_axi_physMemPtr_V_AWREADY;
    end else begin
        physMemPtr_V_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) & (or_ln105_reg_3130 == 1'd0) & (icmp_ln761_reg_3121 == 1'd0))) begin
        physMemPtr_V_blk_n_B = m_axi_physMemPtr_V_BVALID;
    end else begin
        physMemPtr_V_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state9))) begin
        physMemPtr_V_blk_n_R = m_axi_physMemPtr_V_RVALID;
    end else begin
        physMemPtr_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51))) begin
        physMemPtr_V_blk_n_W = m_axi_physMemPtr_V_WREADY;
    end else begin
        physMemPtr_V_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((physMemPtr_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & (or_ln105_fu_468_p2 == 1'd0) & (icmp_ln761_fu_428_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b0 == ap_block_state10_io) & (1'b1 == ap_CS_fsm_state10) & ((or_ln105_fu_468_p2 == 1'd1) | (icmp_ln761_fu_428_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((physMemPtr_V_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln887_fu_2035_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((physMemPtr_V_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((physMemPtr_V_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if ((~((ap_predicate_op612_writeresp_state57 == 1'b1) & (physMemPtr_V_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_666_p2 = (12'd1075 - zext_ln461_1_fu_634_p1);

assign F2_fu_576_p2 = (12'd1075 - zext_ln461_fu_544_p1);

assign QUAN_INC_1_fu_672_p2 = (($signed(F2_1_fu_666_p2) > $signed(12'd23)) ? 1'b1 : 1'b0);

assign QUAN_INC_fu_582_p2 = (($signed(F2_fu_576_p2) > $signed(12'd23)) ? 1'b1 : 1'b0);

assign Range1_all_ones_1_fu_1152_p2 = (icmp_ln621_fu_1123_p2 & and_ln621_fu_1146_p2);

assign Range1_all_ones_2_fu_1683_p2 = (select_ln631_1_reg_3574 & Range1_all_ones_3_reg_3567);

assign Range1_all_ones_3_fu_1394_p2 = (icmp_ln621_1_fu_1365_p2 & and_ln621_4_fu_1388_p2);

assign Range1_all_ones_fu_1493_p2 = (select_ln631_reg_3509 & Range1_all_ones_1_reg_3502);

assign Range1_all_zeros_1_fu_1191_p2 = ((p_Val2_20_reg_3231 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_1687_p2 = (1'd1 ^ Range1_all_ones_3_reg_3567);

assign Range1_all_zeros_3_fu_1433_p2 = ((p_Val2_21_reg_3291 == 54'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_1497_p2 = (1'd1 ^ Range1_all_ones_1_reg_3502);

assign Range2_V_1_fu_845_p2 = p_Val2_20_reg_3231 >> zext_ln635_fu_841_p1;

assign Range2_V_3_fu_976_p2 = p_Val2_21_reg_3291 >> zext_ln635_1_fu_972_p1;

assign Range2_all_ones_1_fu_1415_p2 = ((Range2_V_3_reg_3461 == r_V_1_fu_1410_p2) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_1173_p2 = ((Range2_V_1_reg_3398 == r_V_fu_1168_p2) ? 1'b1 : 1'b0);

assign a_1_fu_2379_p2 = (icmp_ln947_3_fu_2373_p2 & icmp_ln947_2_fu_2347_p2);

assign a_fu_2187_p2 = (icmp_ln947_fu_2155_p2 & icmp_ln947_1_fu_2181_p2);

assign add_ln581_1_fu_678_p2 = ($signed(12'd4073) + $signed(F2_1_fu_666_p2));

assign add_ln581_fu_588_p2 = ($signed(12'd4073) + $signed(F2_fu_576_p2));

assign add_ln591_1_fu_1234_p2 = ($signed(12'd4072) + $signed(F2_1_reg_3308));

assign add_ln591_fu_992_p2 = ($signed(12'd4072) + $signed(F2_reg_3248));

assign add_ln958_1_fu_2472_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_1_reg_3766));

assign add_ln958_fu_2282_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_3715));

assign add_ln964_1_fu_2541_p2 = (sub_ln964_1_fu_2536_p2 + select_ln964_1_fu_2529_p3);

assign add_ln964_fu_2447_p2 = (sub_ln964_fu_2442_p2 + select_ln964_fu_2435_p3);

assign and_ln105_fu_457_p2 = (xor_ln105_fu_451_p2 & lrclk_V_0_data_reg);

assign and_ln282_1_fu_2915_p2 = (xor_ln278_1_fu_2910_p2 & icmp_ln282_1_reg_3929);

assign and_ln282_fu_2681_p2 = (xor_ln278_fu_2676_p2 & icmp_ln282_reg_3863);

assign and_ln284_1_fu_2938_p2 = (xor_ln282_1_fu_2932_p2 & icmp_ln284_1_fu_2873_p2);

assign and_ln284_fu_2704_p2 = (xor_ln282_fu_2698_p2 & icmp_ln284_fu_2639_p2);

assign and_ln285_1_fu_2850_p2 = (xor_ln285_fu_2845_p2 & and_ln284_reg_3884);

assign and_ln285_2_fu_2944_p2 = (icmp_ln285_1_fu_2878_p2 & and_ln284_1_fu_2938_p2);

assign and_ln285_3_fu_3041_p2 = (xor_ln285_1_fu_3036_p2 & and_ln284_1_reg_3956);

assign and_ln285_fu_2710_p2 = (icmp_ln285_fu_2644_p2 & and_ln284_fu_2704_p2);

assign and_ln295_1_fu_2970_p2 = (xor_ln284_1_fu_2964_p2 & icmp_ln295_1_fu_2898_p2);

assign and_ln295_fu_2736_p2 = (xor_ln284_fu_2730_p2 & icmp_ln295_fu_2664_p2);

assign and_ln340_1_fu_1929_p2 = (empty_16_reg_3362 & and_ln340_fu_1923_p2);

assign and_ln340_2_fu_2015_p2 = (xor_ln571_1_fu_2010_p2 & or_ln340_5_fu_1968_p2);

assign and_ln340_3_fu_2021_p2 = (empty_19_reg_3425 & and_ln340_2_fu_2015_p2);

assign and_ln340_fu_1923_p2 = (xor_ln571_fu_1918_p2 & or_ln340_3_fu_1876_p2);

assign and_ln403_1_fu_1073_p2 = (xor_ln403_fu_1068_p2 & and_ln578_fu_1050_p2);

assign and_ln403_2_fu_1097_p2 = (xor_ln416_fu_1031_p2 & and_ln403_fu_1055_p2);

assign and_ln403_3_fu_1297_p2 = (p_Result_25_reg_3419 & and_ln578_1_fu_1292_p2);

assign and_ln403_4_fu_1315_p2 = (xor_ln403_1_fu_1310_p2 & and_ln578_1_fu_1292_p2);

assign and_ln403_5_fu_1339_p2 = (xor_ln416_1_fu_1273_p2 & and_ln403_3_fu_1297_p2);

assign and_ln403_fu_1055_p2 = (p_Result_21_reg_3356 & and_ln578_fu_1050_p2);

assign and_ln557_1_fu_1805_p2 = (p_Result_23_reg_3207 & icmp_ln621_1_reg_3553);

assign and_ln557_fu_1615_p2 = (p_Result_19_reg_3183 & icmp_ln621_reg_3488);

assign and_ln578_1_fu_1292_p2 = (xor_ln582_1_fu_1286_p2 & QUAN_INC_1_reg_3317);

assign and_ln578_fu_1050_p2 = (xor_ln582_fu_1044_p2 & QUAN_INC_reg_3257);

assign and_ln603_1_fu_1103_p2 = (icmp_ln603_reg_3275 & icmp_ln578_fu_1087_p2);

assign and_ln603_2_fu_1114_p2 = (xor_ln603_fu_1108_p2 & and_ln403_2_fu_1097_p2);

assign and_ln603_3_fu_1334_p2 = (icmp_ln603_1_reg_3335 & icmp_ln578_2_fu_1329_p2);

assign and_ln603_4_fu_1345_p2 = (icmp_ln603_1_reg_3335 & icmp_ln578_2_fu_1329_p2);

assign and_ln603_5_fu_1356_p2 = (xor_ln603_1_fu_1350_p2 & and_ln403_5_fu_1339_p2);

assign and_ln603_fu_1092_p2 = (icmp_ln603_reg_3275 & icmp_ln578_fu_1087_p2);

assign and_ln621_2_fu_1604_p2 = (xor_ln621_fu_1593_p2 & p_Result_22_fu_1481_p3);

assign and_ln621_3_fu_1610_p2 = (p_Result_19_reg_3183 & and_ln621_2_fu_1604_p2);

assign and_ln621_4_fu_1388_p2 = (xor_ln621_3_fu_1370_p2 & lD_1_fu_1384_p1);

assign and_ln621_6_fu_1794_p2 = (xor_ln621_1_fu_1783_p2 & p_Result_26_fu_1671_p3);

assign and_ln621_7_fu_1800_p2 = (p_Result_23_reg_3207 & and_ln621_6_fu_1794_p2);

assign and_ln621_fu_1146_p2 = (xor_ln621_2_fu_1128_p2 & lD_fu_1142_p1);

assign and_ln631_1_fu_1405_p2 = (xor_ln631_1_fu_1400_p2 & icmp_ln631_1_reg_3449);

assign and_ln631_fu_1163_p2 = (xor_ln631_fu_1158_p2 & icmp_ln631_reg_3386);

assign and_ln639_1_fu_1679_p2 = (xor_ln621_3_reg_3560 & icmp_ln631_1_reg_3449);

assign and_ln639_fu_1489_p2 = (xor_ln621_2_reg_3495 & icmp_ln631_reg_3386);

assign and_ln641_1_fu_1692_p2 = (icmp_ln641_1_reg_3580 & Range1_all_zeros_2_fu_1687_p2);

assign and_ln641_fu_1502_p2 = (icmp_ln641_reg_3515 & Range1_all_zeros_fu_1497_p2);

assign and_ln642_1_fu_1448_p2 = (or_ln639_1_fu_1443_p2 & icmp_ln642_1_reg_3467);

assign and_ln642_fu_1206_p2 = (or_ln639_fu_1201_p2 & icmp_ln642_reg_3404);

assign and_ln652_1_fu_1746_p2 = (select_ln639_2_fu_1706_p3 & or_ln652_5_reg_3596);

assign and_ln652_fu_1556_p2 = (select_ln639_fu_1516_p3 & or_ln652_4_reg_3531);

assign and_ln654_1_fu_1772_p2 = (select_ln639_2_fu_1706_p3 & and_ln603_5_reg_3547);

assign and_ln654_fu_1582_p2 = (select_ln639_fu_1516_p3 & and_ln603_2_reg_3482);

assign and_ln658_2_fu_1823_p2 = (xor_ln658_fu_1817_p2 & icmp_ln621_1_reg_3553);

assign and_ln658_fu_1633_p2 = (xor_ln658_2_fu_1627_p2 & icmp_ln621_reg_3488);

assign and_ln659_2_fu_1845_p2 = (p_Result_26_fu_1671_p3 & or_ln557_1_fu_1788_p2);

assign and_ln659_fu_1655_p2 = (p_Result_22_fu_1481_p3 & or_ln557_fu_1598_p2);

assign and_ln949_1_fu_2406_p2 = (xor_ln949_1_fu_2393_p2 & p_Result_6_fu_2399_p3);

assign and_ln949_fu_2214_p2 = (xor_ln949_fu_2201_p2 & p_Result_9_fu_2207_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10_io = ((ap_predicate_op100_readreq_state10 == 1'b1) & (physMemPtr_V_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state57 = ((ap_predicate_op612_writeresp_state57 == 1'b1) & (physMemPtr_V_BVALID == 1'b0));
end

always @ (*) begin
    ap_predicate_op100_readreq_state10 = ((or_ln105_fu_468_p2 == 1'd0) & (icmp_ln761_fu_428_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op612_writeresp_state57 = ((or_ln105_reg_3130 == 1'd0) & (icmp_ln761_reg_3121 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln586_1_fu_873_p2 = $signed(p_Val2_21_reg_3291) >>> zext_ln586_1_fu_869_p1;

assign ashr_ln586_fu_741_p2 = $signed(p_Val2_20_reg_3231) >>> zext_ln586_fu_737_p1;

assign ashr_ln623_1_fu_1379_p2 = $signed(p_Val2_21_reg_3291) >>> zext_ln623_1_fu_1375_p1;

assign ashr_ln623_fu_1137_p2 = $signed(p_Val2_20_reg_3231) >>> zext_ln623_fu_1133_p1;

assign bitcast_ln696_2_fu_882_p1 = rsrcf_reg_3172;

assign bitcast_ln696_fu_750_p1 = reg_393;

assign bitcast_ln705_1_fu_2742_p1 = reg_393;

assign bitcast_ln705_fu_2570_p1 = reg_393;

assign bitcast_ln739_1_fu_2566_p1 = p_Result_32_reg_3823;

assign bitcast_ln739_fu_2522_p1 = p_Result_29_reg_3803;

assign configReg_address0 = zext_ln125_fu_2055_p1;

assign currentData_lch_V_fu_1934_p3 = ((and_ln340_1_fu_1929_p2[0:0] === 1'b1) ? select_ln340_fu_1881_p3 : sel_tmp58_fu_1911_p3);

assign currentData_rch_V_fu_2026_p3 = ((and_ln340_3_fu_2021_p2[0:0] === 1'b1) ? select_ln340_1_fu_1973_p3 : sel_tmp123_fu_2003_p3);

assign deleted_ones_1_fu_1764_p3 = ((or_ln652_2_fu_1741_p2[0:0] === 1'b1) ? and_ln652_1_fu_1746_p2 : or_ln652_3_fu_1758_p2);

assign deleted_ones_fu_1574_p3 = ((or_ln652_fu_1551_p2[0:0] === 1'b1) ? and_ln652_fu_1556_p2 : or_ln652_1_fu_1568_p2);

assign deleted_zeros_1_fu_1729_p3 = ((and_ln603_5_reg_3547[0:0] === 1'b1) ? select_ln639_2_fu_1706_p3 : select_ln639_3_fu_1721_p3);

assign deleted_zeros_fu_1539_p3 = ((and_ln603_2_reg_3482[0:0] === 1'b1) ? select_ln639_fu_1516_p3 : select_ln639_1_fu_1531_p3);

assign empty_15_fu_793_p2 = (tmp185_cast_cast_fu_786_p3 + exp_V_fu_724_p2);

assign empty_16_fu_799_p2 = (($signed(empty_15_fu_793_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign empty_17_fu_1587_p2 = (1'd1 ^ and_ln654_fu_1582_p2);

assign empty_18_fu_924_p2 = (tmp190_cast_cast_fu_917_p3 + exp_V_1_fu_856_p2);

assign empty_19_fu_930_p2 = (($signed(empty_18_fu_924_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign empty_20_fu_1777_p2 = (1'd1 ^ and_ln654_1_fu_1772_p2);

assign exp_V_1_fu_856_p2 = ($signed(12'd3073) + $signed(zext_ln461_1_reg_3286));

assign exp_V_2_fu_2603_p1 = p_Result_s_22_fu_2593_p4;

assign exp_V_3_fu_2775_p1 = p_Result_3_fu_2765_p4;

assign exp_V_fu_724_p2 = ($signed(12'd3073) + $signed(zext_ln461_reg_3226));

assign icmp_ln278_1_fu_2783_p2 = ((trunc_ln262_1_fu_2753_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_2611_p2 = ((trunc_ln262_fu_2581_p1 == 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln282_1_fu_2795_p2 = ((p_Result_3_fu_2765_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_2623_p2 = ((p_Result_s_22_fu_2593_p4 == 8'd150) ? 1'b1 : 1'b0);

assign icmp_ln284_1_fu_2873_p2 = (($signed(sh_amt_4_reg_3921) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln284_fu_2639_p2 = (($signed(sh_amt_2_reg_3855) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln285_1_fu_2878_p2 = (($signed(sh_amt_4_reg_3921) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln285_fu_2644_p2 = (($signed(sh_amt_2_reg_3855) < $signed(9'd25)) ? 1'b1 : 1'b0);

assign icmp_ln295_1_fu_2898_p2 = (($signed(tmp_39_fu_2888_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_ln295_fu_2664_p2 = (($signed(tmp_36_fu_2654_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_661_p2 = ((trunc_ln556_1_reg_3202 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_571_p2 = ((trunc_ln556_reg_3178 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln578_2_fu_1329_p2 = (($signed(F2_1_reg_3308) < $signed(12'd23)) ? 1'b1 : 1'b0);

assign icmp_ln578_fu_1087_p2 = (($signed(F2_reg_3248) < $signed(12'd23)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_1229_p2 = ((F2_1_reg_3308 == 12'd23) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_987_p2 = ((F2_reg_3248 == 12'd23) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_864_p2 = ((sh_amt_1_reg_3323 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_732_p2 = ((sh_amt_reg_3263 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln591_1_fu_718_p2 = (($signed(add_ln581_1_fu_678_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_628_p2 = (($signed(add_ln581_fu_588_p2) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_712_p2 = ((tmp_19_fu_702_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_622_p2 = ((tmp_10_fu_612_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln621_1_fu_1365_p2 = (($signed(pos1_1_reg_3431) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln621_fu_1123_p2 = (($signed(pos1_reg_3368) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln631_1_fu_966_p2 = (($signed(pos2_1_fu_941_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln631_fu_835_p2 = (($signed(pos2_fu_810_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln641_1_fu_1428_p2 = ((Range2_V_3_reg_3461 == 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln641_fu_1186_p2 = ((Range2_V_1_reg_3398 == 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln642_1_fu_981_p2 = ((pos2_1_fu_941_p2 == 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln642_fu_850_p2 = ((pos2_fu_810_p2 == 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln761_fu_428_p2 = ((status_V_reg_3116 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_2035_p2 = ((t_V_reg_307 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln935_1_fu_2240_p2 = ((p_Val2_1_fu_230 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_2084_p2 = ((p_Val2_s_fu_226 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_2181_p2 = ((p_Result_14_fu_2176_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_2_fu_2347_p2 = (($signed(tmp_32_fu_2337_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln947_3_fu_2373_p2 = ((p_Result_16_fu_2368_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_2155_p2 = (($signed(tmp_28_fu_2145_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_1_fu_2426_p2 = (($signed(lsb_index_1_fu_2332_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_2234_p2 = (($signed(lsb_index_fu_2140_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_V_1_fu_514_p1 = grp_fu_382_p1;

assign ireg_V_fu_484_p1 = grp_fu_379_p1;

assign lD_1_fu_1384_p1 = ashr_ln623_1_fu_1379_p2[0:0];

assign lD_fu_1142_p1 = ashr_ln623_fu_1137_p2[0:0];


always @ (p_Result_31_fu_2250_p4) begin
    if (p_Result_31_fu_2250_p4[0] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd0;
    end else if (p_Result_31_fu_2250_p4[1] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd1;
    end else if (p_Result_31_fu_2250_p4[2] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd2;
    end else if (p_Result_31_fu_2250_p4[3] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd3;
    end else if (p_Result_31_fu_2250_p4[4] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd4;
    end else if (p_Result_31_fu_2250_p4[5] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd5;
    end else if (p_Result_31_fu_2250_p4[6] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd6;
    end else if (p_Result_31_fu_2250_p4[7] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd7;
    end else if (p_Result_31_fu_2250_p4[8] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd8;
    end else if (p_Result_31_fu_2250_p4[9] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd9;
    end else if (p_Result_31_fu_2250_p4[10] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd10;
    end else if (p_Result_31_fu_2250_p4[11] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd11;
    end else if (p_Result_31_fu_2250_p4[12] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd12;
    end else if (p_Result_31_fu_2250_p4[13] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd13;
    end else if (p_Result_31_fu_2250_p4[14] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd14;
    end else if (p_Result_31_fu_2250_p4[15] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd15;
    end else if (p_Result_31_fu_2250_p4[16] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd16;
    end else if (p_Result_31_fu_2250_p4[17] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd17;
    end else if (p_Result_31_fu_2250_p4[18] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd18;
    end else if (p_Result_31_fu_2250_p4[19] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd19;
    end else if (p_Result_31_fu_2250_p4[20] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd20;
    end else if (p_Result_31_fu_2250_p4[21] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd21;
    end else if (p_Result_31_fu_2250_p4[22] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd22;
    end else if (p_Result_31_fu_2250_p4[23] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd23;
    end else if (p_Result_31_fu_2250_p4[24] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd24;
    end else if (p_Result_31_fu_2250_p4[25] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd25;
    end else if (p_Result_31_fu_2250_p4[26] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd26;
    end else if (p_Result_31_fu_2250_p4[27] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd27;
    end else if (p_Result_31_fu_2250_p4[28] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd28;
    end else if (p_Result_31_fu_2250_p4[29] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd29;
    end else if (p_Result_31_fu_2250_p4[30] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd30;
    end else if (p_Result_31_fu_2250_p4[31] == 1'b1) begin
        l_1_fu_2260_p3 = 32'd31;
    end else begin
        l_1_fu_2260_p3 = 32'd32;
    end
end


always @ (p_Result_28_fu_2094_p4) begin
    if (p_Result_28_fu_2094_p4[0] == 1'b1) begin
        l_fu_2104_p3 = 32'd0;
    end else if (p_Result_28_fu_2094_p4[1] == 1'b1) begin
        l_fu_2104_p3 = 32'd1;
    end else if (p_Result_28_fu_2094_p4[2] == 1'b1) begin
        l_fu_2104_p3 = 32'd2;
    end else if (p_Result_28_fu_2094_p4[3] == 1'b1) begin
        l_fu_2104_p3 = 32'd3;
    end else if (p_Result_28_fu_2094_p4[4] == 1'b1) begin
        l_fu_2104_p3 = 32'd4;
    end else if (p_Result_28_fu_2094_p4[5] == 1'b1) begin
        l_fu_2104_p3 = 32'd5;
    end else if (p_Result_28_fu_2094_p4[6] == 1'b1) begin
        l_fu_2104_p3 = 32'd6;
    end else if (p_Result_28_fu_2094_p4[7] == 1'b1) begin
        l_fu_2104_p3 = 32'd7;
    end else if (p_Result_28_fu_2094_p4[8] == 1'b1) begin
        l_fu_2104_p3 = 32'd8;
    end else if (p_Result_28_fu_2094_p4[9] == 1'b1) begin
        l_fu_2104_p3 = 32'd9;
    end else if (p_Result_28_fu_2094_p4[10] == 1'b1) begin
        l_fu_2104_p3 = 32'd10;
    end else if (p_Result_28_fu_2094_p4[11] == 1'b1) begin
        l_fu_2104_p3 = 32'd11;
    end else if (p_Result_28_fu_2094_p4[12] == 1'b1) begin
        l_fu_2104_p3 = 32'd12;
    end else if (p_Result_28_fu_2094_p4[13] == 1'b1) begin
        l_fu_2104_p3 = 32'd13;
    end else if (p_Result_28_fu_2094_p4[14] == 1'b1) begin
        l_fu_2104_p3 = 32'd14;
    end else if (p_Result_28_fu_2094_p4[15] == 1'b1) begin
        l_fu_2104_p3 = 32'd15;
    end else if (p_Result_28_fu_2094_p4[16] == 1'b1) begin
        l_fu_2104_p3 = 32'd16;
    end else if (p_Result_28_fu_2094_p4[17] == 1'b1) begin
        l_fu_2104_p3 = 32'd17;
    end else if (p_Result_28_fu_2094_p4[18] == 1'b1) begin
        l_fu_2104_p3 = 32'd18;
    end else if (p_Result_28_fu_2094_p4[19] == 1'b1) begin
        l_fu_2104_p3 = 32'd19;
    end else if (p_Result_28_fu_2094_p4[20] == 1'b1) begin
        l_fu_2104_p3 = 32'd20;
    end else if (p_Result_28_fu_2094_p4[21] == 1'b1) begin
        l_fu_2104_p3 = 32'd21;
    end else if (p_Result_28_fu_2094_p4[22] == 1'b1) begin
        l_fu_2104_p3 = 32'd22;
    end else if (p_Result_28_fu_2094_p4[23] == 1'b1) begin
        l_fu_2104_p3 = 32'd23;
    end else if (p_Result_28_fu_2094_p4[24] == 1'b1) begin
        l_fu_2104_p3 = 32'd24;
    end else if (p_Result_28_fu_2094_p4[25] == 1'b1) begin
        l_fu_2104_p3 = 32'd25;
    end else if (p_Result_28_fu_2094_p4[26] == 1'b1) begin
        l_fu_2104_p3 = 32'd26;
    end else if (p_Result_28_fu_2094_p4[27] == 1'b1) begin
        l_fu_2104_p3 = 32'd27;
    end else if (p_Result_28_fu_2094_p4[28] == 1'b1) begin
        l_fu_2104_p3 = 32'd28;
    end else if (p_Result_28_fu_2094_p4[29] == 1'b1) begin
        l_fu_2104_p3 = 32'd29;
    end else if (p_Result_28_fu_2094_p4[30] == 1'b1) begin
        l_fu_2104_p3 = 32'd30;
    end else if (p_Result_28_fu_2094_p4[31] == 1'b1) begin
        l_fu_2104_p3 = 32'd31;
    end else begin
        l_fu_2104_p3 = 32'd32;
    end
end

assign lsb_index_1_fu_2332_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_1_reg_3766));

assign lsb_index_fu_2140_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_reg_3715));

assign lshr_ln286_1_fu_2904_p2 = tmp_9_fu_2863_p3 >> sext_ln281_1_fu_2870_p1;

assign lshr_ln286_fu_2670_p2 = tmp_8_fu_2629_p3 >> sext_ln281_fu_2636_p1;

assign lshr_ln947_1_fu_2362_p2 = 32'd4294967295 >> zext_ln947_1_fu_2358_p1;

assign lshr_ln947_fu_2170_p2 = 32'd4294967295 >> zext_ln947_fu_2166_p1;

assign lshr_ln958_1_fu_2477_p2 = tmp_V_5_reg_3758 >> add_ln958_1_fu_2472_p2;

assign lshr_ln958_fu_2287_p2 = tmp_V_4_reg_3707 >> add_ln958_fu_2282_p2;

assign m_11_fu_2432_p1 = m_reg_3783;

assign m_12_fu_2526_p1 = m_s_reg_3808;

assign m_2_fu_2302_p3 = ((icmp_ln958_reg_3748[0:0] === 1'b1) ? lshr_ln958_fu_2287_p2 : shl_ln958_fu_2297_p2);

assign m_3_fu_2309_p2 = (or_ln_reg_3743 + m_2_fu_2302_p3);

assign m_7_fu_2492_p3 = ((icmp_ln958_1_reg_3798[0:0] === 1'b1) ? lshr_ln958_1_fu_2477_p2 : shl_ln958_1_fu_2487_p2);

assign m_8_fu_2499_p2 = (or_ln949_1_reg_3793 + m_7_fu_2492_p3);

assign man_V_1_fu_558_p2 = (54'd0 - p_Result_20_fu_554_p1);

assign man_V_4_fu_648_p2 = (54'd0 - p_Result_24_fu_644_p1);

assign or_ln100_fu_441_p2 = (readyRch | lrclk_V_0_data_reg);

assign or_ln105_fu_468_p2 = (xor_ln105_1_fu_462_p2 | and_ln105_fu_457_p2);

assign or_ln282_1_fu_2928_p2 = (icmp_ln282_1_reg_3929 | icmp_ln278_1_reg_3914);

assign or_ln282_fu_2694_p2 = (icmp_ln282_reg_3863 | icmp_ln278_reg_3848);

assign or_ln284_1_fu_2958_p2 = (or_ln282_1_fu_2928_p2 | icmp_ln284_1_fu_2873_p2);

assign or_ln284_fu_2724_p2 = (or_ln282_fu_2694_p2 | icmp_ln284_fu_2639_p2);

assign or_ln340_1_fu_1953_p2 = (underflow_1_fu_1948_p2 | overflow_1_reg_3640);

assign or_ln340_2_fu_1871_p2 = (xor_ln340_fu_1866_p2 | overflow_reg_3615);

assign or_ln340_3_fu_1876_p2 = (or_ln340_2_fu_1871_p2 | and_ln659_reg_3621);

assign or_ln340_4_fu_1963_p2 = (xor_ln340_1_fu_1958_p2 | overflow_1_reg_3640);

assign or_ln340_5_fu_1968_p2 = (or_ln340_4_fu_1963_p2 | and_ln659_2_reg_3646);

assign or_ln340_fu_1861_p2 = (underflow_fu_1856_p2 | overflow_reg_3615);

assign or_ln557_1_fu_1788_p2 = (xor_ln621_1_fu_1783_p2 | deleted_ones_1_fu_1764_p3);

assign or_ln557_fu_1598_p2 = (xor_ln621_fu_1593_p2 | deleted_ones_fu_1574_p3);

assign or_ln571_1_fu_1987_p2 = (underflow_1_fu_1948_p2 | icmp_ln571_1_reg_3300);

assign or_ln571_fu_1895_p2 = (underflow_fu_1856_p2 | icmp_ln571_reg_3240);

assign or_ln639_1_fu_1443_p2 = (xor_ln639_fu_1438_p2 | tmp_24_reg_3438);

assign or_ln639_fu_1201_p2 = (xor_ln639_2_fu_1196_p2 | tmp_15_reg_3375);

assign or_ln645_1_fu_1697_p2 = (xor_ln621_3_reg_3560 | Range1_all_zeros_3_reg_3585);

assign or_ln645_fu_1507_p2 = (xor_ln621_2_reg_3495 | Range1_all_zeros_1_reg_3520);

assign or_ln652_1_fu_1568_p2 = (tmp_17_fu_1561_p3 | Range1_all_zeros_fu_1497_p2);

assign or_ln652_2_fu_1741_p2 = (xor_ln652_3_fu_1736_p2 | or_ln652_5_reg_3596);

assign or_ln652_3_fu_1758_p2 = (tmp_26_fu_1751_p3 | Range1_all_zeros_2_fu_1687_p2);

assign or_ln652_4_fu_1223_p2 = (or_ln652_6_fu_1217_p2 | and_ln603_fu_1092_p2);

assign or_ln652_5_fu_1465_p2 = (or_ln652_7_fu_1459_p2 | and_ln603_3_fu_1334_p2);

assign or_ln652_6_fu_1217_p2 = (xor_ln652_4_fu_1211_p2 | tmp_13_fu_1023_p3);

assign or_ln652_7_fu_1459_p2 = (xor_ln652_5_fu_1453_p2 | tmp_22_fu_1265_p3);

assign or_ln652_fu_1551_p2 = (xor_ln652_1_fu_1546_p2 | or_ln652_4_reg_3531);

assign or_ln658_1_fu_1828_p2 = (p_Result_26_fu_1671_p3 | and_ln658_2_fu_1823_p2);

assign or_ln658_fu_1638_p2 = (p_Result_22_fu_1481_p3 | and_ln658_fu_1633_p2);

assign or_ln949_1_fu_2418_p3 = {{31'd0}, {or_ln949_fu_2412_p2}};

assign or_ln949_2_fu_2220_p2 = (and_ln949_fu_2214_p2 | a_fu_2187_p2);

assign or_ln949_fu_2412_p2 = (and_ln949_1_fu_2406_p2 | a_1_fu_2379_p2);

assign or_ln_fu_2226_p3 = {{31'd0}, {or_ln949_2_fu_2220_p2}};

assign overflow_1_fu_1839_p2 = (xor_ln658_3_fu_1834_p2 & or_ln658_1_fu_1828_p2);

assign overflow_fu_1649_p2 = (xor_ln658_1_fu_1644_p2 & or_ln658_fu_1638_p2);

assign p_Result_14_fu_2176_p2 = (tmp_V_4_reg_3707 & lshr_ln947_fu_2170_p2);

assign p_Result_16_fu_2368_p2 = (tmp_V_5_reg_3758 & lshr_ln947_1_fu_2362_p2);

assign p_Result_20_fu_554_p1 = tmp_2_fu_547_p3;

assign p_Result_22_fu_1481_p3 = p_Val2_7_fu_1475_p3[32'd31];

assign p_Result_24_fu_644_p1 = tmp_3_fu_637_p3;

assign p_Result_26_fu_1671_p3 = p_Val2_13_fu_1665_p3[32'd31];

integer ap_tvar_int_0;

always @ (tmp_V_4_fu_2089_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_28_fu_2094_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_28_fu_2094_p4[ap_tvar_int_0] = tmp_V_4_fu_2089_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_29_fu_2460_p5 = {{tmp_5_fu_2453_p3}, {m_11_fu_2432_p1[22:0]}};

integer ap_tvar_int_1;

always @ (tmp_V_5_fu_2245_p3) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            p_Result_31_fu_2250_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_31_fu_2250_p4[ap_tvar_int_1] = tmp_V_5_fu_2245_p3[31 - ap_tvar_int_1];
        end
    end
end

assign p_Result_32_fu_2554_p5 = {{tmp_7_fu_2547_p3}, {m_12_fu_2526_p1[22:0]}};

assign p_Result_3_fu_2765_p4 = {{reg_V_1_fu_2746_p3[30:23]}};

assign p_Result_5_fu_1243_p3 = p_Val2_21_reg_3291[sext_ln591_1_fu_1239_p1];

assign p_Result_6_fu_2399_p3 = tmp_V_5_reg_3758[lsb_index_1_fu_2332_p2];

assign p_Result_9_fu_2207_p3 = tmp_V_4_reg_3707[lsb_index_fu_2140_p2];

assign p_Result_s_22_fu_2593_p4 = {{reg_V_fu_2574_p3[30:23]}};

assign p_Result_s_fu_1001_p3 = p_Val2_20_reg_3231[sext_ln591_fu_997_p1];

assign p_Val2_11_fu_901_p3 = ((icmp_ln585_1_fu_864_p2[0:0] === 1'b1) ? trunc_ln586_1_fu_878_p1 : select_ln588_1_fu_893_p3);

assign p_Val2_12_fu_1260_p2 = (p_Val2_11_reg_3414 + zext_ln415_1_fu_1256_p1);

assign p_Val2_13_fu_1665_p3 = ((and_ln603_3_reg_3542[0:0] === 1'b1) ? shl_ln604_1_fu_1661_p2 : select_ln403_3_reg_3537);

assign p_Val2_20_fu_564_p3 = ((p_Result_19_reg_3183[0:0] === 1'b1) ? man_V_1_fu_558_p2 : p_Result_20_fu_554_p1);

assign p_Val2_21_fu_654_p3 = ((p_Result_23_reg_3207[0:0] === 1'b1) ? man_V_4_fu_648_p2 : p_Result_24_fu_644_p1);

assign p_Val2_5_fu_770_p3 = ((icmp_ln585_fu_732_p2[0:0] === 1'b1) ? trunc_ln586_fu_746_p1 : select_ln588_fu_762_p3);

assign p_Val2_6_fu_1018_p2 = (p_Val2_5_reg_3351 + zext_ln415_fu_1014_p1);

assign p_Val2_7_fu_1475_p3 = ((and_ln603_reg_3477[0:0] === 1'b1) ? shl_ln604_fu_1471_p2 : select_ln403_1_reg_3472);

assign physMemPtr_V_AWADDR = zext_ln544_2_fu_3054_p1;

assign pos1_1_fu_936_p2 = (12'd9 + F2_1_reg_3308);

assign pos1_fu_805_p2 = (12'd9 + F2_reg_3248);

assign pos2_1_fu_941_p2 = (12'd10 + F2_1_reg_3308);

assign pos2_fu_810_p2 = (12'd10 + F2_reg_3248);

assign qb_1_fu_1250_p3 = ((icmp_ln591_1_reg_3341[0:0] === 1'b1) ? p_Result_23_reg_3207 : p_Result_5_fu_1243_p3);

assign qb_fu_1008_p3 = ((icmp_ln591_reg_3281[0:0] === 1'b1) ? p_Result_19_reg_3183 : p_Result_s_fu_1001_p3);

assign r_V_1_fu_1410_p2 = 54'd18014398509481983 >> zext_ln635_1_reg_3456;

assign r_V_3_fu_398_p4 = {{basePhysAddr_V[31:2]}};

assign r_V_fu_1168_p2 = 54'd18014398509481983 >> zext_ln635_reg_3393;

assign reg_V_1_fu_2746_p3 = ((icmp_ln935_1_reg_3753[0:0] === 1'b1) ? 32'd0 : bitcast_ln705_1_fu_2742_p1);

assign reg_V_fu_2574_p3 = ((icmp_ln935_reg_3702[0:0] === 1'b1) ? 32'd0 : bitcast_ln705_fu_2570_p1);

assign ret_V_1_fu_2976_p2 = (31'd2 + zext_ln215_reg_3092);

assign ret_V_fu_412_p2 = (zext_ln215_fu_408_p1 + 31'd4);

assign sel_tmp122_demorgan_fu_1999_p2 = (icmp_ln571_1_reg_3300 | empty_19_reg_3425);

assign sel_tmp123_fu_2003_p3 = ((sel_tmp122_demorgan_fu_1999_p2[0:0] === 1'b1) ? select_ln571_3_fu_1992_p3 : p_Val2_13_reg_3627);

assign sel_tmp57_demorgan_fu_1907_p2 = (icmp_ln571_reg_3240 | empty_16_reg_3362);

assign sel_tmp58_fu_1911_p3 = ((sel_tmp57_demorgan_fu_1907_p2[0:0] === 1'b1) ? select_ln571_1_fu_1900_p3 : p_Val2_7_reg_3602);

assign select_ln278_1_fu_3029_p3 = ((icmp_ln278_1_reg_3914[0:0] === 1'b1) ? 32'd0 : select_ln295_1_fu_3022_p3);

assign select_ln278_fu_2838_p3 = ((icmp_ln278_reg_3848[0:0] === 1'b1) ? 32'd0 : select_ln295_fu_2831_p3);

assign select_ln282_1_fu_2920_p3 = ((and_ln282_1_fu_2915_p2[0:0] === 1'b1) ? tmp_9_fu_2863_p3 : 24'd0);

assign select_ln282_fu_2686_p3 = ((and_ln282_fu_2681_p2[0:0] === 1'b1) ? tmp_8_fu_2629_p3 : 24'd0);

assign select_ln285_1_fu_2855_p3 = ((and_ln285_1_fu_2850_p2[0:0] === 1'b1) ? select_ln288_fu_2814_p3 : select_ln278_fu_2838_p3);

assign select_ln285_2_fu_2950_p3 = ((and_ln285_2_fu_2944_p2[0:0] === 1'b1) ? lshr_ln286_1_fu_2904_p2 : select_ln282_1_fu_2920_p3);

assign select_ln285_3_fu_3046_p3 = ((and_ln285_3_fu_3041_p2[0:0] === 1'b1) ? select_ln288_1_fu_3005_p3 : select_ln278_1_fu_3029_p3);

assign select_ln285_fu_2716_p3 = ((and_ln285_fu_2710_p2[0:0] === 1'b1) ? lshr_ln286_fu_2670_p2 : select_ln282_fu_2686_p3);

assign select_ln288_1_fu_3005_p3 = ((tmp_40_fu_2998_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln288_fu_2814_p3 = ((tmp_37_fu_2807_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln295_1_fu_3022_p3 = ((and_ln295_1_reg_3966[0:0] === 1'b1) ? shl_ln297_1_fu_3013_p2 : zext_ln285_1_fu_3019_p1);

assign select_ln295_fu_2831_p3 = ((and_ln295_reg_3894[0:0] === 1'b1) ? shl_ln297_fu_2822_p2 : zext_ln285_fu_2828_p1);

assign select_ln303_1_fu_3069_p3 = ((p_Result_34_reg_3904[0:0] === 1'b1) ? sub_ln461_1_fu_3064_p2 : select_ln285_3_reg_3981);

assign select_ln303_fu_2986_p3 = ((p_Result_33_reg_3838[0:0] === 1'b1) ? sub_ln461_fu_2981_p2 : select_ln285_1_reg_3935);

assign select_ln340_1_fu_1973_p3 = ((or_ln340_1_fu_1953_p2[0:0] === 1'b1) ? 32'd2147483647 : p_Val2_13_reg_3627);

assign select_ln340_fu_1881_p3 = ((or_ln340_fu_1861_p2[0:0] === 1'b1) ? 32'd2147483647 : p_Val2_7_reg_3602);

assign select_ln403_1_fu_1079_p3 = ((and_ln403_1_fu_1073_p2[0:0] === 1'b1) ? p_Val2_6_fu_1018_p2 : select_ln403_fu_1060_p3);

assign select_ln403_2_fu_1302_p3 = ((and_ln403_3_fu_1297_p2[0:0] === 1'b1) ? p_Val2_12_fu_1260_p2 : select_ln582_1_fu_1279_p3);

assign select_ln403_3_fu_1321_p3 = ((and_ln403_4_fu_1315_p2[0:0] === 1'b1) ? p_Val2_12_fu_1260_p2 : select_ln403_2_fu_1302_p3);

assign select_ln403_fu_1060_p3 = ((and_ln403_fu_1055_p2[0:0] === 1'b1) ? p_Val2_6_fu_1018_p2 : select_ln582_fu_1037_p3);

assign select_ln557_1_fu_1809_p3 = ((and_ln557_1_fu_1805_p2[0:0] === 1'b1) ? empty_20_fu_1777_p2 : and_ln621_7_fu_1800_p2);

assign select_ln557_fu_1619_p3 = ((and_ln557_fu_1615_p2[0:0] === 1'b1) ? empty_17_fu_1587_p2 : and_ln621_3_fu_1610_p2);

assign select_ln571_1_fu_1900_p3 = ((or_ln571_fu_1895_p2[0:0] === 1'b1) ? select_ln571_fu_1888_p3 : p_Val2_7_reg_3602);

assign select_ln571_2_fu_1980_p3 = ((icmp_ln571_1_reg_3300[0:0] === 1'b1) ? 32'd0 : 32'd2147483648);

assign select_ln571_3_fu_1992_p3 = ((or_ln571_1_fu_1987_p2[0:0] === 1'b1) ? select_ln571_2_fu_1980_p3 : p_Val2_13_reg_3627);

assign select_ln571_fu_1888_p3 = ((icmp_ln571_reg_3240[0:0] === 1'b1) ? 32'd0 : 32'd2147483648);

assign select_ln582_1_fu_1279_p3 = ((icmp_ln582_1_fu_1229_p2[0:0] === 1'b1) ? trunc_ln583_1_reg_3329 : 32'd0);

assign select_ln582_fu_1037_p3 = ((icmp_ln582_fu_987_p2[0:0] === 1'b1) ? trunc_ln583_reg_3269 : 32'd0);

assign select_ln588_1_fu_893_p3 = ((tmp_20_fu_885_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_fu_762_p3 = ((tmp_11_fu_754_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln631_1_fu_1420_p3 = ((and_ln631_1_fu_1405_p2[0:0] === 1'b1) ? Range2_all_ones_1_fu_1415_p2 : xor_ln631_1_fu_1400_p2);

assign select_ln631_fu_1178_p3 = ((and_ln631_fu_1163_p2[0:0] === 1'b1) ? Range2_all_ones_fu_1173_p2 : xor_ln631_fu_1158_p2);

assign select_ln639_1_fu_1531_p3 = ((and_ln639_fu_1489_p2[0:0] === 1'b1) ? and_ln641_fu_1502_p2 : select_ln642_1_fu_1524_p3);

assign select_ln639_2_fu_1706_p3 = ((and_ln639_1_fu_1679_p2[0:0] === 1'b1) ? Range1_all_ones_2_fu_1683_p2 : select_ln642_2_fu_1701_p3);

assign select_ln639_3_fu_1721_p3 = ((and_ln639_1_fu_1679_p2[0:0] === 1'b1) ? and_ln641_1_fu_1692_p2 : select_ln642_3_fu_1714_p3);

assign select_ln639_fu_1516_p3 = ((and_ln639_fu_1489_p2[0:0] === 1'b1) ? Range1_all_ones_fu_1493_p2 : select_ln642_fu_1511_p3);

assign select_ln642_1_fu_1524_p3 = ((and_ln642_reg_3525[0:0] === 1'b1) ? Range1_all_zeros_fu_1497_p2 : or_ln645_fu_1507_p2);

assign select_ln642_2_fu_1701_p3 = ((and_ln642_1_reg_3590[0:0] === 1'b1) ? Range1_all_ones_3_reg_3567 : xor_ln621_3_reg_3560);

assign select_ln642_3_fu_1714_p3 = ((and_ln642_1_reg_3590[0:0] === 1'b1) ? Range1_all_zeros_2_fu_1687_p2 : or_ln645_1_fu_1697_p2);

assign select_ln642_fu_1511_p3 = ((and_ln642_reg_3525[0:0] === 1'b1) ? Range1_all_ones_1_reg_3502 : xor_ln621_2_reg_3495);

assign select_ln964_1_fu_2529_p3 = ((tmp_34_reg_3813[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign select_ln964_fu_2435_p3 = ((tmp_30_reg_3788[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln281_1_fu_2870_p1 = sh_amt_4_reg_3921;

assign sext_ln281_fu_2636_p1 = sh_amt_2_reg_3855;

assign sext_ln294_1_fu_2995_p1 = sh_amt_5_reg_3951;

assign sext_ln294_fu_2804_p1 = sh_amt_3_reg_3879;

assign sext_ln581_1_fu_861_p1 = sh_amt_1_reg_3323;

assign sext_ln581_fu_729_p1 = sh_amt_reg_3263;

assign sext_ln591_1_fu_1239_p1 = $signed(add_ln591_1_fu_1234_p2);

assign sext_ln591_fu_997_p1 = $signed(add_ln591_fu_992_p2);

assign sext_ln618_1_fu_1362_p1 = pos1_1_reg_3431;

assign sext_ln618_fu_1120_p1 = pos1_reg_3368;

assign sext_ln619_1_fu_946_p1 = pos2_1_fu_941_p2;

assign sext_ln619_fu_815_p1 = pos2_fu_810_p2;

assign sh_amt_1_fu_690_p3 = ((QUAN_INC_1_fu_672_p2[0:0] === 1'b1) ? add_ln581_1_fu_678_p2 : sub_ln581_1_fu_684_p2);

assign sh_amt_2_fu_2617_p2 = (9'd150 - exp_V_2_fu_2603_p1);

assign sh_amt_3_fu_2649_p2 = ($signed(9'd0) - $signed(sh_amt_2_reg_3855));

assign sh_amt_4_fu_2789_p2 = (9'd150 - exp_V_3_fu_2775_p1);

assign sh_amt_5_fu_2883_p2 = ($signed(9'd0) - $signed(sh_amt_4_reg_3921));

assign sh_amt_fu_600_p3 = ((QUAN_INC_fu_582_p2[0:0] === 1'b1) ? add_ln581_fu_588_p2 : sub_ln581_fu_594_p2);

assign shl_ln297_1_fu_3013_p2 = zext_ln283_1_fu_2992_p1 << sext_ln294_1_fu_2995_p1;

assign shl_ln297_fu_2822_p2 = zext_ln283_fu_2801_p1 << sext_ln294_fu_2804_p1;

assign shl_ln604_1_fu_1661_p2 = trunc_ln583_1_reg_3329 << sext_ln581_1_reg_3409;

assign shl_ln604_fu_1471_p2 = trunc_ln583_reg_3269 << sext_ln581_reg_3346;

assign shl_ln958_1_fu_2487_p2 = tmp_V_5_reg_3758 << sub_ln958_1_fu_2482_p2;

assign shl_ln958_fu_2297_p2 = tmp_V_4_reg_3707 << sub_ln958_fu_2292_p2;

assign stageIndex_V_fu_2041_p2 = (t_V_reg_307 + 3'd1);

assign sub_ln461_1_fu_3064_p2 = (32'd0 - select_ln285_3_reg_3981);

assign sub_ln461_fu_2981_p2 = (32'd0 - select_ln285_1_reg_3935);

assign sub_ln581_1_fu_684_p2 = (12'd23 - F2_1_fu_666_p2);

assign sub_ln581_fu_594_p2 = (12'd23 - F2_fu_576_p2);

assign sub_ln944_1_fu_2268_p2 = (32'd32 - l_1_fu_2260_p3);

assign sub_ln944_fu_2112_p2 = (32'd32 - l_fu_2104_p3);

assign sub_ln947_1_fu_2353_p2 = ($signed(6'd57) - $signed(trunc_ln947_1_reg_3773));

assign sub_ln947_fu_2161_p2 = ($signed(6'd57) - $signed(trunc_ln947_reg_3722));

assign sub_ln958_1_fu_2482_p2 = (32'd25 - sub_ln944_1_reg_3766);

assign sub_ln958_fu_2292_p2 = (32'd25 - sub_ln944_reg_3715);

assign sub_ln964_1_fu_2536_p2 = (8'd9 - trunc_ln943_1_reg_3778);

assign sub_ln964_fu_2442_p2 = (8'd9 - trunc_ln943_reg_3727);

assign tmp185_cast_cast_fu_786_p3 = ((QUAN_INC_reg_3257[0:0] === 1'b1) ? 12'd2 : 12'd1);

assign tmp190_cast_cast_fu_917_p3 = ((QUAN_INC_1_reg_3317[0:0] === 1'b1) ? 12'd2 : 12'd1);

assign tmp_10_fu_612_p4 = {{sh_amt_fu_600_p3[11:5]}};

assign tmp_11_fu_754_p3 = bitcast_ln696_fu_750_p1[32'd31];

assign tmp_13_fu_1023_p3 = p_Val2_6_fu_1018_p2[32'd31];

assign tmp_17_fu_1561_p3 = pos1_reg_3368[32'd11];

assign tmp_19_fu_702_p4 = {{sh_amt_1_fu_690_p3[11:5]}};

assign tmp_20_fu_885_p3 = bitcast_ln696_2_fu_882_p1[32'd31];

assign tmp_22_fu_1265_p3 = p_Val2_12_fu_1260_p2[32'd31];

assign tmp_26_fu_1751_p3 = pos1_1_reg_3431[32'd11];

assign tmp_28_fu_2145_p4 = {{lsb_index_fu_2140_p2[31:1]}};

assign tmp_29_fu_2193_p3 = lsb_index_fu_2140_p2[32'd31];

assign tmp_2_fu_547_p3 = {{1'd1}, {trunc_ln565_reg_3197}};

assign tmp_32_fu_2337_p4 = {{lsb_index_1_fu_2332_p2[31:1]}};

assign tmp_33_fu_2385_p3 = lsb_index_1_fu_2332_p2[32'd31];

assign tmp_36_fu_2654_p4 = {{sh_amt_3_fu_2649_p2[8:5]}};

assign tmp_37_fu_2807_p3 = reg_V_reg_3833[32'd31];

assign tmp_39_fu_2888_p4 = {{sh_amt_5_fu_2883_p2[8:5]}};

assign tmp_3_fu_637_p3 = {{1'd1}, {trunc_ln565_1_reg_3221}};

assign tmp_40_fu_2998_p3 = reg_V_1_reg_3899[32'd31];

assign tmp_5_fu_2453_p3 = {{p_Result_27_reg_3681}, {add_ln964_fu_2447_p2}};

assign tmp_6_fu_2047_p3 = {{t_V_reg_307}, {2'd0}};

assign tmp_7_fu_2547_p3 = {{p_Result_30_reg_3732}, {add_ln964_1_fu_2541_p2}};

assign tmp_8_fu_2629_p3 = {{1'd1}, {trunc_ln270_reg_3843}};

assign tmp_9_fu_2863_p3 = {{1'd1}, {trunc_ln270_1_reg_3909}};

assign tmp_V_2_fu_2134_p2 = (32'd0 - p_Val2_1_fu_230);

assign tmp_V_4_fu_2089_p3 = ((p_Result_27_reg_3681[0:0] === 1'b1) ? tmp_V_reg_3687 : p_Val2_s_fu_226);

assign tmp_V_5_fu_2245_p3 = ((p_Result_30_reg_3732[0:0] === 1'b1) ? tmp_V_2_reg_3738 : p_Val2_1_fu_230);

assign tmp_V_fu_2071_p2 = (32'd0 - p_Val2_s_fu_226);

assign trunc_ln128_fu_2077_p1 = configReg_q0[3:0];

assign trunc_ln262_1_fu_2753_p1 = reg_V_1_fu_2746_p3[30:0];

assign trunc_ln262_fu_2581_p1 = reg_V_fu_2574_p3[30:0];

assign trunc_ln270_1_fu_2779_p1 = reg_V_1_fu_2746_p3[22:0];

assign trunc_ln270_fu_2607_p1 = reg_V_fu_2574_p3[22:0];

assign trunc_ln556_1_fu_518_p1 = ireg_V_1_fu_514_p1[62:0];

assign trunc_ln556_fu_488_p1 = ireg_V_fu_484_p1[62:0];

assign trunc_ln565_1_fu_540_p1 = ireg_V_1_fu_514_p1[51:0];

assign trunc_ln565_fu_510_p1 = ireg_V_fu_484_p1[51:0];

assign trunc_ln583_1_fu_698_p1 = p_Val2_21_fu_654_p3[31:0];

assign trunc_ln583_fu_608_p1 = p_Val2_20_fu_564_p3[31:0];

assign trunc_ln586_1_fu_878_p1 = ashr_ln586_1_fu_873_p2[31:0];

assign trunc_ln586_fu_746_p1 = ashr_ln586_fu_741_p2[31:0];

assign trunc_ln943_1_fu_2278_p1 = l_1_fu_2260_p3[7:0];

assign trunc_ln943_fu_2122_p1 = l_fu_2104_p3[7:0];

assign trunc_ln947_1_fu_2274_p1 = sub_ln944_1_fu_2268_p2[5:0];

assign trunc_ln947_fu_2118_p1 = sub_ln944_fu_2112_p2[5:0];

assign underflow_1_fu_1948_p2 = (xor_ln659_1_fu_1943_p2 & select_ln557_1_reg_3634);

assign underflow_fu_1856_p2 = (xor_ln659_fu_1851_p2 & select_ln557_reg_3609);

assign xor_ln100_fu_446_p2 = (lrclk_V_0_data_reg ^ 1'd1);

assign xor_ln105_1_fu_462_p2 = (or_ln100_fu_441_p2 ^ 1'd1);

assign xor_ln105_fu_451_p2 = (readyLch ^ 1'd1);

assign xor_ln278_1_fu_2910_p2 = (icmp_ln278_1_reg_3914 ^ 1'd1);

assign xor_ln278_fu_2676_p2 = (icmp_ln278_reg_3848 ^ 1'd1);

assign xor_ln282_1_fu_2932_p2 = (or_ln282_1_fu_2928_p2 ^ 1'd1);

assign xor_ln282_fu_2698_p2 = (or_ln282_fu_2694_p2 ^ 1'd1);

assign xor_ln284_1_fu_2964_p2 = (or_ln284_1_fu_2958_p2 ^ 1'd1);

assign xor_ln284_fu_2730_p2 = (or_ln284_fu_2724_p2 ^ 1'd1);

assign xor_ln285_1_fu_3036_p2 = (icmp_ln285_1_reg_3946 ^ 1'd1);

assign xor_ln285_fu_2845_p2 = (icmp_ln285_reg_3874 ^ 1'd1);

assign xor_ln340_1_fu_1958_p2 = (select_ln557_1_reg_3634 ^ 1'd1);

assign xor_ln340_fu_1866_p2 = (select_ln557_reg_3609 ^ 1'd1);

assign xor_ln403_1_fu_1310_p2 = (p_Result_25_reg_3419 ^ 1'd1);

assign xor_ln403_fu_1068_p2 = (p_Result_21_reg_3356 ^ 1'd1);

assign xor_ln416_1_fu_1273_p2 = (tmp_22_fu_1265_p3 ^ 1'd1);

assign xor_ln416_fu_1031_p2 = (tmp_13_fu_1023_p3 ^ 1'd1);

assign xor_ln571_1_fu_2010_p2 = (icmp_ln571_1_reg_3300 ^ 1'd1);

assign xor_ln571_fu_1918_p2 = (icmp_ln571_reg_3240 ^ 1'd1);

assign xor_ln582_1_fu_1286_p2 = (icmp_ln582_1_fu_1229_p2 ^ 1'd1);

assign xor_ln582_fu_1044_p2 = (icmp_ln582_fu_987_p2 ^ 1'd1);

assign xor_ln603_1_fu_1350_p2 = (1'd1 ^ and_ln603_4_fu_1345_p2);

assign xor_ln603_fu_1108_p2 = (1'd1 ^ and_ln603_1_fu_1103_p2);

assign xor_ln621_1_fu_1783_p2 = (icmp_ln621_1_reg_3553 ^ 1'd1);

assign xor_ln621_2_fu_1128_p2 = (tmp_15_reg_3375 ^ 1'd1);

assign xor_ln621_3_fu_1370_p2 = (tmp_24_reg_3438 ^ 1'd1);

assign xor_ln621_fu_1593_p2 = (icmp_ln621_reg_3488 ^ 1'd1);

assign xor_ln631_1_fu_1400_p2 = (tmp_25_reg_3444 ^ 1'd1);

assign xor_ln631_fu_1158_p2 = (tmp_16_reg_3381 ^ 1'd1);

assign xor_ln639_2_fu_1196_p2 = (icmp_ln631_reg_3386 ^ 1'd1);

assign xor_ln639_fu_1438_p2 = (icmp_ln631_1_reg_3449 ^ 1'd1);

assign xor_ln652_1_fu_1546_p2 = (select_ln631_reg_3509 ^ 1'd1);

assign xor_ln652_3_fu_1736_p2 = (select_ln631_1_reg_3574 ^ 1'd1);

assign xor_ln652_4_fu_1211_p2 = (1'd1 ^ and_ln403_fu_1055_p2);

assign xor_ln652_5_fu_1453_p2 = (1'd1 ^ and_ln403_3_fu_1297_p2);

assign xor_ln658_1_fu_1644_p2 = (p_Result_19_reg_3183 ^ 1'd1);

assign xor_ln658_2_fu_1627_p2 = (deleted_zeros_fu_1539_p3 ^ 1'd1);

assign xor_ln658_3_fu_1834_p2 = (p_Result_23_reg_3207 ^ 1'd1);

assign xor_ln658_fu_1817_p2 = (deleted_zeros_1_fu_1729_p3 ^ 1'd1);

assign xor_ln659_1_fu_1943_p2 = (1'd1 ^ and_ln659_2_reg_3646);

assign xor_ln659_fu_1851_p2 = (1'd1 ^ and_ln659_reg_3621);

assign xor_ln949_1_fu_2393_p2 = (tmp_33_fu_2385_p3 ^ 1'd1);

assign xor_ln949_fu_2201_p2 = (tmp_29_fu_2193_p3 ^ 1'd1);

assign zext_ln125_fu_2055_p1 = tmp_6_fu_2047_p3;

assign zext_ln215_fu_408_p1 = r_V_3_fu_398_p4;

assign zext_ln283_1_fu_2992_p1 = tmp_9_reg_3941;

assign zext_ln283_fu_2801_p1 = tmp_8_reg_3869;

assign zext_ln285_1_fu_3019_p1 = select_ln285_2_reg_3961;

assign zext_ln285_fu_2828_p1 = select_ln285_reg_3889;

assign zext_ln415_1_fu_1256_p1 = qb_1_fu_1250_p3;

assign zext_ln415_fu_1014_p1 = qb_fu_1008_p3;

assign zext_ln461_1_fu_634_p1 = exp_tmp_V_1_reg_3216;

assign zext_ln461_fu_544_p1 = exp_tmp_V_reg_3192;

assign zext_ln544_1_fu_474_p1 = r_V_3_reg_3087;

assign zext_ln544_2_fu_3054_p1 = ret_V_1_reg_3971;

assign zext_ln544_fu_418_p1 = ret_V_reg_3097;

assign zext_ln586_1_fu_869_p1 = $unsigned(sext_ln581_1_fu_861_p1);

assign zext_ln586_fu_737_p1 = $unsigned(sext_ln581_fu_729_p1);

assign zext_ln623_1_fu_1375_p1 = $unsigned(sext_ln618_1_fu_1362_p1);

assign zext_ln623_fu_1133_p1 = $unsigned(sext_ln618_fu_1120_p1);

assign zext_ln635_1_fu_972_p1 = $unsigned(sext_ln619_1_fu_946_p1);

assign zext_ln635_fu_841_p1 = $unsigned(sext_ln619_fu_815_p1);

assign zext_ln947_1_fu_2358_p1 = sub_ln947_1_fu_2353_p2;

assign zext_ln947_fu_2166_p1 = sub_ln947_fu_2161_p2;

always @ (posedge ap_clk) begin
    zext_ln215_reg_3092[30] <= 1'b0;
    zext_ln461_reg_3226[11] <= 1'b0;
    zext_ln461_1_reg_3286[11] <= 1'b0;
    zext_ln635_reg_3393[53:32] <= 22'b0000000000000000000000;
    zext_ln635_1_reg_3456[53:32] <= 22'b0000000000000000000000;
    or_ln_reg_3743[31:1] <= 31'b0000000000000000000000000000000;
    or_ln949_1_reg_3793[31:1] <= 31'b0000000000000000000000000000000;
    tmp_8_reg_3869[23] <= 1'b1;
    tmp_9_reg_3941[23] <= 1'b1;
end

endmodule //pynq_dsp_hls
