// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pynq_dsp_hls.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pynq_dsp_hls::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pynq_dsp_hls::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state1 = "1";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state2 = "10";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state3 = "100";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state4 = "1000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state5 = "10000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state6 = "100000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state7 = "1000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state8 = "10000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state9 = "100000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state10 = "1000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state11 = "10000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state12 = "100000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<24> pynq_dsp_hls::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> pynq_dsp_hls::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool pynq_dsp_hls::ap_const_boolean_1 = true;
const sc_lv<1> pynq_dsp_hls::ap_const_lv1_0 = "0";
const sc_lv<32> pynq_dsp_hls::ap_const_lv32_1 = "1";
const sc_lv<32> pynq_dsp_hls::ap_const_lv32_8 = "1000";
const sc_lv<32> pynq_dsp_hls::ap_const_lv32_9 = "1001";
const sc_lv<32> pynq_dsp_hls::ap_const_lv32_10 = "10000";
const sc_lv<32> pynq_dsp_hls::ap_const_lv32_11 = "10001";
const sc_lv<32> pynq_dsp_hls::ap_const_lv32_12 = "10010";
const sc_lv<32> pynq_dsp_hls::ap_const_lv32_17 = "10111";
const int pynq_dsp_hls::C_S_AXI_DATA_WIDTH = "100000";
const int pynq_dsp_hls::C_M_AXI_PHYSMEMPTR_V_TARGET_ADDR = "0000000000000000000000000000000000000000000000000000000000000000";
const int pynq_dsp_hls::C_M_AXI_PHYSMEMPTR_V_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int pynq_dsp_hls::C_M_AXI_PHYSMEMPTR_V_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int pynq_dsp_hls::C_M_AXI_PHYSMEMPTR_V_CACHE_VALUE = "11";
const int pynq_dsp_hls::C_M_AXI_DATA_WIDTH = "100000";
const bool pynq_dsp_hls::ap_const_boolean_0 = false;
const sc_lv<32> pynq_dsp_hls::ap_const_lv32_F = "1111";
const sc_lv<1> pynq_dsp_hls::ap_const_lv1_1 = "1";
const sc_lv<3> pynq_dsp_hls::ap_const_lv3_0 = "000";
const sc_lv<2> pynq_dsp_hls::ap_const_lv2_0 = "00";
const sc_lv<4> pynq_dsp_hls::ap_const_lv4_0 = "0000";
const sc_lv<32> pynq_dsp_hls::ap_const_lv32_2 = "10";
const sc_lv<4> pynq_dsp_hls::ap_const_lv4_F = "1111";
const sc_lv<32> pynq_dsp_hls::ap_const_lv32_1F = "11111";
const sc_lv<31> pynq_dsp_hls::ap_const_lv31_4 = "100";
const sc_lv<31> pynq_dsp_hls::ap_const_lv31_2 = "10";

pynq_dsp_hls::pynq_dsp_hls(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pynq_dsp_hls_AXILiteS_s_axi_U = new pynq_dsp_hls_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("pynq_dsp_hls_AXILiteS_s_axi_U");
    pynq_dsp_hls_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    pynq_dsp_hls_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    pynq_dsp_hls_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    pynq_dsp_hls_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    pynq_dsp_hls_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    pynq_dsp_hls_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    pynq_dsp_hls_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    pynq_dsp_hls_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    pynq_dsp_hls_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    pynq_dsp_hls_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    pynq_dsp_hls_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    pynq_dsp_hls_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    pynq_dsp_hls_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    pynq_dsp_hls_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    pynq_dsp_hls_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    pynq_dsp_hls_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    pynq_dsp_hls_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    pynq_dsp_hls_AXILiteS_s_axi_U->ACLK(ap_clk);
    pynq_dsp_hls_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    pynq_dsp_hls_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    pynq_dsp_hls_AXILiteS_s_axi_U->ap_start(ap_start);
    pynq_dsp_hls_AXILiteS_s_axi_U->interrupt(interrupt);
    pynq_dsp_hls_AXILiteS_s_axi_U->ap_ready(ap_ready);
    pynq_dsp_hls_AXILiteS_s_axi_U->ap_done(ap_done);
    pynq_dsp_hls_AXILiteS_s_axi_U->ap_idle(ap_idle);
    pynq_dsp_hls_AXILiteS_s_axi_U->basePhysAddr_V(basePhysAddr_V);
    pynq_dsp_hls_physMemPtr_V_m_axi_U = new pynq_dsp_hls_physMemPtr_V_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_PHYSMEMPTR_V_ID_WIDTH,C_M_AXI_PHYSMEMPTR_V_ADDR_WIDTH,C_M_AXI_PHYSMEMPTR_V_DATA_WIDTH,C_M_AXI_PHYSMEMPTR_V_AWUSER_WIDTH,C_M_AXI_PHYSMEMPTR_V_ARUSER_WIDTH,C_M_AXI_PHYSMEMPTR_V_WUSER_WIDTH,C_M_AXI_PHYSMEMPTR_V_RUSER_WIDTH,C_M_AXI_PHYSMEMPTR_V_BUSER_WIDTH,C_M_AXI_PHYSMEMPTR_V_TARGET_ADDR,C_M_AXI_PHYSMEMPTR_V_USER_VALUE,C_M_AXI_PHYSMEMPTR_V_PROT_VALUE,C_M_AXI_PHYSMEMPTR_V_CACHE_VALUE>("pynq_dsp_hls_physMemPtr_V_m_axi_U");
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWVALID(m_axi_physMemPtr_V_AWVALID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWREADY(m_axi_physMemPtr_V_AWREADY);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWADDR(m_axi_physMemPtr_V_AWADDR);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWID(m_axi_physMemPtr_V_AWID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWLEN(m_axi_physMemPtr_V_AWLEN);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWSIZE(m_axi_physMemPtr_V_AWSIZE);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWBURST(m_axi_physMemPtr_V_AWBURST);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWLOCK(m_axi_physMemPtr_V_AWLOCK);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWCACHE(m_axi_physMemPtr_V_AWCACHE);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWPROT(m_axi_physMemPtr_V_AWPROT);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWQOS(m_axi_physMemPtr_V_AWQOS);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWREGION(m_axi_physMemPtr_V_AWREGION);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->AWUSER(m_axi_physMemPtr_V_AWUSER);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->WVALID(m_axi_physMemPtr_V_WVALID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->WREADY(m_axi_physMemPtr_V_WREADY);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->WDATA(m_axi_physMemPtr_V_WDATA);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->WSTRB(m_axi_physMemPtr_V_WSTRB);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->WLAST(m_axi_physMemPtr_V_WLAST);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->WID(m_axi_physMemPtr_V_WID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->WUSER(m_axi_physMemPtr_V_WUSER);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARVALID(m_axi_physMemPtr_V_ARVALID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARREADY(m_axi_physMemPtr_V_ARREADY);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARADDR(m_axi_physMemPtr_V_ARADDR);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARID(m_axi_physMemPtr_V_ARID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARLEN(m_axi_physMemPtr_V_ARLEN);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARSIZE(m_axi_physMemPtr_V_ARSIZE);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARBURST(m_axi_physMemPtr_V_ARBURST);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARLOCK(m_axi_physMemPtr_V_ARLOCK);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARCACHE(m_axi_physMemPtr_V_ARCACHE);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARPROT(m_axi_physMemPtr_V_ARPROT);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARQOS(m_axi_physMemPtr_V_ARQOS);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARREGION(m_axi_physMemPtr_V_ARREGION);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARUSER(m_axi_physMemPtr_V_ARUSER);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->RVALID(m_axi_physMemPtr_V_RVALID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->RREADY(m_axi_physMemPtr_V_RREADY);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->RDATA(m_axi_physMemPtr_V_RDATA);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->RLAST(m_axi_physMemPtr_V_RLAST);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->RID(m_axi_physMemPtr_V_RID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->RUSER(m_axi_physMemPtr_V_RUSER);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->RRESP(m_axi_physMemPtr_V_RRESP);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->BVALID(m_axi_physMemPtr_V_BVALID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->BREADY(m_axi_physMemPtr_V_BREADY);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->BRESP(m_axi_physMemPtr_V_BRESP);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->BID(m_axi_physMemPtr_V_BID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->BUSER(m_axi_physMemPtr_V_BUSER);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ACLK(ap_clk);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ARESET(ap_rst_n_inv);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->ACLK_EN(ap_var_for_const0);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARVALID(physMemPtr_V_ARVALID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARREADY(physMemPtr_V_ARREADY);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARADDR(physMemPtr_V_ARADDR);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARID(ap_var_for_const1);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARLEN(physMemPtr_V_ARLEN);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARSIZE(ap_var_for_const2);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARLOCK(ap_var_for_const3);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARCACHE(ap_var_for_const4);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARQOS(ap_var_for_const4);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARPROT(ap_var_for_const2);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARUSER(ap_var_for_const1);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARBURST(ap_var_for_const3);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_ARREGION(ap_var_for_const4);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_RVALID(physMemPtr_V_RVALID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_RREADY(physMemPtr_V_RREADY);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_RDATA(physMemPtr_V_RDATA);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_RID(physMemPtr_V_RID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_RUSER(physMemPtr_V_RUSER);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_RRESP(physMemPtr_V_RRESP);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_RLAST(physMemPtr_V_RLAST);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWVALID(physMemPtr_V_AWVALID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWREADY(physMemPtr_V_AWREADY);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWADDR(physMemPtr_V_AWADDR);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWID(ap_var_for_const1);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWLEN(ap_var_for_const5);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWSIZE(ap_var_for_const2);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWLOCK(ap_var_for_const3);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWCACHE(ap_var_for_const4);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWQOS(ap_var_for_const4);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWPROT(ap_var_for_const2);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWUSER(ap_var_for_const1);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWBURST(ap_var_for_const3);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_AWREGION(ap_var_for_const4);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_WVALID(physMemPtr_V_WVALID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_WREADY(physMemPtr_V_WREADY);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_WDATA(reg_182);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_WID(ap_var_for_const1);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_WUSER(ap_var_for_const1);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_WLAST(ap_var_for_const6);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_WSTRB(ap_var_for_const7);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_BVALID(physMemPtr_V_BVALID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_BREADY(physMemPtr_V_BREADY);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_BRESP(physMemPtr_V_BRESP);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_BID(physMemPtr_V_BID);
    pynq_dsp_hls_physMemPtr_V_m_axi_U->I_BUSER(physMemPtr_V_BUSER);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln101_fu_247_p2);
    sensitive << ( lrclk_V_0_data_reg );
    sensitive << ( xor_ln101_fu_241_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state10_io);
    sensitive << ( physMemPtr_V_ARREADY );
    sensitive << ( ap_predicate_op65_readreq_state10 );

    SC_METHOD(thread_ap_block_state24);
    sensitive << ( physMemPtr_V_BVALID );
    sensitive << ( ap_predicate_op84_writeresp_state24 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( physMemPtr_V_BVALID );
    sensitive << ( ap_predicate_op84_writeresp_state24 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_readyLch_flag_1_phi_fu_172_p6);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( icmp_ln761_reg_335 );
    sensitive << ( or_ln101_reg_344 );
    sensitive << ( readyLch_flag_1_reg_168 );

    SC_METHOD(thread_ap_phi_mux_readyRch_flag_1_phi_fu_142_p6);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( icmp_ln761_reg_335 );
    sensitive << ( or_ln101_reg_344 );
    sensitive << ( readyRch_flag_1_reg_138 );

    SC_METHOD(thread_ap_phi_mux_readyRch_new_1_phi_fu_157_p6);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( icmp_ln761_reg_335 );
    sensitive << ( or_ln101_reg_344 );
    sensitive << ( readyRch_new_1_reg_152 );

    SC_METHOD(thread_ap_predicate_op65_readreq_state10);
    sensitive << ( icmp_ln761_fu_218_p2 );
    sensitive << ( or_ln101_fu_258_p2 );

    SC_METHOD(thread_ap_predicate_op84_writeresp_state24);
    sensitive << ( icmp_ln761_reg_335 );
    sensitive << ( or_ln101_reg_344 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( physMemPtr_V_BVALID );
    sensitive << ( ap_predicate_op84_writeresp_state24 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_icmp_ln761_fu_218_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( status_V_reg_330 );
    sensitive << ( ap_block_state10_io );

    SC_METHOD(thread_lrclk_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( physMemPtr_V_ARREADY );
    sensitive << ( physMemPtr_V_BVALID );
    sensitive << ( ap_predicate_op84_writeresp_state24 );

    SC_METHOD(thread_or_ln101_fu_258_p2);
    sensitive << ( and_ln101_fu_247_p2 );
    sensitive << ( xor_ln101_1_fu_252_p2 );

    SC_METHOD(thread_or_ln96_fu_231_p2);
    sensitive << ( lrclk_V_0_data_reg );
    sensitive << ( readyRch );

    SC_METHOD(thread_physMemPtr_V_ARADDR);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( physMemPtr_V_ARREADY );
    sensitive << ( ap_predicate_op65_readreq_state10 );
    sensitive << ( ap_block_state10_io );
    sensitive << ( zext_ln544_fu_208_p1 );
    sensitive << ( zext_ln544_1_fu_264_p1 );

    SC_METHOD(thread_physMemPtr_V_ARLEN);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( physMemPtr_V_ARREADY );
    sensitive << ( ap_predicate_op65_readreq_state10 );
    sensitive << ( ap_block_state10_io );

    SC_METHOD(thread_physMemPtr_V_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( physMemPtr_V_ARREADY );
    sensitive << ( ap_predicate_op65_readreq_state10 );
    sensitive << ( ap_block_state10_io );

    SC_METHOD(thread_physMemPtr_V_AWADDR);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( physMemPtr_V_AWREADY );
    sensitive << ( physMemPtr_V_RVALID );
    sensitive << ( zext_ln544_2_fu_279_p1 );

    SC_METHOD(thread_physMemPtr_V_AWVALID);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( physMemPtr_V_AWREADY );
    sensitive << ( physMemPtr_V_RVALID );

    SC_METHOD(thread_physMemPtr_V_BREADY);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( physMemPtr_V_BVALID );
    sensitive << ( ap_predicate_op84_writeresp_state24 );

    SC_METHOD(thread_physMemPtr_V_RREADY);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( physMemPtr_V_AWREADY );
    sensitive << ( physMemPtr_V_WREADY );
    sensitive << ( physMemPtr_V_RVALID );

    SC_METHOD(thread_physMemPtr_V_WVALID);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( physMemPtr_V_WREADY );
    sensitive << ( physMemPtr_V_RVALID );

    SC_METHOD(thread_physMemPtr_V_blk_n_AR);
    sensitive << ( m_axi_physMemPtr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln761_fu_218_p2 );
    sensitive << ( or_ln101_fu_258_p2 );

    SC_METHOD(thread_physMemPtr_V_blk_n_AW);
    sensitive << ( m_axi_physMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_physMemPtr_V_blk_n_B);
    sensitive << ( m_axi_physMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( icmp_ln761_reg_335 );
    sensitive << ( or_ln101_reg_344 );

    SC_METHOD(thread_physMemPtr_V_blk_n_R);
    sensitive << ( m_axi_physMemPtr_V_RVALID );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_physMemPtr_V_blk_n_W);
    sensitive << ( m_axi_physMemPtr_V_WREADY );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_r_V_fu_188_p4);
    sensitive << ( basePhysAddr_V );

    SC_METHOD(thread_ret_V_1_fu_274_p2);
    sensitive << ( zext_ln215_reg_306 );

    SC_METHOD(thread_ret_V_fu_202_p2);
    sensitive << ( zext_ln215_fu_198_p1 );

    SC_METHOD(thread_xor_ln101_1_fu_252_p2);
    sensitive << ( or_ln96_fu_231_p2 );

    SC_METHOD(thread_xor_ln101_fu_241_p2);
    sensitive << ( readyLch );

    SC_METHOD(thread_xor_ln96_fu_236_p2);
    sensitive << ( lrclk_V_0_data_reg );

    SC_METHOD(thread_zext_ln215_fu_198_p1);
    sensitive << ( r_V_fu_188_p4 );

    SC_METHOD(thread_zext_ln544_1_fu_264_p1);
    sensitive << ( r_V_reg_301 );

    SC_METHOD(thread_zext_ln544_2_fu_279_p1);
    sensitive << ( ret_V_1_reg_354 );

    SC_METHOD(thread_zext_ln544_fu_208_p1);
    sensitive << ( ret_V_reg_311 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln761_fu_218_p2 );
    sensitive << ( or_ln101_fu_258_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( physMemPtr_V_AWREADY );
    sensitive << ( physMemPtr_V_WREADY );
    sensitive << ( physMemPtr_V_ARREADY );
    sensitive << ( physMemPtr_V_RVALID );
    sensitive << ( physMemPtr_V_BVALID );
    sensitive << ( ap_block_state10_io );
    sensitive << ( ap_predicate_op84_writeresp_state24 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const7);

    ap_CS_fsm = "000000000000000000000001";
    lrclk_V_0_data_reg = "0";
    lrclk_V_0_vld_reg = SC_LOGIC_0;
    readyRch = "0";
    readyLch = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pynq_dsp_hls_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, lrclk_V, "(port)lrclk_V");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWVALID, "(port)m_axi_physMemPtr_V_AWVALID");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWREADY, "(port)m_axi_physMemPtr_V_AWREADY");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWADDR, "(port)m_axi_physMemPtr_V_AWADDR");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWID, "(port)m_axi_physMemPtr_V_AWID");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWLEN, "(port)m_axi_physMemPtr_V_AWLEN");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWSIZE, "(port)m_axi_physMemPtr_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWBURST, "(port)m_axi_physMemPtr_V_AWBURST");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWLOCK, "(port)m_axi_physMemPtr_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWCACHE, "(port)m_axi_physMemPtr_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWPROT, "(port)m_axi_physMemPtr_V_AWPROT");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWQOS, "(port)m_axi_physMemPtr_V_AWQOS");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWREGION, "(port)m_axi_physMemPtr_V_AWREGION");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_AWUSER, "(port)m_axi_physMemPtr_V_AWUSER");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_WVALID, "(port)m_axi_physMemPtr_V_WVALID");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_WREADY, "(port)m_axi_physMemPtr_V_WREADY");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_WDATA, "(port)m_axi_physMemPtr_V_WDATA");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_WSTRB, "(port)m_axi_physMemPtr_V_WSTRB");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_WLAST, "(port)m_axi_physMemPtr_V_WLAST");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_WID, "(port)m_axi_physMemPtr_V_WID");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_WUSER, "(port)m_axi_physMemPtr_V_WUSER");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARVALID, "(port)m_axi_physMemPtr_V_ARVALID");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARREADY, "(port)m_axi_physMemPtr_V_ARREADY");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARADDR, "(port)m_axi_physMemPtr_V_ARADDR");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARID, "(port)m_axi_physMemPtr_V_ARID");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARLEN, "(port)m_axi_physMemPtr_V_ARLEN");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARSIZE, "(port)m_axi_physMemPtr_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARBURST, "(port)m_axi_physMemPtr_V_ARBURST");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARLOCK, "(port)m_axi_physMemPtr_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARCACHE, "(port)m_axi_physMemPtr_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARPROT, "(port)m_axi_physMemPtr_V_ARPROT");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARQOS, "(port)m_axi_physMemPtr_V_ARQOS");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARREGION, "(port)m_axi_physMemPtr_V_ARREGION");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_ARUSER, "(port)m_axi_physMemPtr_V_ARUSER");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_RVALID, "(port)m_axi_physMemPtr_V_RVALID");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_RREADY, "(port)m_axi_physMemPtr_V_RREADY");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_RDATA, "(port)m_axi_physMemPtr_V_RDATA");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_RLAST, "(port)m_axi_physMemPtr_V_RLAST");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_RID, "(port)m_axi_physMemPtr_V_RID");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_RUSER, "(port)m_axi_physMemPtr_V_RUSER");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_RRESP, "(port)m_axi_physMemPtr_V_RRESP");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_BVALID, "(port)m_axi_physMemPtr_V_BVALID");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_BREADY, "(port)m_axi_physMemPtr_V_BREADY");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_BRESP, "(port)m_axi_physMemPtr_V_BRESP");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_BID, "(port)m_axi_physMemPtr_V_BID");
    sc_trace(mVcdFile, m_axi_physMemPtr_V_BUSER, "(port)m_axi_physMemPtr_V_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, lrclk_V_0_data_reg, "lrclk_V_0_data_reg");
    sc_trace(mVcdFile, lrclk_V_0_vld_reg, "lrclk_V_0_vld_reg");
    sc_trace(mVcdFile, lrclk_V_0_ack_out, "lrclk_V_0_ack_out");
    sc_trace(mVcdFile, basePhysAddr_V, "basePhysAddr_V");
    sc_trace(mVcdFile, readyRch, "readyRch");
    sc_trace(mVcdFile, readyLch, "readyLch");
    sc_trace(mVcdFile, physMemPtr_V_blk_n_AR, "physMemPtr_V_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, physMemPtr_V_blk_n_R, "physMemPtr_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln761_fu_218_p2, "icmp_ln761_fu_218_p2");
    sc_trace(mVcdFile, or_ln101_fu_258_p2, "or_ln101_fu_258_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, physMemPtr_V_blk_n_AW, "physMemPtr_V_blk_n_AW");
    sc_trace(mVcdFile, physMemPtr_V_blk_n_W, "physMemPtr_V_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, physMemPtr_V_blk_n_B, "physMemPtr_V_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, icmp_ln761_reg_335, "icmp_ln761_reg_335");
    sc_trace(mVcdFile, or_ln101_reg_344, "or_ln101_reg_344");
    sc_trace(mVcdFile, physMemPtr_V_AWVALID, "physMemPtr_V_AWVALID");
    sc_trace(mVcdFile, physMemPtr_V_AWREADY, "physMemPtr_V_AWREADY");
    sc_trace(mVcdFile, physMemPtr_V_AWADDR, "physMemPtr_V_AWADDR");
    sc_trace(mVcdFile, physMemPtr_V_WVALID, "physMemPtr_V_WVALID");
    sc_trace(mVcdFile, physMemPtr_V_WREADY, "physMemPtr_V_WREADY");
    sc_trace(mVcdFile, physMemPtr_V_ARVALID, "physMemPtr_V_ARVALID");
    sc_trace(mVcdFile, physMemPtr_V_ARREADY, "physMemPtr_V_ARREADY");
    sc_trace(mVcdFile, physMemPtr_V_ARADDR, "physMemPtr_V_ARADDR");
    sc_trace(mVcdFile, physMemPtr_V_ARLEN, "physMemPtr_V_ARLEN");
    sc_trace(mVcdFile, physMemPtr_V_RVALID, "physMemPtr_V_RVALID");
    sc_trace(mVcdFile, physMemPtr_V_RREADY, "physMemPtr_V_RREADY");
    sc_trace(mVcdFile, physMemPtr_V_RDATA, "physMemPtr_V_RDATA");
    sc_trace(mVcdFile, physMemPtr_V_RLAST, "physMemPtr_V_RLAST");
    sc_trace(mVcdFile, physMemPtr_V_RID, "physMemPtr_V_RID");
    sc_trace(mVcdFile, physMemPtr_V_RUSER, "physMemPtr_V_RUSER");
    sc_trace(mVcdFile, physMemPtr_V_RRESP, "physMemPtr_V_RRESP");
    sc_trace(mVcdFile, physMemPtr_V_BVALID, "physMemPtr_V_BVALID");
    sc_trace(mVcdFile, physMemPtr_V_BREADY, "physMemPtr_V_BREADY");
    sc_trace(mVcdFile, physMemPtr_V_BRESP, "physMemPtr_V_BRESP");
    sc_trace(mVcdFile, physMemPtr_V_BID, "physMemPtr_V_BID");
    sc_trace(mVcdFile, physMemPtr_V_BUSER, "physMemPtr_V_BUSER");
    sc_trace(mVcdFile, reg_182, "reg_182");
    sc_trace(mVcdFile, r_V_fu_188_p4, "r_V_fu_188_p4");
    sc_trace(mVcdFile, r_V_reg_301, "r_V_reg_301");
    sc_trace(mVcdFile, zext_ln215_fu_198_p1, "zext_ln215_fu_198_p1");
    sc_trace(mVcdFile, zext_ln215_reg_306, "zext_ln215_reg_306");
    sc_trace(mVcdFile, ret_V_fu_202_p2, "ret_V_fu_202_p2");
    sc_trace(mVcdFile, ret_V_reg_311, "ret_V_reg_311");
    sc_trace(mVcdFile, status_V_reg_330, "status_V_reg_330");
    sc_trace(mVcdFile, ap_predicate_op65_readreq_state10, "ap_predicate_op65_readreq_state10");
    sc_trace(mVcdFile, ap_block_state10_io, "ap_block_state10_io");
    sc_trace(mVcdFile, xor_ln96_fu_236_p2, "xor_ln96_fu_236_p2");
    sc_trace(mVcdFile, ret_V_1_fu_274_p2, "ret_V_1_fu_274_p2");
    sc_trace(mVcdFile, ret_V_1_reg_354, "ret_V_1_reg_354");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_phi_mux_readyRch_flag_1_phi_fu_142_p6, "ap_phi_mux_readyRch_flag_1_phi_fu_142_p6");
    sc_trace(mVcdFile, readyRch_flag_1_reg_138, "readyRch_flag_1_reg_138");
    sc_trace(mVcdFile, ap_predicate_op84_writeresp_state24, "ap_predicate_op84_writeresp_state24");
    sc_trace(mVcdFile, ap_block_state24, "ap_block_state24");
    sc_trace(mVcdFile, ap_phi_mux_readyRch_new_1_phi_fu_157_p6, "ap_phi_mux_readyRch_new_1_phi_fu_157_p6");
    sc_trace(mVcdFile, readyRch_new_1_reg_152, "readyRch_new_1_reg_152");
    sc_trace(mVcdFile, ap_phi_mux_readyLch_flag_1_phi_fu_172_p6, "ap_phi_mux_readyLch_flag_1_phi_fu_172_p6");
    sc_trace(mVcdFile, readyLch_flag_1_reg_168, "readyLch_flag_1_reg_168");
    sc_trace(mVcdFile, zext_ln544_fu_208_p1, "zext_ln544_fu_208_p1");
    sc_trace(mVcdFile, zext_ln544_1_fu_264_p1, "zext_ln544_1_fu_264_p1");
    sc_trace(mVcdFile, zext_ln544_2_fu_279_p1, "zext_ln544_2_fu_279_p1");
    sc_trace(mVcdFile, xor_ln101_fu_241_p2, "xor_ln101_fu_241_p2");
    sc_trace(mVcdFile, or_ln96_fu_231_p2, "or_ln96_fu_231_p2");
    sc_trace(mVcdFile, and_ln101_fu_247_p2, "and_ln101_fu_247_p2");
    sc_trace(mVcdFile, xor_ln101_1_fu_252_p2, "xor_ln101_1_fu_252_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("pynq_dsp_hls.hdltvin.dat");
    mHdltvoutHandle.open("pynq_dsp_hls.hdltvout.dat");
}

pynq_dsp_hls::~pynq_dsp_hls() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete pynq_dsp_hls_AXILiteS_s_axi_U;
    delete pynq_dsp_hls_physMemPtr_V_m_axi_U;
}

void pynq_dsp_hls::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void pynq_dsp_hls::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void pynq_dsp_hls::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void pynq_dsp_hls::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv3_0;
}

void pynq_dsp_hls::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv2_0;
}

void pynq_dsp_hls::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv4_0;
}

void pynq_dsp_hls::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv32_2;
}

void pynq_dsp_hls::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv4_F;
}

void pynq_dsp_hls::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_fu_218_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(or_ln101_fu_258_p2.read(), ap_const_lv1_1))) {
        readyLch_flag_1_reg_168 = xor_ln96_fu_236_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_reg_335.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_ln101_reg_344.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read())))) {
        readyLch_flag_1_reg_168 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(icmp_ln761_fu_218_p2.read(), ap_const_lv1_1))) {
        readyLch_flag_1_reg_168 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_fu_218_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(or_ln101_fu_258_p2.read(), ap_const_lv1_1))) {
        readyRch_flag_1_reg_138 = lrclk_V_0_data_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_reg_335.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_ln101_reg_344.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read())))) {
        readyRch_flag_1_reg_138 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(icmp_ln761_fu_218_p2.read(), ap_const_lv1_1))) {
        readyRch_flag_1_reg_138 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_fu_218_p2.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(or_ln101_fu_258_p2.read(), ap_const_lv1_1))) {
        readyRch_new_1_reg_152 = ap_const_lv1_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_reg_335.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_ln101_reg_344.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read())))) {
        readyRch_new_1_reg_152 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
        icmp_ln761_reg_335 = icmp_ln761_fu_218_p2.read();
    }
    if (((!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, lrclk_V_0_vld_reg.read())) || (!(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, lrclk_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, lrclk_V_0_ack_out.read())))) {
        lrclk_V_0_data_reg = lrclk_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_fu_218_p2.read()) && esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
        or_ln101_reg_344 = or_ln101_fu_258_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_V_reg_301 = basePhysAddr_V.read().range(31, 2);
        ret_V_reg_311 = ret_V_fu_202_p2.read();
        zext_ln215_reg_306 = zext_ln215_fu_198_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_readyLch_flag_1_phi_fu_172_p6.read()))) {
        readyLch = ap_phi_mux_readyRch_new_1_phi_fu_157_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read())) && esl_seteq<1,1,1>(ap_phi_mux_readyRch_flag_1_phi_fu_142_p6.read(), ap_const_lv1_1))) {
        readyRch = ap_phi_mux_readyRch_new_1_phi_fu_157_p6.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_AWREADY.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
  !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_WREADY.read()))))) {
        reg_182 = physMemPtr_V_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ret_V_1_reg_354 = ret_V_1_fu_274_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(physMemPtr_V_RVALID.read(), ap_const_logic_1))) {
        status_V_reg_330 = physMemPtr_V_RDATA.read();
    }
}

void pynq_dsp_hls::thread_and_ln101_fu_247_p2() {
    and_ln101_fu_247_p2 = (lrclk_V_0_data_reg.read() & xor_ln101_fu_241_p2.read());
}

void pynq_dsp_hls::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pynq_dsp_hls::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void pynq_dsp_hls::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void pynq_dsp_hls::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void pynq_dsp_hls::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void pynq_dsp_hls::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void pynq_dsp_hls::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pynq_dsp_hls::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void pynq_dsp_hls::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void pynq_dsp_hls::thread_ap_block_state10_io() {
    ap_block_state10_io = (esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_ARREADY.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op65_readreq_state10.read()));
}

void pynq_dsp_hls::thread_ap_block_state24() {
    ap_block_state24 = (esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read()));
}

void pynq_dsp_hls::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pynq_dsp_hls::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pynq_dsp_hls::thread_ap_phi_mux_readyLch_flag_1_phi_fu_172_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_reg_335.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln101_reg_344.read()))) {
        ap_phi_mux_readyLch_flag_1_phi_fu_172_p6 = ap_const_lv1_1;
    } else {
        ap_phi_mux_readyLch_flag_1_phi_fu_172_p6 = readyLch_flag_1_reg_168.read();
    }
}

void pynq_dsp_hls::thread_ap_phi_mux_readyRch_flag_1_phi_fu_142_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_reg_335.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln101_reg_344.read()))) {
        ap_phi_mux_readyRch_flag_1_phi_fu_142_p6 = ap_const_lv1_1;
    } else {
        ap_phi_mux_readyRch_flag_1_phi_fu_142_p6 = readyRch_flag_1_reg_138.read();
    }
}

void pynq_dsp_hls::thread_ap_phi_mux_readyRch_new_1_phi_fu_157_p6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_reg_335.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln101_reg_344.read()))) {
        ap_phi_mux_readyRch_new_1_phi_fu_157_p6 = ap_const_lv1_0;
    } else {
        ap_phi_mux_readyRch_new_1_phi_fu_157_p6 = readyRch_new_1_reg_152.read();
    }
}

void pynq_dsp_hls::thread_ap_predicate_op65_readreq_state10() {
    ap_predicate_op65_readreq_state10 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_fu_218_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln101_fu_258_p2.read()));
}

void pynq_dsp_hls::thread_ap_predicate_op84_writeresp_state24() {
    ap_predicate_op84_writeresp_state24 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_reg_335.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln101_reg_344.read()));
}

void pynq_dsp_hls::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pynq_dsp_hls::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void pynq_dsp_hls::thread_icmp_ln761_fu_218_p2() {
    icmp_ln761_fu_218_p2 = (!status_V_reg_330.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(status_V_reg_330.read() == ap_const_lv32_0);
}

void pynq_dsp_hls::thread_lrclk_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(physMemPtr_V_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read()))))) {
        lrclk_V_0_ack_out = ap_const_logic_1;
    } else {
        lrclk_V_0_ack_out = ap_const_logic_0;
    }
}

void pynq_dsp_hls::thread_or_ln101_fu_258_p2() {
    or_ln101_fu_258_p2 = (and_ln101_fu_247_p2.read() | xor_ln101_1_fu_252_p2.read());
}

void pynq_dsp_hls::thread_or_ln96_fu_231_p2() {
    or_ln96_fu_231_p2 = (readyRch.read() | lrclk_V_0_data_reg.read());
}

void pynq_dsp_hls::thread_physMemPtr_V_ARADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op65_readreq_state10.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
        physMemPtr_V_ARADDR =  (sc_lv<32>) (zext_ln544_1_fu_264_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(physMemPtr_V_ARREADY.read(), ap_const_logic_1))) {
        physMemPtr_V_ARADDR =  (sc_lv<32>) (zext_ln544_fu_208_p1.read());
    } else {
        physMemPtr_V_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void pynq_dsp_hls::thread_physMemPtr_V_ARLEN() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op65_readreq_state10.read()) && 
         esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
        physMemPtr_V_ARLEN = ap_const_lv32_2;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(physMemPtr_V_ARREADY.read(), ap_const_logic_1))) {
        physMemPtr_V_ARLEN = ap_const_lv32_1;
    } else {
        physMemPtr_V_ARLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void pynq_dsp_hls::thread_physMemPtr_V_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(physMemPtr_V_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op65_readreq_state10.read()) && 
          esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0)))) {
        physMemPtr_V_ARVALID = ap_const_logic_1;
    } else {
        physMemPtr_V_ARVALID = ap_const_logic_0;
    }
}

void pynq_dsp_hls::thread_physMemPtr_V_AWADDR() {
    physMemPtr_V_AWADDR =  (sc_lv<32>) (zext_ln544_2_fu_279_p1.read());
}

void pynq_dsp_hls::thread_physMemPtr_V_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_AWREADY.read())))) {
        physMemPtr_V_AWVALID = ap_const_logic_1;
    } else {
        physMemPtr_V_AWVALID = ap_const_logic_0;
    }
}

void pynq_dsp_hls::thread_physMemPtr_V_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read())))) {
        physMemPtr_V_BREADY = ap_const_logic_1;
    } else {
        physMemPtr_V_BREADY = ap_const_logic_0;
    }
}

void pynq_dsp_hls::thread_physMemPtr_V_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_AWREADY.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_WREADY.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(physMemPtr_V_RVALID.read(), ap_const_logic_1)))) {
        physMemPtr_V_RREADY = ap_const_logic_1;
    } else {
        physMemPtr_V_RREADY = ap_const_logic_0;
    }
}

void pynq_dsp_hls::thread_physMemPtr_V_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_WREADY.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(physMemPtr_V_WREADY.read(), ap_const_logic_1)))) {
        physMemPtr_V_WVALID = ap_const_logic_1;
    } else {
        physMemPtr_V_WVALID = ap_const_logic_0;
    }
}

void pynq_dsp_hls::thread_physMemPtr_V_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_fu_218_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln101_fu_258_p2.read())))) {
        physMemPtr_V_blk_n_AR = m_axi_physMemPtr_V_ARREADY.read();
    } else {
        physMemPtr_V_blk_n_AR = ap_const_logic_1;
    }
}

void pynq_dsp_hls::thread_physMemPtr_V_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        physMemPtr_V_blk_n_AW = m_axi_physMemPtr_V_AWREADY.read();
    } else {
        physMemPtr_V_blk_n_AW = ap_const_logic_1;
    }
}

void pynq_dsp_hls::thread_physMemPtr_V_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_reg_335.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln101_reg_344.read()))) {
        physMemPtr_V_blk_n_B = m_axi_physMemPtr_V_BVALID.read();
    } else {
        physMemPtr_V_blk_n_B = ap_const_logic_1;
    }
}

void pynq_dsp_hls::thread_physMemPtr_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        physMemPtr_V_blk_n_R = m_axi_physMemPtr_V_RVALID.read();
    } else {
        physMemPtr_V_blk_n_R = ap_const_logic_1;
    }
}

void pynq_dsp_hls::thread_physMemPtr_V_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        physMemPtr_V_blk_n_W = m_axi_physMemPtr_V_WREADY.read();
    } else {
        physMemPtr_V_blk_n_W = ap_const_logic_1;
    }
}

void pynq_dsp_hls::thread_r_V_fu_188_p4() {
    r_V_fu_188_p4 = basePhysAddr_V.read().range(31, 2);
}

void pynq_dsp_hls::thread_ret_V_1_fu_274_p2() {
    ret_V_1_fu_274_p2 = (!zext_ln215_reg_306.read().is_01() || !ap_const_lv31_2.is_01())? sc_lv<31>(): (sc_biguint<31>(zext_ln215_reg_306.read()) + sc_biguint<31>(ap_const_lv31_2));
}

void pynq_dsp_hls::thread_ret_V_fu_202_p2() {
    ret_V_fu_202_p2 = (!zext_ln215_fu_198_p1.read().is_01() || !ap_const_lv31_4.is_01())? sc_lv<31>(): (sc_biguint<31>(zext_ln215_fu_198_p1.read()) + sc_biguint<31>(ap_const_lv31_4));
}

void pynq_dsp_hls::thread_xor_ln101_1_fu_252_p2() {
    xor_ln101_1_fu_252_p2 = (or_ln96_fu_231_p2.read() ^ ap_const_lv1_1);
}

void pynq_dsp_hls::thread_xor_ln101_fu_241_p2() {
    xor_ln101_fu_241_p2 = (readyLch.read() ^ ap_const_lv1_1);
}

void pynq_dsp_hls::thread_xor_ln96_fu_236_p2() {
    xor_ln96_fu_236_p2 = (lrclk_V_0_data_reg.read() ^ ap_const_lv1_1);
}

void pynq_dsp_hls::thread_zext_ln215_fu_198_p1() {
    zext_ln215_fu_198_p1 = esl_zext<31,30>(r_V_fu_188_p4.read());
}

void pynq_dsp_hls::thread_zext_ln544_1_fu_264_p1() {
    zext_ln544_1_fu_264_p1 = esl_zext<64,30>(r_V_reg_301.read());
}

void pynq_dsp_hls::thread_zext_ln544_2_fu_279_p1() {
    zext_ln544_2_fu_279_p1 = esl_zext<64,31>(ret_V_1_reg_354.read());
}

void pynq_dsp_hls::thread_zext_ln544_fu_208_p1() {
    zext_ln544_fu_208_p1 = esl_zext<64,31>(ret_V_reg_311.read());
}

void pynq_dsp_hls::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(physMemPtr_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(physMemPtr_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln761_fu_218_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln101_fu_258_p2.read()) && esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_block_state10_io.read(), ap_const_boolean_0) && (esl_seteq<1,1,1>(or_ln101_fu_258_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(icmp_ln761_fu_218_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_AWREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state18;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_RVALID.read()) || esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_WREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(physMemPtr_V_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, physMemPtr_V_BVALID.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op84_writeresp_state24.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void pynq_dsp_hls::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"lrclk_V\" :  \"" << lrclk_V.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_physMemPtr_V_AWVALID\" :  \"" << m_axi_physMemPtr_V_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_AWREADY\" :  \"" << m_axi_physMemPtr_V_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_AWADDR\" :  \"" << m_axi_physMemPtr_V_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_AWID\" :  \"" << m_axi_physMemPtr_V_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_AWLEN\" :  \"" << m_axi_physMemPtr_V_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_AWSIZE\" :  \"" << m_axi_physMemPtr_V_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_AWBURST\" :  \"" << m_axi_physMemPtr_V_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_AWLOCK\" :  \"" << m_axi_physMemPtr_V_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_AWCACHE\" :  \"" << m_axi_physMemPtr_V_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_AWPROT\" :  \"" << m_axi_physMemPtr_V_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_AWQOS\" :  \"" << m_axi_physMemPtr_V_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_AWREGION\" :  \"" << m_axi_physMemPtr_V_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_AWUSER\" :  \"" << m_axi_physMemPtr_V_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_WVALID\" :  \"" << m_axi_physMemPtr_V_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_WREADY\" :  \"" << m_axi_physMemPtr_V_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_WDATA\" :  \"" << m_axi_physMemPtr_V_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_WSTRB\" :  \"" << m_axi_physMemPtr_V_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_WLAST\" :  \"" << m_axi_physMemPtr_V_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_WID\" :  \"" << m_axi_physMemPtr_V_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_WUSER\" :  \"" << m_axi_physMemPtr_V_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARVALID\" :  \"" << m_axi_physMemPtr_V_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_ARREADY\" :  \"" << m_axi_physMemPtr_V_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARADDR\" :  \"" << m_axi_physMemPtr_V_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARID\" :  \"" << m_axi_physMemPtr_V_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARLEN\" :  \"" << m_axi_physMemPtr_V_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARSIZE\" :  \"" << m_axi_physMemPtr_V_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARBURST\" :  \"" << m_axi_physMemPtr_V_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARLOCK\" :  \"" << m_axi_physMemPtr_V_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARCACHE\" :  \"" << m_axi_physMemPtr_V_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARPROT\" :  \"" << m_axi_physMemPtr_V_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARQOS\" :  \"" << m_axi_physMemPtr_V_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARREGION\" :  \"" << m_axi_physMemPtr_V_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_ARUSER\" :  \"" << m_axi_physMemPtr_V_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_RVALID\" :  \"" << m_axi_physMemPtr_V_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_RREADY\" :  \"" << m_axi_physMemPtr_V_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_RDATA\" :  \"" << m_axi_physMemPtr_V_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_RLAST\" :  \"" << m_axi_physMemPtr_V_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_RID\" :  \"" << m_axi_physMemPtr_V_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_RUSER\" :  \"" << m_axi_physMemPtr_V_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_RRESP\" :  \"" << m_axi_physMemPtr_V_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_BVALID\" :  \"" << m_axi_physMemPtr_V_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_physMemPtr_V_BREADY\" :  \"" << m_axi_physMemPtr_V_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_BRESP\" :  \"" << m_axi_physMemPtr_V_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_BID\" :  \"" << m_axi_physMemPtr_V_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_physMemPtr_V_BUSER\" :  \"" << m_axi_physMemPtr_V_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

