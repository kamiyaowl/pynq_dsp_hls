// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "effect_compressor.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic effect_compressor::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic effect_compressor::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<23> effect_compressor::ap_ST_fsm_state1 = "1";
const sc_lv<23> effect_compressor::ap_ST_fsm_state2 = "10";
const sc_lv<23> effect_compressor::ap_ST_fsm_state3 = "100";
const sc_lv<23> effect_compressor::ap_ST_fsm_state4 = "1000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state5 = "10000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state6 = "100000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state7 = "1000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state8 = "10000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state9 = "100000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state10 = "1000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state11 = "10000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state12 = "100000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<23> effect_compressor::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> effect_compressor::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> effect_compressor::ap_const_lv32_A = "1010";
const sc_lv<1> effect_compressor::ap_const_lv1_0 = "0";
const sc_lv<32> effect_compressor::ap_const_lv32_15 = "10101";
const sc_lv<32> effect_compressor::ap_const_lv32_1 = "1";
const sc_lv<32> effect_compressor::ap_const_lv32_2 = "10";
const sc_lv<32> effect_compressor::ap_const_lv32_3 = "11";
const sc_lv<32> effect_compressor::ap_const_lv32_9 = "1001";
const sc_lv<32> effect_compressor::ap_const_lv32_B = "1011";
const sc_lv<32> effect_compressor::ap_const_lv32_E = "1110";
const sc_lv<32> effect_compressor::ap_const_lv32_4 = "100";
const sc_lv<32> effect_compressor::ap_const_lv32_F = "1111";
const sc_lv<32> effect_compressor::ap_const_lv32_14 = "10100";
const sc_lv<4> effect_compressor::ap_const_lv4_0 = "0000";
const sc_lv<9> effect_compressor::ap_const_lv9_1 = "1";
const sc_lv<55> effect_compressor::ap_const_lv55_0 = "0000000000000000000000000000000000000000000000000000000";
const sc_lv<32> effect_compressor::ap_const_lv32_17 = "10111";
const sc_lv<32> effect_compressor::ap_const_lv32_1E = "11110";
const sc_lv<8> effect_compressor::ap_const_lv8_FF = "11111111";
const sc_lv<23> effect_compressor::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<9> effect_compressor::ap_const_lv9_2 = "10";
const sc_lv<32> effect_compressor::ap_const_lv32_16 = "10110";
const sc_lv<32> effect_compressor::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<1> effect_compressor::ap_const_lv1_1 = "1";
const sc_lv<2> effect_compressor::ap_const_lv2_0 = "00";
const sc_lv<2> effect_compressor::ap_const_lv2_1 = "1";
const sc_lv<5> effect_compressor::ap_const_lv5_4 = "100";
const bool effect_compressor::ap_const_boolean_1 = true;

effect_compressor::effect_compressor(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pynq_dsp_hls_faddfYi_U30 = new pynq_dsp_hls_faddfYi<1,7,32,32,32>("pynq_dsp_hls_faddfYi_U30");
    pynq_dsp_hls_faddfYi_U30->clk(ap_clk);
    pynq_dsp_hls_faddfYi_U30->reset(ap_rst);
    pynq_dsp_hls_faddfYi_U30->din0(grp_fu_95_p0);
    pynq_dsp_hls_faddfYi_U30->din1(grp_fu_95_p1);
    pynq_dsp_hls_faddfYi_U30->opcode(grp_fu_95_opcode);
    pynq_dsp_hls_faddfYi_U30->ce(ap_var_for_const0);
    pynq_dsp_hls_faddfYi_U30->dout(grp_fu_95_p2);
    pynq_dsp_hls_faddfYi_U31 = new pynq_dsp_hls_faddfYi<1,7,32,32,32>("pynq_dsp_hls_faddfYi_U31");
    pynq_dsp_hls_faddfYi_U31->clk(ap_clk);
    pynq_dsp_hls_faddfYi_U31->reset(ap_rst);
    pynq_dsp_hls_faddfYi_U31->din0(grp_fu_99_p0);
    pynq_dsp_hls_faddfYi_U31->din1(grp_fu_99_p1);
    pynq_dsp_hls_faddfYi_U31->opcode(grp_fu_99_opcode);
    pynq_dsp_hls_faddfYi_U31->ce(ap_var_for_const0);
    pynq_dsp_hls_faddfYi_U31->dout(grp_fu_99_p2);
    pynq_dsp_hls_fmulcud_U32 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U32");
    pynq_dsp_hls_fmulcud_U32->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U32->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U32->din0(reg_121);
    pynq_dsp_hls_fmulcud_U32->din1(ratio_fu_354_p1);
    pynq_dsp_hls_fmulcud_U32->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U32->dout(grp_fu_103_p2);
    pynq_dsp_hls_fmulcud_U33 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U33");
    pynq_dsp_hls_fmulcud_U33->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U33->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U33->din0(reg_126);
    pynq_dsp_hls_fmulcud_U33->din1(ratio_fu_354_p1);
    pynq_dsp_hls_fmulcud_U33->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U33->dout(grp_fu_107_p2);
    pynq_dsp_hls_fcmpeOg_U34 = new pynq_dsp_hls_fcmpeOg<1,2,32,32,1>("pynq_dsp_hls_fcmpeOg_U34");
    pynq_dsp_hls_fcmpeOg_U34->clk(ap_clk);
    pynq_dsp_hls_fcmpeOg_U34->reset(ap_rst);
    pynq_dsp_hls_fcmpeOg_U34->din0(grp_fu_111_p0);
    pynq_dsp_hls_fcmpeOg_U34->din1(grp_fu_111_p1);
    pynq_dsp_hls_fcmpeOg_U34->ce(ap_var_for_const0);
    pynq_dsp_hls_fcmpeOg_U34->opcode(ap_var_for_const1);
    pynq_dsp_hls_fcmpeOg_U34->dout(grp_fu_111_p2);
    pynq_dsp_hls_fcmpeOg_U35 = new pynq_dsp_hls_fcmpeOg<1,2,32,32,1>("pynq_dsp_hls_fcmpeOg_U35");
    pynq_dsp_hls_fcmpeOg_U35->clk(ap_clk);
    pynq_dsp_hls_fcmpeOg_U35->reset(ap_rst);
    pynq_dsp_hls_fcmpeOg_U35->din0(grp_fu_115_p0);
    pynq_dsp_hls_fcmpeOg_U35->din1(grp_fu_115_p1);
    pynq_dsp_hls_fcmpeOg_U35->ce(ap_var_for_const0);
    pynq_dsp_hls_fcmpeOg_U35->opcode(ap_var_for_const1);
    pynq_dsp_hls_fcmpeOg_U35->dout(grp_fu_115_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_absL_fu_223_p1);
    sensitive << ( p_Result_10_fu_215_p3 );

    SC_METHOD(thread_absR_fu_248_p1);
    sensitive << ( p_Result_11_fu_240_p3 );

    SC_METHOD(thread_and_ln24_1_fu_313_p2);
    sensitive << ( grp_fu_111_p2 );
    sensitive << ( and_ln24_fu_309_p2 );

    SC_METHOD(thread_and_ln24_fu_309_p2);
    sensitive << ( or_ln24_1_reg_473 );
    sensitive << ( or_ln24_reg_513 );

    SC_METHOD(thread_and_ln28_1_fu_383_p2);
    sensitive << ( and_ln28_fu_360_p2 );
    sensitive << ( xor_ln24_fu_378_p2 );

    SC_METHOD(thread_and_ln28_fu_360_p2);
    sensitive << ( or_ln24_reg_513 );
    sensitive << ( tmp_34_reg_563 );

    SC_METHOD(thread_and_ln31_1_fu_323_p2);
    sensitive << ( grp_fu_115_p2 );
    sensitive << ( and_ln31_fu_319_p2 );

    SC_METHOD(thread_and_ln31_fu_319_p2);
    sensitive << ( or_ln24_1_reg_473 );
    sensitive << ( or_ln31_reg_519 );

    SC_METHOD(thread_and_ln35_1_fu_426_p2);
    sensitive << ( and_ln35_fu_403_p2 );
    sensitive << ( xor_ln31_fu_421_p2 );

    SC_METHOD(thread_and_ln35_fu_403_p2);
    sensitive << ( or_ln31_reg_519 );
    sensitive << ( tmp_39_reg_568 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( dst_l_fu_397_p3 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( dst_r_fu_440_p3 );

    SC_METHOD(thread_bitcast_ln28_1_fu_374_p1);
    sensitive << ( xor_ln28_fu_368_p2 );

    SC_METHOD(thread_bitcast_ln28_fu_364_p1);
    sensitive << ( reg_121 );

    SC_METHOD(thread_bitcast_ln35_1_fu_417_p1);
    sensitive << ( xor_ln35_fu_411_p2 );

    SC_METHOD(thread_bitcast_ln35_fu_407_p1);
    sensitive << ( reg_126 );

    SC_METHOD(thread_config_r_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_44_fu_145_p3 );
    sensitive << ( tmp_45_fu_334_p3 );

    SC_METHOD(thread_config_r_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_dst_l_fu_397_p3);
    sensitive << ( inData_l );
    sensitive << ( and_ln24_1_reg_525 );
    sensitive << ( select_ln28_fu_389_p3 );

    SC_METHOD(thread_dst_r_fu_440_p3);
    sensitive << ( inData_r );
    sensitive << ( and_ln31_1_reg_531 );
    sensitive << ( select_ln35_fu_432_p3 );

    SC_METHOD(thread_grp_fu_111_p0);
    sensitive << ( inData_l );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( absL_fu_223_p1 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_111_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( thresh_fu_197_p1 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_115_p0);
    sensitive << ( inData_r );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( absR_fu_248_p1 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_115_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( thresh_fu_197_p1 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_95_opcode);
    sensitive << ( and_ln24_1_reg_525 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_fu_95_p0);
    sensitive << ( thresh_reg_491 );
    sensitive << ( absL_reg_501 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_fu_95_p1);
    sensitive << ( thresh_reg_491 );
    sensitive << ( tmp_22_reg_553 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_fu_99_opcode);
    sensitive << ( and_ln31_1_reg_531 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_fu_99_p0);
    sensitive << ( thresh_reg_491 );
    sensitive << ( absR_reg_507 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_fu_99_p1);
    sensitive << ( thresh_reg_491 );
    sensitive << ( tmp_26_reg_558 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_icmp_ln24_1_fu_269_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( trunc_ln24_fu_211_p1 );

    SC_METHOD(thread_icmp_ln24_2_fu_172_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_31_fu_162_p4 );

    SC_METHOD(thread_icmp_ln24_3_fu_178_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( trunc_ln31_fu_158_p1 );

    SC_METHOD(thread_icmp_ln24_fu_263_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_30_fu_253_p4 );

    SC_METHOD(thread_icmp_ln31_1_fu_297_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( trunc_ln31_1_fu_236_p1 );

    SC_METHOD(thread_icmp_ln31_fu_291_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_35_fu_281_p4 );

    SC_METHOD(thread_or_ln17_fu_139_p2);
    sensitive << ( tmp_43_fu_131_p3 );

    SC_METHOD(thread_or_ln18_fu_329_p2);
    sensitive << ( tmp_43_reg_458 );

    SC_METHOD(thread_or_ln24_1_fu_184_p2);
    sensitive << ( icmp_ln24_3_fu_178_p2 );
    sensitive << ( icmp_ln24_2_fu_172_p2 );

    SC_METHOD(thread_or_ln24_fu_275_p2);
    sensitive << ( icmp_ln24_1_fu_269_p2 );
    sensitive << ( icmp_ln24_fu_263_p2 );

    SC_METHOD(thread_or_ln31_fu_303_p2);
    sensitive << ( icmp_ln31_1_fu_297_p2 );
    sensitive << ( icmp_ln31_fu_291_p2 );

    SC_METHOD(thread_p_Result_10_fu_215_p3);
    sensitive << ( trunc_ln368_5_fu_207_p1 );

    SC_METHOD(thread_p_Result_11_fu_240_p3);
    sensitive << ( trunc_ln368_6_fu_232_p1 );

    SC_METHOD(thread_p_Result_9_fu_347_p3);
    sensitive << ( trunc_ln368_4_reg_542 );

    SC_METHOD(thread_p_Result_s_fu_190_p3);
    sensitive << ( trunc_ln368_reg_468 );

    SC_METHOD(thread_p_Val2_13_fu_203_p1);
    sensitive << ( inData_l );

    SC_METHOD(thread_p_Val2_14_fu_228_p1);
    sensitive << ( inData_r );

    SC_METHOD(thread_ratio_fu_354_p1);
    sensitive << ( p_Result_9_fu_347_p3 );

    SC_METHOD(thread_select_ln28_fu_389_p3);
    sensitive << ( reg_121 );
    sensitive << ( and_ln28_1_fu_383_p2 );
    sensitive << ( bitcast_ln28_1_fu_374_p1 );

    SC_METHOD(thread_select_ln35_fu_432_p3);
    sensitive << ( reg_126 );
    sensitive << ( and_ln35_1_fu_426_p2 );
    sensitive << ( bitcast_ln35_1_fu_417_p1 );

    SC_METHOD(thread_thresh_fu_197_p1);
    sensitive << ( p_Result_s_fu_190_p3 );

    SC_METHOD(thread_tmp_30_fu_253_p4);
    sensitive << ( p_Val2_13_fu_203_p1 );

    SC_METHOD(thread_tmp_31_fu_162_p4);
    sensitive << ( config_r_q0 );

    SC_METHOD(thread_tmp_35_fu_281_p4);
    sensitive << ( p_Val2_14_fu_228_p1 );

    SC_METHOD(thread_tmp_43_fu_131_p3);
    sensitive << ( config_offset );

    SC_METHOD(thread_tmp_44_fu_145_p3);
    sensitive << ( or_ln17_fu_139_p2 );

    SC_METHOD(thread_tmp_45_fu_334_p3);
    sensitive << ( or_ln18_fu_329_p2 );

    SC_METHOD(thread_trunc_ln24_fu_211_p1);
    sensitive << ( p_Val2_13_fu_203_p1 );

    SC_METHOD(thread_trunc_ln31_1_fu_236_p1);
    sensitive << ( p_Val2_14_fu_228_p1 );

    SC_METHOD(thread_trunc_ln31_fu_158_p1);
    sensitive << ( config_r_q0 );

    SC_METHOD(thread_trunc_ln368_4_fu_343_p1);
    sensitive << ( config_r_q0 );

    SC_METHOD(thread_trunc_ln368_5_fu_207_p1);
    sensitive << ( p_Val2_13_fu_203_p1 );

    SC_METHOD(thread_trunc_ln368_6_fu_232_p1);
    sensitive << ( p_Val2_14_fu_228_p1 );

    SC_METHOD(thread_trunc_ln368_fu_154_p1);
    sensitive << ( config_r_q0 );

    SC_METHOD(thread_xor_ln24_fu_378_p2);
    sensitive << ( and_ln24_1_reg_525 );

    SC_METHOD(thread_xor_ln28_fu_368_p2);
    sensitive << ( bitcast_ln28_fu_364_p1 );

    SC_METHOD(thread_xor_ln31_fu_421_p2);
    sensitive << ( and_ln31_1_reg_531 );

    SC_METHOD(thread_xor_ln35_fu_411_p2);
    sensitive << ( bitcast_ln35_fu_407_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "effect_compressor_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, inData_l, "(port)inData_l");
    sc_trace(mVcdFile, inData_r, "(port)inData_r");
    sc_trace(mVcdFile, config_r_address0, "(port)config_r_address0");
    sc_trace(mVcdFile, config_r_ce0, "(port)config_r_ce0");
    sc_trace(mVcdFile, config_r_q0, "(port)config_r_q0");
    sc_trace(mVcdFile, config_offset, "(port)config_offset");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_95_p2, "grp_fu_95_p2");
    sc_trace(mVcdFile, reg_121, "reg_121");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, and_ln24_1_reg_525, "and_ln24_1_reg_525");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_99_p2, "grp_fu_99_p2");
    sc_trace(mVcdFile, reg_126, "reg_126");
    sc_trace(mVcdFile, and_ln31_1_reg_531, "and_ln31_1_reg_531");
    sc_trace(mVcdFile, tmp_43_fu_131_p3, "tmp_43_fu_131_p3");
    sc_trace(mVcdFile, tmp_43_reg_458, "tmp_43_reg_458");
    sc_trace(mVcdFile, trunc_ln368_fu_154_p1, "trunc_ln368_fu_154_p1");
    sc_trace(mVcdFile, trunc_ln368_reg_468, "trunc_ln368_reg_468");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, or_ln24_1_fu_184_p2, "or_ln24_1_fu_184_p2");
    sc_trace(mVcdFile, or_ln24_1_reg_473, "or_ln24_1_reg_473");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, thresh_fu_197_p1, "thresh_fu_197_p1");
    sc_trace(mVcdFile, thresh_reg_491, "thresh_reg_491");
    sc_trace(mVcdFile, absL_fu_223_p1, "absL_fu_223_p1");
    sc_trace(mVcdFile, absL_reg_501, "absL_reg_501");
    sc_trace(mVcdFile, absR_fu_248_p1, "absR_fu_248_p1");
    sc_trace(mVcdFile, absR_reg_507, "absR_reg_507");
    sc_trace(mVcdFile, or_ln24_fu_275_p2, "or_ln24_fu_275_p2");
    sc_trace(mVcdFile, or_ln24_reg_513, "or_ln24_reg_513");
    sc_trace(mVcdFile, or_ln31_fu_303_p2, "or_ln31_fu_303_p2");
    sc_trace(mVcdFile, or_ln31_reg_519, "or_ln31_reg_519");
    sc_trace(mVcdFile, and_ln24_1_fu_313_p2, "and_ln24_1_fu_313_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, and_ln31_1_fu_323_p2, "and_ln31_1_fu_323_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, trunc_ln368_4_fu_343_p1, "trunc_ln368_4_fu_343_p1");
    sc_trace(mVcdFile, trunc_ln368_4_reg_542, "trunc_ln368_4_reg_542");
    sc_trace(mVcdFile, ratio_fu_354_p1, "ratio_fu_354_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_103_p2, "grp_fu_103_p2");
    sc_trace(mVcdFile, tmp_22_reg_553, "tmp_22_reg_553");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_fu_107_p2, "grp_fu_107_p2");
    sc_trace(mVcdFile, tmp_26_reg_558, "tmp_26_reg_558");
    sc_trace(mVcdFile, grp_fu_111_p2, "grp_fu_111_p2");
    sc_trace(mVcdFile, tmp_34_reg_563, "tmp_34_reg_563");
    sc_trace(mVcdFile, grp_fu_115_p2, "grp_fu_115_p2");
    sc_trace(mVcdFile, tmp_39_reg_568, "tmp_39_reg_568");
    sc_trace(mVcdFile, tmp_44_fu_145_p3, "tmp_44_fu_145_p3");
    sc_trace(mVcdFile, tmp_45_fu_334_p3, "tmp_45_fu_334_p3");
    sc_trace(mVcdFile, grp_fu_95_p0, "grp_fu_95_p0");
    sc_trace(mVcdFile, grp_fu_95_p1, "grp_fu_95_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_fu_99_p0, "grp_fu_99_p0");
    sc_trace(mVcdFile, grp_fu_99_p1, "grp_fu_99_p1");
    sc_trace(mVcdFile, grp_fu_111_p0, "grp_fu_111_p0");
    sc_trace(mVcdFile, grp_fu_111_p1, "grp_fu_111_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, grp_fu_115_p0, "grp_fu_115_p0");
    sc_trace(mVcdFile, grp_fu_115_p1, "grp_fu_115_p1");
    sc_trace(mVcdFile, or_ln17_fu_139_p2, "or_ln17_fu_139_p2");
    sc_trace(mVcdFile, tmp_31_fu_162_p4, "tmp_31_fu_162_p4");
    sc_trace(mVcdFile, trunc_ln31_fu_158_p1, "trunc_ln31_fu_158_p1");
    sc_trace(mVcdFile, icmp_ln24_3_fu_178_p2, "icmp_ln24_3_fu_178_p2");
    sc_trace(mVcdFile, icmp_ln24_2_fu_172_p2, "icmp_ln24_2_fu_172_p2");
    sc_trace(mVcdFile, p_Result_s_fu_190_p3, "p_Result_s_fu_190_p3");
    sc_trace(mVcdFile, p_Val2_13_fu_203_p1, "p_Val2_13_fu_203_p1");
    sc_trace(mVcdFile, trunc_ln368_5_fu_207_p1, "trunc_ln368_5_fu_207_p1");
    sc_trace(mVcdFile, p_Result_10_fu_215_p3, "p_Result_10_fu_215_p3");
    sc_trace(mVcdFile, p_Val2_14_fu_228_p1, "p_Val2_14_fu_228_p1");
    sc_trace(mVcdFile, trunc_ln368_6_fu_232_p1, "trunc_ln368_6_fu_232_p1");
    sc_trace(mVcdFile, p_Result_11_fu_240_p3, "p_Result_11_fu_240_p3");
    sc_trace(mVcdFile, tmp_30_fu_253_p4, "tmp_30_fu_253_p4");
    sc_trace(mVcdFile, trunc_ln24_fu_211_p1, "trunc_ln24_fu_211_p1");
    sc_trace(mVcdFile, icmp_ln24_1_fu_269_p2, "icmp_ln24_1_fu_269_p2");
    sc_trace(mVcdFile, icmp_ln24_fu_263_p2, "icmp_ln24_fu_263_p2");
    sc_trace(mVcdFile, tmp_35_fu_281_p4, "tmp_35_fu_281_p4");
    sc_trace(mVcdFile, trunc_ln31_1_fu_236_p1, "trunc_ln31_1_fu_236_p1");
    sc_trace(mVcdFile, icmp_ln31_1_fu_297_p2, "icmp_ln31_1_fu_297_p2");
    sc_trace(mVcdFile, icmp_ln31_fu_291_p2, "icmp_ln31_fu_291_p2");
    sc_trace(mVcdFile, and_ln24_fu_309_p2, "and_ln24_fu_309_p2");
    sc_trace(mVcdFile, and_ln31_fu_319_p2, "and_ln31_fu_319_p2");
    sc_trace(mVcdFile, or_ln18_fu_329_p2, "or_ln18_fu_329_p2");
    sc_trace(mVcdFile, p_Result_9_fu_347_p3, "p_Result_9_fu_347_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, bitcast_ln28_fu_364_p1, "bitcast_ln28_fu_364_p1");
    sc_trace(mVcdFile, xor_ln28_fu_368_p2, "xor_ln28_fu_368_p2");
    sc_trace(mVcdFile, and_ln28_fu_360_p2, "and_ln28_fu_360_p2");
    sc_trace(mVcdFile, xor_ln24_fu_378_p2, "xor_ln24_fu_378_p2");
    sc_trace(mVcdFile, and_ln28_1_fu_383_p2, "and_ln28_1_fu_383_p2");
    sc_trace(mVcdFile, bitcast_ln28_1_fu_374_p1, "bitcast_ln28_1_fu_374_p1");
    sc_trace(mVcdFile, select_ln28_fu_389_p3, "select_ln28_fu_389_p3");
    sc_trace(mVcdFile, bitcast_ln35_fu_407_p1, "bitcast_ln35_fu_407_p1");
    sc_trace(mVcdFile, xor_ln35_fu_411_p2, "xor_ln35_fu_411_p2");
    sc_trace(mVcdFile, and_ln35_fu_403_p2, "and_ln35_fu_403_p2");
    sc_trace(mVcdFile, xor_ln31_fu_421_p2, "xor_ln31_fu_421_p2");
    sc_trace(mVcdFile, and_ln35_1_fu_426_p2, "and_ln35_1_fu_426_p2");
    sc_trace(mVcdFile, bitcast_ln35_1_fu_417_p1, "bitcast_ln35_1_fu_417_p1");
    sc_trace(mVcdFile, select_ln35_fu_432_p3, "select_ln35_fu_432_p3");
    sc_trace(mVcdFile, dst_l_fu_397_p3, "dst_l_fu_397_p3");
    sc_trace(mVcdFile, dst_r_fu_440_p3, "dst_r_fu_440_p3");
    sc_trace(mVcdFile, grp_fu_95_opcode, "grp_fu_95_opcode");
    sc_trace(mVcdFile, grp_fu_99_opcode, "grp_fu_99_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

effect_compressor::~effect_compressor() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete pynq_dsp_hls_faddfYi_U30;
    delete pynq_dsp_hls_faddfYi_U31;
    delete pynq_dsp_hls_fmulcud_U32;
    delete pynq_dsp_hls_fmulcud_U33;
    delete pynq_dsp_hls_fcmpeOg_U34;
    delete pynq_dsp_hls_fcmpeOg_U35;
}

void effect_compressor::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void effect_compressor::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_4;
}

void effect_compressor::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        absL_reg_501 = absL_fu_223_p1.read();
        absR_reg_507 = absR_fu_248_p1.read();
        or_ln24_reg_513 = or_ln24_fu_275_p2.read();
        or_ln31_reg_519 = or_ln31_fu_303_p2.read();
        thresh_reg_491 = thresh_fu_197_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        and_ln24_1_reg_525 = and_ln24_1_fu_313_p2.read();
        and_ln31_1_reg_531 = and_ln31_1_fu_323_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        or_ln24_1_reg_473 = or_ln24_1_fu_184_p2.read();
        trunc_ln368_reg_468 = trunc_ln368_fu_154_p1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
  esl_seteq<1,1,1>(and_ln24_1_reg_525.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(and_ln24_1_reg_525.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        reg_121 = grp_fu_95_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, and_ln31_1_reg_531.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, and_ln31_1_reg_531.read())))) {
        reg_126 = grp_fu_99_p2.read();
    }
    if ((esl_seteq<1,1,1>(and_ln24_1_reg_525.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        tmp_22_reg_553 = grp_fu_103_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, and_ln31_1_reg_531.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        tmp_26_reg_558 = grp_fu_107_p2.read();
    }
    if ((esl_seteq<1,1,1>(and_ln24_1_reg_525.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        tmp_34_reg_563 = grp_fu_111_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln31_1_reg_531.read()))) {
        tmp_39_reg_568 = grp_fu_115_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_43_reg_458 = tmp_43_fu_131_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        trunc_ln368_4_reg_542 = trunc_ln368_4_fu_343_p1.read();
    }
}

void effect_compressor::thread_absL_fu_223_p1() {
    absL_fu_223_p1 = p_Result_10_fu_215_p3.read();
}

void effect_compressor::thread_absR_fu_248_p1() {
    absR_fu_248_p1 = p_Result_11_fu_240_p3.read();
}

void effect_compressor::thread_and_ln24_1_fu_313_p2() {
    and_ln24_1_fu_313_p2 = (and_ln24_fu_309_p2.read() & grp_fu_111_p2.read());
}

void effect_compressor::thread_and_ln24_fu_309_p2() {
    and_ln24_fu_309_p2 = (or_ln24_reg_513.read() & or_ln24_1_reg_473.read());
}

void effect_compressor::thread_and_ln28_1_fu_383_p2() {
    and_ln28_1_fu_383_p2 = (and_ln28_fu_360_p2.read() & xor_ln24_fu_378_p2.read());
}

void effect_compressor::thread_and_ln28_fu_360_p2() {
    and_ln28_fu_360_p2 = (or_ln24_reg_513.read() & tmp_34_reg_563.read());
}

void effect_compressor::thread_and_ln31_1_fu_323_p2() {
    and_ln31_1_fu_323_p2 = (and_ln31_fu_319_p2.read() & grp_fu_115_p2.read());
}

void effect_compressor::thread_and_ln31_fu_319_p2() {
    and_ln31_fu_319_p2 = (or_ln31_reg_519.read() & or_ln24_1_reg_473.read());
}

void effect_compressor::thread_and_ln35_1_fu_426_p2() {
    and_ln35_1_fu_426_p2 = (and_ln35_fu_403_p2.read() & xor_ln31_fu_421_p2.read());
}

void effect_compressor::thread_and_ln35_fu_403_p2() {
    and_ln35_fu_403_p2 = (or_ln31_reg_519.read() & tmp_39_reg_568.read());
}

void effect_compressor::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void effect_compressor::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void effect_compressor::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void effect_compressor::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void effect_compressor::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void effect_compressor::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void effect_compressor::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void effect_compressor::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void effect_compressor::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void effect_compressor::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void effect_compressor::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void effect_compressor::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void effect_compressor::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void effect_compressor::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void effect_compressor::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void effect_compressor::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void effect_compressor::thread_ap_return_0() {
    ap_return_0 = dst_l_fu_397_p3.read();
}

void effect_compressor::thread_ap_return_1() {
    ap_return_1 = dst_r_fu_440_p3.read();
}

void effect_compressor::thread_bitcast_ln28_1_fu_374_p1() {
    bitcast_ln28_1_fu_374_p1 = xor_ln28_fu_368_p2.read();
}

void effect_compressor::thread_bitcast_ln28_fu_364_p1() {
    bitcast_ln28_fu_364_p1 = reg_121.read();
}

void effect_compressor::thread_bitcast_ln35_1_fu_417_p1() {
    bitcast_ln35_1_fu_417_p1 = xor_ln35_fu_411_p2.read();
}

void effect_compressor::thread_bitcast_ln35_fu_407_p1() {
    bitcast_ln35_fu_407_p1 = reg_126.read();
}

void effect_compressor::thread_config_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_45_fu_334_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_44_fu_145_p3.read());
    } else {
        config_r_address0 = "XXXXXXXX";
    }
}

void effect_compressor::thread_config_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        config_r_ce0 = ap_const_logic_1;
    } else {
        config_r_ce0 = ap_const_logic_0;
    }
}

void effect_compressor::thread_dst_l_fu_397_p3() {
    dst_l_fu_397_p3 = (!and_ln24_1_reg_525.read()[0].is_01())? sc_lv<32>(): ((and_ln24_1_reg_525.read()[0].to_bool())? inData_l.read(): select_ln28_fu_389_p3.read());
}

void effect_compressor::thread_dst_r_fu_440_p3() {
    dst_r_fu_440_p3 = (!and_ln31_1_reg_531.read()[0].is_01())? sc_lv<32>(): ((and_ln31_1_reg_531.read()[0].to_bool())? inData_r.read(): select_ln35_fu_432_p3.read());
}

void effect_compressor::thread_grp_fu_111_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_111_p0 = inData_l.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_111_p0 = absL_fu_223_p1.read();
    } else {
        grp_fu_111_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_compressor::thread_grp_fu_111_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_111_p1 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_111_p1 = thresh_fu_197_p1.read();
    } else {
        grp_fu_111_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_compressor::thread_grp_fu_115_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_115_p0 = inData_r.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_115_p0 = absR_fu_248_p1.read();
    } else {
        grp_fu_115_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_compressor::thread_grp_fu_115_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_115_p1 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_115_p1 = thresh_fu_197_p1.read();
    } else {
        grp_fu_115_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_compressor::thread_grp_fu_95_opcode() {
    if (esl_seteq<1,1,1>(and_ln24_1_reg_525.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_fu_95_opcode = ap_const_lv2_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            grp_fu_95_opcode = ap_const_lv2_0;
        } else {
            grp_fu_95_opcode =  (sc_lv<2>) ("XX");
        }
    } else {
        grp_fu_95_opcode =  (sc_lv<2>) ("XX");
    }
}

void effect_compressor::thread_grp_fu_95_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_95_p0 = thresh_reg_491.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_95_p0 = absL_reg_501.read();
    } else {
        grp_fu_95_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_compressor::thread_grp_fu_95_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_95_p1 = tmp_22_reg_553.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_95_p1 = thresh_reg_491.read();
    } else {
        grp_fu_95_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_compressor::thread_grp_fu_99_opcode() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, and_ln31_1_reg_531.read())) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_fu_99_opcode = ap_const_lv2_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            grp_fu_99_opcode = ap_const_lv2_0;
        } else {
            grp_fu_99_opcode =  (sc_lv<2>) ("XX");
        }
    } else {
        grp_fu_99_opcode =  (sc_lv<2>) ("XX");
    }
}

void effect_compressor::thread_grp_fu_99_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_99_p0 = thresh_reg_491.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_99_p0 = absR_reg_507.read();
    } else {
        grp_fu_99_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_compressor::thread_grp_fu_99_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_99_p1 = tmp_26_reg_558.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_99_p1 = thresh_reg_491.read();
    } else {
        grp_fu_99_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_compressor::thread_icmp_ln24_1_fu_269_p2() {
    icmp_ln24_1_fu_269_p2 = (!trunc_ln24_fu_211_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln24_fu_211_p1.read() == ap_const_lv23_0);
}

void effect_compressor::thread_icmp_ln24_2_fu_172_p2() {
    icmp_ln24_2_fu_172_p2 = (!tmp_31_fu_162_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_31_fu_162_p4.read() != ap_const_lv8_FF);
}

void effect_compressor::thread_icmp_ln24_3_fu_178_p2() {
    icmp_ln24_3_fu_178_p2 = (!trunc_ln31_fu_158_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln31_fu_158_p1.read() == ap_const_lv23_0);
}

void effect_compressor::thread_icmp_ln24_fu_263_p2() {
    icmp_ln24_fu_263_p2 = (!tmp_30_fu_253_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_30_fu_253_p4.read() != ap_const_lv8_FF);
}

void effect_compressor::thread_icmp_ln31_1_fu_297_p2() {
    icmp_ln31_1_fu_297_p2 = (!trunc_ln31_1_fu_236_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln31_1_fu_236_p1.read() == ap_const_lv23_0);
}

void effect_compressor::thread_icmp_ln31_fu_291_p2() {
    icmp_ln31_fu_291_p2 = (!tmp_35_fu_281_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_35_fu_281_p4.read() != ap_const_lv8_FF);
}

void effect_compressor::thread_or_ln17_fu_139_p2() {
    or_ln17_fu_139_p2 = (tmp_43_fu_131_p3.read() | ap_const_lv9_1);
}

void effect_compressor::thread_or_ln18_fu_329_p2() {
    or_ln18_fu_329_p2 = (tmp_43_reg_458.read() | ap_const_lv9_2);
}

void effect_compressor::thread_or_ln24_1_fu_184_p2() {
    or_ln24_1_fu_184_p2 = (icmp_ln24_3_fu_178_p2.read() | icmp_ln24_2_fu_172_p2.read());
}

void effect_compressor::thread_or_ln24_fu_275_p2() {
    or_ln24_fu_275_p2 = (icmp_ln24_1_fu_269_p2.read() | icmp_ln24_fu_263_p2.read());
}

void effect_compressor::thread_or_ln31_fu_303_p2() {
    or_ln31_fu_303_p2 = (icmp_ln31_1_fu_297_p2.read() | icmp_ln31_fu_291_p2.read());
}

void effect_compressor::thread_p_Result_10_fu_215_p3() {
    p_Result_10_fu_215_p3 = esl_concat<1,31>(ap_const_lv1_0, trunc_ln368_5_fu_207_p1.read());
}

void effect_compressor::thread_p_Result_11_fu_240_p3() {
    p_Result_11_fu_240_p3 = esl_concat<1,31>(ap_const_lv1_0, trunc_ln368_6_fu_232_p1.read());
}

void effect_compressor::thread_p_Result_9_fu_347_p3() {
    p_Result_9_fu_347_p3 = esl_concat<1,31>(ap_const_lv1_0, trunc_ln368_4_reg_542.read());
}

void effect_compressor::thread_p_Result_s_fu_190_p3() {
    p_Result_s_fu_190_p3 = esl_concat<1,31>(ap_const_lv1_0, trunc_ln368_reg_468.read());
}

void effect_compressor::thread_p_Val2_13_fu_203_p1() {
    p_Val2_13_fu_203_p1 = inData_l.read();
}

void effect_compressor::thread_p_Val2_14_fu_228_p1() {
    p_Val2_14_fu_228_p1 = inData_r.read();
}

void effect_compressor::thread_ratio_fu_354_p1() {
    ratio_fu_354_p1 = p_Result_9_fu_347_p3.read();
}

void effect_compressor::thread_select_ln28_fu_389_p3() {
    select_ln28_fu_389_p3 = (!and_ln28_1_fu_383_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln28_1_fu_383_p2.read()[0].to_bool())? bitcast_ln28_1_fu_374_p1.read(): reg_121.read());
}

void effect_compressor::thread_select_ln35_fu_432_p3() {
    select_ln35_fu_432_p3 = (!and_ln35_1_fu_426_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln35_1_fu_426_p2.read()[0].to_bool())? bitcast_ln35_1_fu_417_p1.read(): reg_126.read());
}

void effect_compressor::thread_thresh_fu_197_p1() {
    thresh_fu_197_p1 = p_Result_s_fu_190_p3.read();
}

void effect_compressor::thread_tmp_30_fu_253_p4() {
    tmp_30_fu_253_p4 = p_Val2_13_fu_203_p1.read().range(30, 23);
}

void effect_compressor::thread_tmp_31_fu_162_p4() {
    tmp_31_fu_162_p4 = config_r_q0.read().range(30, 23);
}

void effect_compressor::thread_tmp_35_fu_281_p4() {
    tmp_35_fu_281_p4 = p_Val2_14_fu_228_p1.read().range(30, 23);
}

void effect_compressor::thread_tmp_43_fu_131_p3() {
    tmp_43_fu_131_p3 = esl_concat<5,4>(config_offset.read(), ap_const_lv4_0);
}

void effect_compressor::thread_tmp_44_fu_145_p3() {
    tmp_44_fu_145_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln17_fu_139_p2.read());
}

void effect_compressor::thread_tmp_45_fu_334_p3() {
    tmp_45_fu_334_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln18_fu_329_p2.read());
}

void effect_compressor::thread_trunc_ln24_fu_211_p1() {
    trunc_ln24_fu_211_p1 = p_Val2_13_fu_203_p1.read().range(23-1, 0);
}

void effect_compressor::thread_trunc_ln31_1_fu_236_p1() {
    trunc_ln31_1_fu_236_p1 = p_Val2_14_fu_228_p1.read().range(23-1, 0);
}

void effect_compressor::thread_trunc_ln31_fu_158_p1() {
    trunc_ln31_fu_158_p1 = config_r_q0.read().range(23-1, 0);
}

void effect_compressor::thread_trunc_ln368_4_fu_343_p1() {
    trunc_ln368_4_fu_343_p1 = config_r_q0.read().range(31-1, 0);
}

void effect_compressor::thread_trunc_ln368_5_fu_207_p1() {
    trunc_ln368_5_fu_207_p1 = p_Val2_13_fu_203_p1.read().range(31-1, 0);
}

void effect_compressor::thread_trunc_ln368_6_fu_232_p1() {
    trunc_ln368_6_fu_232_p1 = p_Val2_14_fu_228_p1.read().range(31-1, 0);
}

void effect_compressor::thread_trunc_ln368_fu_154_p1() {
    trunc_ln368_fu_154_p1 = config_r_q0.read().range(31-1, 0);
}

void effect_compressor::thread_xor_ln24_fu_378_p2() {
    xor_ln24_fu_378_p2 = (and_ln24_1_reg_525.read() ^ ap_const_lv1_1);
}

void effect_compressor::thread_xor_ln28_fu_368_p2() {
    xor_ln28_fu_368_p2 = (bitcast_ln28_fu_364_p1.read() ^ ap_const_lv32_80000000);
}

void effect_compressor::thread_xor_ln31_fu_421_p2() {
    xor_ln31_fu_421_p2 = (and_ln31_1_reg_531.read() ^ ap_const_lv1_1);
}

void effect_compressor::thread_xor_ln35_fu_411_p2() {
    xor_ln35_fu_411_p2 = (bitcast_ln35_fu_407_p1.read() ^ ap_const_lv32_80000000);
}

void effect_compressor::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<23>) ("XXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

