// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "effect_delay.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic effect_delay::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic effect_delay::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<51> effect_delay::ap_ST_fsm_state1 = "1";
const sc_lv<51> effect_delay::ap_ST_fsm_state2 = "10";
const sc_lv<51> effect_delay::ap_ST_fsm_state3 = "100";
const sc_lv<51> effect_delay::ap_ST_fsm_state4 = "1000";
const sc_lv<51> effect_delay::ap_ST_fsm_state5 = "10000";
const sc_lv<51> effect_delay::ap_ST_fsm_state6 = "100000";
const sc_lv<51> effect_delay::ap_ST_fsm_state7 = "1000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state8 = "10000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state9 = "100000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state10 = "1000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state11 = "10000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state12 = "100000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<51> effect_delay::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<32> effect_delay::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> effect_delay::ap_const_lv32_17 = "10111";
const sc_lv<32> effect_delay::ap_const_lv32_1E = "11110";
const sc_lv<32> effect_delay::ap_const_lv32_18 = "11000";
const sc_lv<32> effect_delay::ap_const_lv32_1F = "11111";
const sc_lv<32> effect_delay::ap_const_lv32_2B = "101011";
const sc_lv<32> effect_delay::ap_const_lv32_2C = "101100";
const sc_lv<32> effect_delay::ap_const_lv32_31 = "110001";
const sc_lv<32> effect_delay::ap_const_lv32_2D = "101101";
const sc_lv<32> effect_delay::ap_const_lv32_32 = "110010";
const sc_lv<1> effect_delay::ap_const_lv1_0 = "0";
const sc_lv<32> effect_delay::ap_const_lv32_2 = "10";
const sc_lv<32> effect_delay::ap_const_lv32_4 = "100";
const sc_lv<32> effect_delay::ap_const_lv32_5 = "101";
const sc_lv<32> effect_delay::ap_const_lv32_8 = "1000";
const sc_lv<32> effect_delay::ap_const_lv32_6 = "110";
const sc_lv<32> effect_delay::ap_const_lv32_9 = "1001";
const sc_lv<1> effect_delay::ap_const_lv1_1 = "1";
const bool effect_delay::ap_const_boolean_0 = false;
const sc_lv<32> effect_delay::ap_const_lv32_1 = "1";
const sc_lv<32> effect_delay::ap_const_lv32_3 = "11";
const sc_lv<32> effect_delay::ap_const_lv32_7 = "111";
const sc_lv<32> effect_delay::ap_const_lv32_F = "1111";
const sc_lv<32> effect_delay::ap_const_lv32_13 = "10011";
const sc_lv<32> effect_delay::ap_const_lv32_14 = "10100";
const sc_lv<32> effect_delay::ap_const_lv32_15 = "10101";
const sc_lv<32> effect_delay::ap_const_lv32_16 = "10110";
const sc_lv<32> effect_delay::ap_const_lv32_20 = "100000";
const sc_lv<32> effect_delay::ap_const_lv32_24 = "100100";
const sc_lv<32> effect_delay::ap_const_lv32_2A = "101010";
const sc_lv<32> effect_delay::ap_const_lv32_A = "1010";
const sc_lv<3> effect_delay::ap_const_lv3_0 = "000";
const sc_lv<2> effect_delay::ap_const_lv2_0 = "00";
const sc_lv<4> effect_delay::ap_const_lv4_0 = "0000";
const sc_lv<4> effect_delay::ap_const_lv4_F = "1111";
const sc_lv<32> effect_delay::ap_const_lv32_21 = "100001";
const sc_lv<32> effect_delay::ap_const_lv32_25 = "100101";
const sc_lv<32> effect_delay::ap_const_lv32_26 = "100110";
const sc_lv<32> effect_delay::ap_const_lv32_10 = "10000";
const sc_lv<32> effect_delay::ap_const_lv32_3F4CCCCD = "111111010011001100110011001101";
const sc_lv<32> effect_delay::ap_const_lv32_FFFFFFFE = "11111111111111111111111111111110";
const sc_lv<9> effect_delay::ap_const_lv9_6 = "110";
const sc_lv<55> effect_delay::ap_const_lv55_0 = "0000000000000000000000000000000000000000000000000000000";
const sc_lv<9> effect_delay::ap_const_lv9_1 = "1";
const sc_lv<8> effect_delay::ap_const_lv8_FF = "11111111";
const sc_lv<23> effect_delay::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<9> effect_delay::ap_const_lv9_2 = "10";
const sc_lv<9> effect_delay::ap_const_lv9_3 = "11";
const sc_lv<9> effect_delay::ap_const_lv9_4 = "100";
const sc_lv<31> effect_delay::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<9> effect_delay::ap_const_lv9_5 = "101";
const sc_lv<9> effect_delay::ap_const_lv9_7 = "111";
const sc_lv<9> effect_delay::ap_const_lv9_8 = "1000";
const sc_lv<9> effect_delay::ap_const_lv9_9 = "1001";
const sc_lv<9> effect_delay::ap_const_lv9_181 = "110000001";
const sc_lv<8> effect_delay::ap_const_lv8_7F = "1111111";
const sc_lv<32> effect_delay::ap_const_lv32_37 = "110111";
const sc_lv<33> effect_delay::ap_const_lv33_1 = "1";
const sc_lv<32> effect_delay::ap_const_lv32_27 = "100111";
const sc_lv<32> effect_delay::ap_const_lv32_28 = "101000";
const sc_lv<32> effect_delay::ap_const_lv32_29 = "101001";
const sc_lv<5> effect_delay::ap_const_lv5_2 = "10";
const bool effect_delay::ap_const_boolean_1 = true;

effect_delay::effect_delay(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pynq_dsp_hls_faddbkb_U12 = new pynq_dsp_hls_faddbkb<1,7,32,32,32>("pynq_dsp_hls_faddbkb_U12");
    pynq_dsp_hls_faddbkb_U12->clk(ap_clk);
    pynq_dsp_hls_faddbkb_U12->reset(ap_rst);
    pynq_dsp_hls_faddbkb_U12->din0(grp_fu_343_p0);
    pynq_dsp_hls_faddbkb_U12->din1(grp_fu_343_p1);
    pynq_dsp_hls_faddbkb_U12->ce(grp_fu_343_ce);
    pynq_dsp_hls_faddbkb_U12->dout(grp_fu_343_p2);
    pynq_dsp_hls_faddbkb_U13 = new pynq_dsp_hls_faddbkb<1,7,32,32,32>("pynq_dsp_hls_faddbkb_U13");
    pynq_dsp_hls_faddbkb_U13->clk(ap_clk);
    pynq_dsp_hls_faddbkb_U13->reset(ap_rst);
    pynq_dsp_hls_faddbkb_U13->din0(tmp_18_reg_1260);
    pynq_dsp_hls_faddbkb_U13->din1(tmp_19_reg_1265);
    pynq_dsp_hls_faddbkb_U13->ce(grp_fu_347_ce);
    pynq_dsp_hls_faddbkb_U13->dout(grp_fu_347_p2);
    pynq_dsp_hls_faddbkb_U14 = new pynq_dsp_hls_faddbkb<1,7,32,32,32>("pynq_dsp_hls_faddbkb_U14");
    pynq_dsp_hls_faddbkb_U14->clk(ap_clk);
    pynq_dsp_hls_faddbkb_U14->reset(ap_rst);
    pynq_dsp_hls_faddbkb_U14->din0(tmp_20_reg_1270);
    pynq_dsp_hls_faddbkb_U14->din1(tmp_21_reg_1275);
    pynq_dsp_hls_faddbkb_U14->ce(grp_fu_351_ce);
    pynq_dsp_hls_faddbkb_U14->dout(grp_fu_351_p2);
    pynq_dsp_hls_fmulcud_U15 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U15");
    pynq_dsp_hls_fmulcud_U15->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U15->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U15->din0(grp_fu_355_p0);
    pynq_dsp_hls_fmulcud_U15->din1(grp_fu_355_p1);
    pynq_dsp_hls_fmulcud_U15->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U15->dout(grp_fu_355_p2);
    pynq_dsp_hls_fmulcud_U16 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U16");
    pynq_dsp_hls_fmulcud_U16->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U16->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U16->din0(auxR_0_reg_313);
    pynq_dsp_hls_fmulcud_U16->din1(feedbackVolRatio_reg_1092);
    pynq_dsp_hls_fmulcud_U16->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U16->dout(grp_fu_360_p2);
    pynq_dsp_hls_fmulcud_U17 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U17");
    pynq_dsp_hls_fmulcud_U17->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U17->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U17->din0(directVolRatio_reg_1146);
    pynq_dsp_hls_fmulcud_U17->din1(inData_l);
    pynq_dsp_hls_fmulcud_U17->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U17->dout(grp_fu_365_p2);
    pynq_dsp_hls_fmulcud_U18 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U18");
    pynq_dsp_hls_fmulcud_U18->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U18->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U18->din0(auxL_0_reg_301);
    pynq_dsp_hls_fmulcud_U18->din1(delayVolRatio_reg_1152);
    pynq_dsp_hls_fmulcud_U18->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U18->dout(grp_fu_369_p2);
    pynq_dsp_hls_fmulcud_U19 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U19");
    pynq_dsp_hls_fmulcud_U19->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U19->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U19->din0(directVolRatio_reg_1146);
    pynq_dsp_hls_fmulcud_U19->din1(inData_r);
    pynq_dsp_hls_fmulcud_U19->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U19->dout(grp_fu_374_p2);
    pynq_dsp_hls_fmulcud_U20 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U20");
    pynq_dsp_hls_fmulcud_U20->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U20->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U20->din0(auxR_0_reg_313);
    pynq_dsp_hls_fmulcud_U20->din1(delayVolRatio_reg_1152);
    pynq_dsp_hls_fmulcud_U20->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U20->dout(grp_fu_378_p2);
    pynq_dsp_hls_uitodEe_U21 = new pynq_dsp_hls_uitodEe<1,6,32,32>("pynq_dsp_hls_uitodEe_U21");
    pynq_dsp_hls_uitodEe_U21->clk(ap_clk);
    pynq_dsp_hls_uitodEe_U21->reset(ap_rst);
    pynq_dsp_hls_uitodEe_U21->din0(reg_401);
    pynq_dsp_hls_uitodEe_U21->ce(ap_var_for_const0);
    pynq_dsp_hls_uitodEe_U21->dout(grp_fu_383_p1);
    pynq_dsp_hls_fcmpeOg_U22 = new pynq_dsp_hls_fcmpeOg<1,2,32,32,1>("pynq_dsp_hls_fcmpeOg_U22");
    pynq_dsp_hls_fcmpeOg_U22->clk(ap_clk);
    pynq_dsp_hls_fcmpeOg_U22->reset(ap_rst);
    pynq_dsp_hls_fcmpeOg_U22->din0(grp_fu_386_p0);
    pynq_dsp_hls_fcmpeOg_U22->din1(ap_var_for_const1);
    pynq_dsp_hls_fcmpeOg_U22->ce(ap_var_for_const0);
    pynq_dsp_hls_fcmpeOg_U22->opcode(ap_var_for_const2);
    pynq_dsp_hls_fcmpeOg_U22->dout(grp_fu_386_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln339_fu_694_p2);
    sensitive << ( zext_ln339_fu_691_p1 );

    SC_METHOD(thread_add_ln72_fu_801_p2);
    sensitive << ( i_op_assign_2_reg_279 );
    sensitive << ( sub_ln72_1_fu_795_p2 );

    SC_METHOD(thread_add_ln78_fu_849_p2);
    sensitive << ( zext_ln78_1_fu_830_p1 );
    sensitive << ( zext_ln78_3_fu_845_p1 );

    SC_METHOD(thread_add_ln79_1_fu_875_p2);
    sensitive << ( zext_ln78_3_fu_845_p1 );
    sensitive << ( zext_ln79_fu_871_p1 );

    SC_METHOD(thread_add_ln79_fu_865_p2);
    sensitive << ( zext_ln78_fu_827_p1 );

    SC_METHOD(thread_add_ln82_fu_901_p2);
    sensitive << ( i_op_assign_2_reg_279 );

    SC_METHOD(thread_add_ln89_fu_967_p2);
    sensitive << ( zext_ln89_1_fu_952_p1 );
    sensitive << ( zext_ln89_3_fu_963_p1 );

    SC_METHOD(thread_add_ln90_1_fu_993_p2);
    sensitive << ( zext_ln89_3_fu_963_p1 );
    sensitive << ( zext_ln90_fu_989_p1 );

    SC_METHOD(thread_add_ln90_fu_983_p2);
    sensitive << ( zext_ln89_fu_949_p1 );

    SC_METHOD(thread_add_ln91_fu_935_p2);
    sensitive << ( i_op_assign_3_reg_290 );

    SC_METHOD(thread_and_ln257_fu_531_p2);
    sensitive << ( or_ln257_fu_527_p2 );
    sensitive << ( grp_fu_386_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state45_io);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( m_axi_extMemPtr_V_WREADY );

    SC_METHOD(thread_ap_block_state51);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( or_ln62_reg_1108 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( or_ln62_reg_1108 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( or_ln62_reg_1108 );
    sensitive << ( dst_l_reg_1292 );
    sensitive << ( agg_result_l_write_a_reg_325 );

    SC_METHOD(thread_ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( or_ln62_reg_1108 );
    sensitive << ( dst_r_reg_1297 );
    sensitive << ( agg_result_r_write_a_reg_334 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( or_ln62_reg_1108 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( or_ln62_reg_1108 );
    sensitive << ( ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( or_ln62_reg_1108 );
    sensitive << ( ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_auxL_fu_915_p1);
    sensitive << ( auxRawL_V_reg_1225 );

    SC_METHOD(thread_auxR_fu_918_p1);
    sensitive << ( auxRawR_V_reg_1230 );

    SC_METHOD(thread_bitcast_ln348_fu_508_p1);
    sensitive << ( p_Result_s_fu_501_p3 );

    SC_METHOD(thread_bitcast_ln705_4_fu_1014_p1);
    sensitive << ( reg_416 );

    SC_METHOD(thread_bitcast_ln705_fu_1009_p1);
    sensitive << ( reg_416 );

    SC_METHOD(thread_config_r_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( wrIndex_reg_1136 );
    sensitive << ( rdIndex_reg_1141 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_37_fu_434_p3 );
    sensitive << ( tmp_32_fu_448_p3 );
    sensitive << ( tmp_33_fu_492_p3 );
    sensitive << ( tmp_34_fu_518_p3 );
    sensitive << ( tmp_35_fu_549_p3 );
    sensitive << ( tmp_36_fu_595_p3 );
    sensitive << ( tmp_38_fu_609_p3 );
    sensitive << ( tmp_39_fu_623_p3 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_config_r_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_config_r_d0);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( select_ln82_reg_1220 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( select_ln91_fu_941_p3 );

    SC_METHOD(thread_config_r_we0);
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( or_ln62_reg_1108 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln891_reg_1169 );
    sensitive << ( grp_fu_391_p2 );
    sensitive << ( icmp_ln891_1_reg_1173 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_currentPeriod_fu_813_p3);
    sensitive << ( icmp_ln72_fu_789_p2 );
    sensitive << ( add_ln72_fu_801_p2 );
    sensitive << ( sub_ln72_fu_807_p2 );

    SC_METHOD(thread_delayVolRatio_fu_650_p1);
    sensitive << ( reg_411 );

    SC_METHOD(thread_directVolRatio_fu_646_p1);
    sensitive << ( reg_406 );

    SC_METHOD(thread_extMemPtr_V_blk_n_AR);
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_extMemPtr_V_blk_n_AW);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_extMemPtr_V_blk_n_B);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( or_ln62_reg_1108 );

    SC_METHOD(thread_extMemPtr_V_blk_n_R);
    sensitive << ( m_axi_extMemPtr_V_RVALID );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_extMemPtr_V_blk_n_W);
    sensitive << ( m_axi_extMemPtr_V_WREADY );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_feedbackVolRatio_fu_537_p3);
    sensitive << ( bitcast_ln348_reg_1073 );
    sensitive << ( and_ln257_fu_531_p2 );

    SC_METHOD(thread_grp_fu_343_ce);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_block_state45_io );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_343_p0);
    sensitive << ( tmp_16_reg_1250 );
    sensitive << ( tmp_17_reg_1255 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_grp_fu_343_p1);
    sensitive << ( inData_l );
    sensitive << ( inData_r );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_grp_fu_347_ce);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_351_ce);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_355_p0);
    sensitive << ( tmp_s_reg_1177 );
    sensitive << ( auxL_0_reg_301 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_grp_fu_355_p1);
    sensitive << ( feedbackVolRatio_reg_1092 );
    sensitive << ( periodRatio_reg_1158 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_grp_fu_386_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_Result_s_fu_501_p3 );

    SC_METHOD(thread_grp_fu_391_p2);
    sensitive << ( config_r_q0 );
    sensitive << ( or_ln62_reg_1108 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln891_reg_1169 );
    sensitive << ( maxIndex_V_reg_1163 );

    SC_METHOD(thread_grp_fu_396_p2);
    sensitive << ( maxIndex_V_reg_1163 );

    SC_METHOD(thread_hasMemSizeError_fu_578_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( val_assign_s_fu_562_p4 );

    SC_METHOD(thread_icmp_ln257_6_fu_481_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( trunc_ln257_fu_461_p1 );

    SC_METHOD(thread_icmp_ln257_fu_475_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_23_fu_465_p4 );

    SC_METHOD(thread_icmp_ln72_fu_789_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( i_op_assign_2_reg_279 );
    sensitive << ( i_op_assign_3_reg_290 );

    SC_METHOD(thread_icmp_ln76_fu_821_p2);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( currentPeriod_fu_813_p3 );
    sensitive << ( val_V_fu_782_p3 );

    SC_METHOD(thread_icmp_ln887_1_fu_929_p2);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( zext_ln89_2_fu_921_p1 );
    sensitive << ( sext_ln1354_1_fu_925_p1 );

    SC_METHOD(thread_icmp_ln887_fu_895_p2);
    sensitive << ( icmp_ln76_reg_1204 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( zext_ln78_2_fu_833_p1 );
    sensitive << ( sext_ln1354_fu_891_p1 );

    SC_METHOD(thread_isNeg_fu_700_p3);
    sensitive << ( add_ln339_fu_694_p2 );

    SC_METHOD(thread_isNotRunning_fu_572_p2);
    sensitive << ( trunc_ln302_fu_558_p1 );

    SC_METHOD(thread_m_axi_extMemPtr_V_ARADDR);
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( extMemPtr_V_addr_reg_1208 );
    sensitive << ( extMemPtr_V_addr_1_reg_1214 );

    SC_METHOD(thread_m_axi_extMemPtr_V_ARBURST);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARCACHE);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARID);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARLEN);
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_m_axi_extMemPtr_V_ARLOCK);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARPROT);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARQOS);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARREGION);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARSIZE);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARUSER);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARVALID);
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_m_axi_extMemPtr_V_AWADDR);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_block_state45_io );
    sensitive << ( extMemPtr_V_addr_2_reg_1280 );
    sensitive << ( extMemPtr_V_addr_3_reg_1286 );

    SC_METHOD(thread_m_axi_extMemPtr_V_AWBURST);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWCACHE);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWID);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWLEN);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_block_state45_io );

    SC_METHOD(thread_m_axi_extMemPtr_V_AWLOCK);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWPROT);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWQOS);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWREGION);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWSIZE);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWUSER);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWVALID);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_block_state45_io );

    SC_METHOD(thread_m_axi_extMemPtr_V_BREADY);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( or_ln62_reg_1108 );

    SC_METHOD(thread_m_axi_extMemPtr_V_RREADY);
    sensitive << ( m_axi_extMemPtr_V_RVALID );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_m_axi_extMemPtr_V_WDATA);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( bitcast_ln705_fu_1009_p1 );
    sensitive << ( bitcast_ln705_4_fu_1014_p1 );

    SC_METHOD(thread_m_axi_extMemPtr_V_WID);

    SC_METHOD(thread_m_axi_extMemPtr_V_WLAST);

    SC_METHOD(thread_m_axi_extMemPtr_V_WSTRB);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_m_axi_extMemPtr_V_WUSER);

    SC_METHOD(thread_m_axi_extMemPtr_V_WVALID);
    sensitive << ( m_axi_extMemPtr_V_WREADY );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_block_state45_io );

    SC_METHOD(thread_mantissa_V_fu_725_p4);
    sensitive << ( tmp_V_1_reg_1188 );

    SC_METHOD(thread_maxIndex_V_fu_670_p1);
    sensitive << ( val_assign_s_reg_1103 );

    SC_METHOD(thread_or_ln257_fu_527_p2);
    sensitive << ( icmp_ln257_reg_1058 );
    sensitive << ( icmp_ln257_6_reg_1063 );

    SC_METHOD(thread_or_ln46_fu_443_p2);
    sensitive << ( tmp_31_reg_1031 );

    SC_METHOD(thread_or_ln48_fu_487_p2);
    sensitive << ( tmp_31_reg_1031 );

    SC_METHOD(thread_or_ln49_fu_513_p2);
    sensitive << ( tmp_31_reg_1031 );

    SC_METHOD(thread_or_ln50_fu_544_p2);
    sensitive << ( tmp_31_reg_1031 );

    SC_METHOD(thread_or_ln51_fu_590_p2);
    sensitive << ( tmp_31_reg_1031 );

    SC_METHOD(thread_or_ln52_fu_428_p2);
    sensitive << ( tmp_31_fu_420_p3 );

    SC_METHOD(thread_or_ln53_fu_604_p2);
    sensitive << ( tmp_31_reg_1031 );

    SC_METHOD(thread_or_ln55_fu_618_p2);
    sensitive << ( tmp_31_reg_1031 );

    SC_METHOD(thread_or_ln56_fu_632_p2);
    sensitive << ( tmp_31_reg_1031 );

    SC_METHOD(thread_or_ln62_fu_584_p2);
    sensitive << ( hasMemSizeError_fu_578_p2 );
    sensitive << ( isNotRunning_fu_572_p2 );

    SC_METHOD(thread_p_Result_8_fu_658_p3);
    sensitive << ( trunc_ln368_3_fu_654_p1 );

    SC_METHOD(thread_p_Result_s_fu_501_p3);
    sensitive << ( trunc_ln368_reg_1053 );

    SC_METHOD(thread_p_Val2_8_fu_673_p1);
    sensitive << ( grp_fu_355_p2 );

    SC_METHOD(thread_periodRatio_fu_666_p1);
    sensitive << ( p_Result_8_fu_658_p3 );

    SC_METHOD(thread_r_V_1_fu_754_p2);
    sensitive << ( zext_ln682_fu_734_p1 );
    sensitive << ( zext_ln1287_fu_744_p1 );

    SC_METHOD(thread_r_V_fu_748_p2);
    sensitive << ( mantissa_V_fu_725_p4 );
    sensitive << ( sext_ln1311_2_fu_741_p1 );

    SC_METHOD(thread_select_ln82_fu_907_p3);
    sensitive << ( icmp_ln887_fu_895_p2 );
    sensitive << ( add_ln82_fu_901_p2 );

    SC_METHOD(thread_select_ln91_fu_941_p3);
    sensitive << ( icmp_ln887_1_reg_1245 );
    sensitive << ( add_ln91_fu_935_p2 );

    SC_METHOD(thread_sext_ln1311_1_fu_738_p1);
    sensitive << ( ush_reg_1198 );

    SC_METHOD(thread_sext_ln1311_2_fu_741_p1);
    sensitive << ( ush_reg_1198 );

    SC_METHOD(thread_sext_ln1311_fu_713_p1);
    sensitive << ( sub_ln1311_fu_708_p2 );

    SC_METHOD(thread_sext_ln1354_1_fu_925_p1);
    sensitive << ( grp_fu_396_p2 );

    SC_METHOD(thread_sext_ln1354_fu_891_p1);
    sensitive << ( grp_fu_396_p2 );

    SC_METHOD(thread_shl_ln1_fu_955_p3);
    sensitive << ( i_op_assign_3_reg_290 );

    SC_METHOD(thread_shl_ln_fu_837_p3);
    sensitive << ( i_op_assign_2_reg_279 );

    SC_METHOD(thread_sub_ln1311_fu_708_p2);
    sensitive << ( tmp_V_reg_1182 );

    SC_METHOD(thread_sub_ln72_1_fu_795_p2);
    sensitive << ( reg_401 );
    sensitive << ( i_op_assign_3_reg_290 );

    SC_METHOD(thread_sub_ln72_fu_807_p2);
    sensitive << ( i_op_assign_2_reg_279 );
    sensitive << ( i_op_assign_3_reg_290 );

    SC_METHOD(thread_tmp_23_fu_465_p4);
    sensitive << ( config_r_q0 );

    SC_METHOD(thread_tmp_31_fu_420_p3);
    sensitive << ( config_offset );

    SC_METHOD(thread_tmp_32_fu_448_p3);
    sensitive << ( or_ln46_fu_443_p2 );

    SC_METHOD(thread_tmp_33_fu_492_p3);
    sensitive << ( or_ln48_fu_487_p2 );

    SC_METHOD(thread_tmp_34_fu_518_p3);
    sensitive << ( or_ln49_fu_513_p2 );

    SC_METHOD(thread_tmp_35_fu_549_p3);
    sensitive << ( or_ln50_fu_544_p2 );

    SC_METHOD(thread_tmp_36_fu_595_p3);
    sensitive << ( or_ln51_fu_590_p2 );

    SC_METHOD(thread_tmp_37_fu_434_p3);
    sensitive << ( or_ln52_fu_428_p2 );

    SC_METHOD(thread_tmp_38_fu_609_p3);
    sensitive << ( or_ln53_fu_604_p2 );

    SC_METHOD(thread_tmp_39_fu_623_p3);
    sensitive << ( or_ln55_fu_618_p2 );

    SC_METHOD(thread_tmp_40_fu_637_p3);
    sensitive << ( or_ln56_fu_632_p2 );

    SC_METHOD(thread_tmp_42_fu_772_p4);
    sensitive << ( r_V_1_fu_754_p2 );

    SC_METHOD(thread_tmp_V_1_fu_687_p1);
    sensitive << ( p_Val2_8_fu_673_p1 );

    SC_METHOD(thread_tmp_fu_760_p3);
    sensitive << ( r_V_fu_748_p2 );

    SC_METHOD(thread_trunc_ln257_fu_461_p1);
    sensitive << ( config_r_q0 );

    SC_METHOD(thread_trunc_ln302_fu_558_p1);
    sensitive << ( reg_401 );

    SC_METHOD(thread_trunc_ln368_3_fu_654_p1);
    sensitive << ( config_r_q0 );

    SC_METHOD(thread_trunc_ln368_fu_457_p1);
    sensitive << ( config_r_q0 );

    SC_METHOD(thread_ush_fu_717_p3);
    sensitive << ( isNeg_fu_700_p3 );
    sensitive << ( add_ln339_fu_694_p2 );
    sensitive << ( sext_ln1311_fu_713_p1 );

    SC_METHOD(thread_val_V_fu_782_p3);
    sensitive << ( isNeg_reg_1193 );
    sensitive << ( zext_ln662_fu_768_p1 );
    sensitive << ( tmp_42_fu_772_p4 );

    SC_METHOD(thread_val_assign_s_fu_562_p4);
    sensitive << ( config_r_q0 );

    SC_METHOD(thread_zext_ln1287_fu_744_p1);
    sensitive << ( sext_ln1311_1_fu_738_p1 );

    SC_METHOD(thread_zext_ln339_fu_691_p1);
    sensitive << ( tmp_V_reg_1182 );

    SC_METHOD(thread_zext_ln662_fu_768_p1);
    sensitive << ( tmp_fu_760_p3 );

    SC_METHOD(thread_zext_ln682_fu_734_p1);
    sensitive << ( mantissa_V_fu_725_p4 );

    SC_METHOD(thread_zext_ln78_1_fu_830_p1);
    sensitive << ( memAddr_reg_1084 );

    SC_METHOD(thread_zext_ln78_2_fu_833_p1);
    sensitive << ( i_op_assign_2_reg_279 );

    SC_METHOD(thread_zext_ln78_3_fu_845_p1);
    sensitive << ( shl_ln_fu_837_p3 );

    SC_METHOD(thread_zext_ln78_4_fu_855_p1);
    sensitive << ( add_ln78_fu_849_p2 );

    SC_METHOD(thread_zext_ln78_fu_827_p1);
    sensitive << ( memAddr_reg_1084 );

    SC_METHOD(thread_zext_ln79_1_fu_881_p1);
    sensitive << ( add_ln79_1_fu_875_p2 );

    SC_METHOD(thread_zext_ln79_fu_871_p1);
    sensitive << ( add_ln79_fu_865_p2 );

    SC_METHOD(thread_zext_ln89_1_fu_952_p1);
    sensitive << ( memAddr_reg_1084 );

    SC_METHOD(thread_zext_ln89_2_fu_921_p1);
    sensitive << ( i_op_assign_3_reg_290 );

    SC_METHOD(thread_zext_ln89_3_fu_963_p1);
    sensitive << ( shl_ln1_fu_955_p3 );

    SC_METHOD(thread_zext_ln89_4_fu_973_p1);
    sensitive << ( add_ln89_fu_967_p2 );

    SC_METHOD(thread_zext_ln89_fu_949_p1);
    sensitive << ( memAddr_reg_1084 );

    SC_METHOD(thread_zext_ln90_1_fu_999_p1);
    sensitive << ( add_ln90_1_fu_993_p2 );

    SC_METHOD(thread_zext_ln90_fu_989_p1);
    sensitive << ( add_ln90_fu_983_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( m_axi_extMemPtr_V_WREADY );
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( m_axi_extMemPtr_V_RVALID );
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( or_ln62_reg_1108 );
    sensitive << ( ap_block_state45_io );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln76_reg_1204 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000001";
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "effect_delay_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, inData_l, "(port)inData_l");
    sc_trace(mVcdFile, inData_r, "(port)inData_r");
    sc_trace(mVcdFile, config_r_address0, "(port)config_r_address0");
    sc_trace(mVcdFile, config_r_ce0, "(port)config_r_ce0");
    sc_trace(mVcdFile, config_r_we0, "(port)config_r_we0");
    sc_trace(mVcdFile, config_r_d0, "(port)config_r_d0");
    sc_trace(mVcdFile, config_r_q0, "(port)config_r_q0");
    sc_trace(mVcdFile, config_offset, "(port)config_offset");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWVALID, "(port)m_axi_extMemPtr_V_AWVALID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWREADY, "(port)m_axi_extMemPtr_V_AWREADY");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWADDR, "(port)m_axi_extMemPtr_V_AWADDR");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWID, "(port)m_axi_extMemPtr_V_AWID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWLEN, "(port)m_axi_extMemPtr_V_AWLEN");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWSIZE, "(port)m_axi_extMemPtr_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWBURST, "(port)m_axi_extMemPtr_V_AWBURST");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWLOCK, "(port)m_axi_extMemPtr_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWCACHE, "(port)m_axi_extMemPtr_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWPROT, "(port)m_axi_extMemPtr_V_AWPROT");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWQOS, "(port)m_axi_extMemPtr_V_AWQOS");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWREGION, "(port)m_axi_extMemPtr_V_AWREGION");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWUSER, "(port)m_axi_extMemPtr_V_AWUSER");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WVALID, "(port)m_axi_extMemPtr_V_WVALID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WREADY, "(port)m_axi_extMemPtr_V_WREADY");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WDATA, "(port)m_axi_extMemPtr_V_WDATA");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WSTRB, "(port)m_axi_extMemPtr_V_WSTRB");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WLAST, "(port)m_axi_extMemPtr_V_WLAST");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WID, "(port)m_axi_extMemPtr_V_WID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WUSER, "(port)m_axi_extMemPtr_V_WUSER");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARVALID, "(port)m_axi_extMemPtr_V_ARVALID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARREADY, "(port)m_axi_extMemPtr_V_ARREADY");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARADDR, "(port)m_axi_extMemPtr_V_ARADDR");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARID, "(port)m_axi_extMemPtr_V_ARID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARLEN, "(port)m_axi_extMemPtr_V_ARLEN");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARSIZE, "(port)m_axi_extMemPtr_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARBURST, "(port)m_axi_extMemPtr_V_ARBURST");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARLOCK, "(port)m_axi_extMemPtr_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARCACHE, "(port)m_axi_extMemPtr_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARPROT, "(port)m_axi_extMemPtr_V_ARPROT");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARQOS, "(port)m_axi_extMemPtr_V_ARQOS");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARREGION, "(port)m_axi_extMemPtr_V_ARREGION");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARUSER, "(port)m_axi_extMemPtr_V_ARUSER");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RVALID, "(port)m_axi_extMemPtr_V_RVALID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RREADY, "(port)m_axi_extMemPtr_V_RREADY");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RDATA, "(port)m_axi_extMemPtr_V_RDATA");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RLAST, "(port)m_axi_extMemPtr_V_RLAST");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RID, "(port)m_axi_extMemPtr_V_RID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RUSER, "(port)m_axi_extMemPtr_V_RUSER");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RRESP, "(port)m_axi_extMemPtr_V_RRESP");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_BVALID, "(port)m_axi_extMemPtr_V_BVALID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_BREADY, "(port)m_axi_extMemPtr_V_BREADY");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_BRESP, "(port)m_axi_extMemPtr_V_BRESP");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_BID, "(port)m_axi_extMemPtr_V_BID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_BUSER, "(port)m_axi_extMemPtr_V_BUSER");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, extMemPtr_V_blk_n_AR, "extMemPtr_V_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, extMemPtr_V_blk_n_R, "extMemPtr_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, extMemPtr_V_blk_n_AW, "extMemPtr_V_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, extMemPtr_V_blk_n_W, "extMemPtr_V_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, extMemPtr_V_blk_n_B, "extMemPtr_V_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, or_ln62_reg_1108, "or_ln62_reg_1108");
    sc_trace(mVcdFile, reg_401, "reg_401");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, reg_406, "reg_406");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, reg_411, "reg_411");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln891_reg_1169, "icmp_ln891_reg_1169");
    sc_trace(mVcdFile, grp_fu_343_p2, "grp_fu_343_p2");
    sc_trace(mVcdFile, reg_416, "reg_416");
    sc_trace(mVcdFile, ap_block_state45_io, "ap_block_state45_io");
    sc_trace(mVcdFile, tmp_31_fu_420_p3, "tmp_31_fu_420_p3");
    sc_trace(mVcdFile, tmp_31_reg_1031, "tmp_31_reg_1031");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, trunc_ln368_fu_457_p1, "trunc_ln368_fu_457_p1");
    sc_trace(mVcdFile, trunc_ln368_reg_1053, "trunc_ln368_reg_1053");
    sc_trace(mVcdFile, icmp_ln257_fu_475_p2, "icmp_ln257_fu_475_p2");
    sc_trace(mVcdFile, icmp_ln257_reg_1058, "icmp_ln257_reg_1058");
    sc_trace(mVcdFile, icmp_ln257_6_fu_481_p2, "icmp_ln257_6_fu_481_p2");
    sc_trace(mVcdFile, icmp_ln257_6_reg_1063, "icmp_ln257_6_reg_1063");
    sc_trace(mVcdFile, bitcast_ln348_fu_508_p1, "bitcast_ln348_fu_508_p1");
    sc_trace(mVcdFile, bitcast_ln348_reg_1073, "bitcast_ln348_reg_1073");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, memAddr_reg_1084, "memAddr_reg_1084");
    sc_trace(mVcdFile, feedbackVolRatio_fu_537_p3, "feedbackVolRatio_fu_537_p3");
    sc_trace(mVcdFile, feedbackVolRatio_reg_1092, "feedbackVolRatio_reg_1092");
    sc_trace(mVcdFile, val_assign_s_fu_562_p4, "val_assign_s_fu_562_p4");
    sc_trace(mVcdFile, val_assign_s_reg_1103, "val_assign_s_reg_1103");
    sc_trace(mVcdFile, or_ln62_fu_584_p2, "or_ln62_fu_584_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, wrIndex_reg_1136, "wrIndex_reg_1136");
    sc_trace(mVcdFile, rdIndex_reg_1141, "rdIndex_reg_1141");
    sc_trace(mVcdFile, directVolRatio_fu_646_p1, "directVolRatio_fu_646_p1");
    sc_trace(mVcdFile, directVolRatio_reg_1146, "directVolRatio_reg_1146");
    sc_trace(mVcdFile, delayVolRatio_fu_650_p1, "delayVolRatio_fu_650_p1");
    sc_trace(mVcdFile, delayVolRatio_reg_1152, "delayVolRatio_reg_1152");
    sc_trace(mVcdFile, periodRatio_fu_666_p1, "periodRatio_fu_666_p1");
    sc_trace(mVcdFile, periodRatio_reg_1158, "periodRatio_reg_1158");
    sc_trace(mVcdFile, maxIndex_V_fu_670_p1, "maxIndex_V_fu_670_p1");
    sc_trace(mVcdFile, maxIndex_V_reg_1163, "maxIndex_V_reg_1163");
    sc_trace(mVcdFile, grp_fu_391_p2, "grp_fu_391_p2");
    sc_trace(mVcdFile, icmp_ln891_1_reg_1173, "icmp_ln891_1_reg_1173");
    sc_trace(mVcdFile, grp_fu_383_p1, "grp_fu_383_p1");
    sc_trace(mVcdFile, tmp_s_reg_1177, "tmp_s_reg_1177");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_V_reg_1182, "tmp_V_reg_1182");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, tmp_V_1_fu_687_p1, "tmp_V_1_fu_687_p1");
    sc_trace(mVcdFile, tmp_V_1_reg_1188, "tmp_V_1_reg_1188");
    sc_trace(mVcdFile, isNeg_fu_700_p3, "isNeg_fu_700_p3");
    sc_trace(mVcdFile, isNeg_reg_1193, "isNeg_reg_1193");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ush_fu_717_p3, "ush_fu_717_p3");
    sc_trace(mVcdFile, ush_reg_1198, "ush_reg_1198");
    sc_trace(mVcdFile, icmp_ln76_fu_821_p2, "icmp_ln76_fu_821_p2");
    sc_trace(mVcdFile, icmp_ln76_reg_1204, "icmp_ln76_reg_1204");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, extMemPtr_V_addr_reg_1208, "extMemPtr_V_addr_reg_1208");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, extMemPtr_V_addr_1_reg_1214, "extMemPtr_V_addr_1_reg_1214");
    sc_trace(mVcdFile, select_ln82_fu_907_p3, "select_ln82_fu_907_p3");
    sc_trace(mVcdFile, select_ln82_reg_1220, "select_ln82_reg_1220");
    sc_trace(mVcdFile, auxRawL_V_reg_1225, "auxRawL_V_reg_1225");
    sc_trace(mVcdFile, auxRawR_V_reg_1230, "auxRawR_V_reg_1230");
    sc_trace(mVcdFile, auxL_fu_915_p1, "auxL_fu_915_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, auxR_fu_918_p1, "auxR_fu_918_p1");
    sc_trace(mVcdFile, icmp_ln887_1_fu_929_p2, "icmp_ln887_1_fu_929_p2");
    sc_trace(mVcdFile, icmp_ln887_1_reg_1245, "icmp_ln887_1_reg_1245");
    sc_trace(mVcdFile, grp_fu_355_p2, "grp_fu_355_p2");
    sc_trace(mVcdFile, tmp_16_reg_1250, "tmp_16_reg_1250");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, grp_fu_360_p2, "grp_fu_360_p2");
    sc_trace(mVcdFile, tmp_17_reg_1255, "tmp_17_reg_1255");
    sc_trace(mVcdFile, grp_fu_365_p2, "grp_fu_365_p2");
    sc_trace(mVcdFile, tmp_18_reg_1260, "tmp_18_reg_1260");
    sc_trace(mVcdFile, grp_fu_369_p2, "grp_fu_369_p2");
    sc_trace(mVcdFile, tmp_19_reg_1265, "tmp_19_reg_1265");
    sc_trace(mVcdFile, grp_fu_374_p2, "grp_fu_374_p2");
    sc_trace(mVcdFile, tmp_20_reg_1270, "tmp_20_reg_1270");
    sc_trace(mVcdFile, grp_fu_378_p2, "grp_fu_378_p2");
    sc_trace(mVcdFile, tmp_21_reg_1275, "tmp_21_reg_1275");
    sc_trace(mVcdFile, extMemPtr_V_addr_2_reg_1280, "extMemPtr_V_addr_2_reg_1280");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, extMemPtr_V_addr_3_reg_1286, "extMemPtr_V_addr_3_reg_1286");
    sc_trace(mVcdFile, grp_fu_347_p2, "grp_fu_347_p2");
    sc_trace(mVcdFile, dst_l_reg_1292, "dst_l_reg_1292");
    sc_trace(mVcdFile, grp_fu_351_p2, "grp_fu_351_p2");
    sc_trace(mVcdFile, dst_r_reg_1297, "dst_r_reg_1297");
    sc_trace(mVcdFile, i_op_assign_2_reg_279, "i_op_assign_2_reg_279");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_op_assign_3_reg_290, "i_op_assign_3_reg_290");
    sc_trace(mVcdFile, auxL_0_reg_301, "auxL_0_reg_301");
    sc_trace(mVcdFile, auxR_0_reg_313, "auxR_0_reg_313");
    sc_trace(mVcdFile, ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4, "ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4");
    sc_trace(mVcdFile, agg_result_l_write_a_reg_325, "agg_result_l_write_a_reg_325");
    sc_trace(mVcdFile, ap_block_state51, "ap_block_state51");
    sc_trace(mVcdFile, ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4, "ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4");
    sc_trace(mVcdFile, agg_result_r_write_a_reg_334, "agg_result_r_write_a_reg_334");
    sc_trace(mVcdFile, tmp_37_fu_434_p3, "tmp_37_fu_434_p3");
    sc_trace(mVcdFile, tmp_32_fu_448_p3, "tmp_32_fu_448_p3");
    sc_trace(mVcdFile, tmp_33_fu_492_p3, "tmp_33_fu_492_p3");
    sc_trace(mVcdFile, tmp_34_fu_518_p3, "tmp_34_fu_518_p3");
    sc_trace(mVcdFile, tmp_35_fu_549_p3, "tmp_35_fu_549_p3");
    sc_trace(mVcdFile, tmp_36_fu_595_p3, "tmp_36_fu_595_p3");
    sc_trace(mVcdFile, tmp_38_fu_609_p3, "tmp_38_fu_609_p3");
    sc_trace(mVcdFile, tmp_39_fu_623_p3, "tmp_39_fu_623_p3");
    sc_trace(mVcdFile, tmp_40_fu_637_p3, "tmp_40_fu_637_p3");
    sc_trace(mVcdFile, zext_ln78_4_fu_855_p1, "zext_ln78_4_fu_855_p1");
    sc_trace(mVcdFile, zext_ln79_1_fu_881_p1, "zext_ln79_1_fu_881_p1");
    sc_trace(mVcdFile, zext_ln89_4_fu_973_p1, "zext_ln89_4_fu_973_p1");
    sc_trace(mVcdFile, zext_ln90_1_fu_999_p1, "zext_ln90_1_fu_999_p1");
    sc_trace(mVcdFile, bitcast_ln705_fu_1009_p1, "bitcast_ln705_fu_1009_p1");
    sc_trace(mVcdFile, bitcast_ln705_4_fu_1014_p1, "bitcast_ln705_4_fu_1014_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, select_ln91_fu_941_p3, "select_ln91_fu_941_p3");
    sc_trace(mVcdFile, grp_fu_343_p0, "grp_fu_343_p0");
    sc_trace(mVcdFile, grp_fu_343_p1, "grp_fu_343_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, grp_fu_355_p0, "grp_fu_355_p0");
    sc_trace(mVcdFile, grp_fu_355_p1, "grp_fu_355_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_fu_386_p0, "grp_fu_386_p0");
    sc_trace(mVcdFile, or_ln52_fu_428_p2, "or_ln52_fu_428_p2");
    sc_trace(mVcdFile, or_ln46_fu_443_p2, "or_ln46_fu_443_p2");
    sc_trace(mVcdFile, tmp_23_fu_465_p4, "tmp_23_fu_465_p4");
    sc_trace(mVcdFile, trunc_ln257_fu_461_p1, "trunc_ln257_fu_461_p1");
    sc_trace(mVcdFile, or_ln48_fu_487_p2, "or_ln48_fu_487_p2");
    sc_trace(mVcdFile, p_Result_s_fu_501_p3, "p_Result_s_fu_501_p3");
    sc_trace(mVcdFile, or_ln49_fu_513_p2, "or_ln49_fu_513_p2");
    sc_trace(mVcdFile, or_ln257_fu_527_p2, "or_ln257_fu_527_p2");
    sc_trace(mVcdFile, grp_fu_386_p2, "grp_fu_386_p2");
    sc_trace(mVcdFile, and_ln257_fu_531_p2, "and_ln257_fu_531_p2");
    sc_trace(mVcdFile, or_ln50_fu_544_p2, "or_ln50_fu_544_p2");
    sc_trace(mVcdFile, trunc_ln302_fu_558_p1, "trunc_ln302_fu_558_p1");
    sc_trace(mVcdFile, hasMemSizeError_fu_578_p2, "hasMemSizeError_fu_578_p2");
    sc_trace(mVcdFile, isNotRunning_fu_572_p2, "isNotRunning_fu_572_p2");
    sc_trace(mVcdFile, or_ln51_fu_590_p2, "or_ln51_fu_590_p2");
    sc_trace(mVcdFile, or_ln53_fu_604_p2, "or_ln53_fu_604_p2");
    sc_trace(mVcdFile, or_ln55_fu_618_p2, "or_ln55_fu_618_p2");
    sc_trace(mVcdFile, or_ln56_fu_632_p2, "or_ln56_fu_632_p2");
    sc_trace(mVcdFile, trunc_ln368_3_fu_654_p1, "trunc_ln368_3_fu_654_p1");
    sc_trace(mVcdFile, p_Result_8_fu_658_p3, "p_Result_8_fu_658_p3");
    sc_trace(mVcdFile, p_Val2_8_fu_673_p1, "p_Val2_8_fu_673_p1");
    sc_trace(mVcdFile, zext_ln339_fu_691_p1, "zext_ln339_fu_691_p1");
    sc_trace(mVcdFile, add_ln339_fu_694_p2, "add_ln339_fu_694_p2");
    sc_trace(mVcdFile, sub_ln1311_fu_708_p2, "sub_ln1311_fu_708_p2");
    sc_trace(mVcdFile, sext_ln1311_fu_713_p1, "sext_ln1311_fu_713_p1");
    sc_trace(mVcdFile, mantissa_V_fu_725_p4, "mantissa_V_fu_725_p4");
    sc_trace(mVcdFile, sext_ln1311_1_fu_738_p1, "sext_ln1311_1_fu_738_p1");
    sc_trace(mVcdFile, sext_ln1311_2_fu_741_p1, "sext_ln1311_2_fu_741_p1");
    sc_trace(mVcdFile, zext_ln682_fu_734_p1, "zext_ln682_fu_734_p1");
    sc_trace(mVcdFile, zext_ln1287_fu_744_p1, "zext_ln1287_fu_744_p1");
    sc_trace(mVcdFile, r_V_fu_748_p2, "r_V_fu_748_p2");
    sc_trace(mVcdFile, tmp_fu_760_p3, "tmp_fu_760_p3");
    sc_trace(mVcdFile, r_V_1_fu_754_p2, "r_V_1_fu_754_p2");
    sc_trace(mVcdFile, zext_ln662_fu_768_p1, "zext_ln662_fu_768_p1");
    sc_trace(mVcdFile, tmp_42_fu_772_p4, "tmp_42_fu_772_p4");
    sc_trace(mVcdFile, sub_ln72_1_fu_795_p2, "sub_ln72_1_fu_795_p2");
    sc_trace(mVcdFile, icmp_ln72_fu_789_p2, "icmp_ln72_fu_789_p2");
    sc_trace(mVcdFile, add_ln72_fu_801_p2, "add_ln72_fu_801_p2");
    sc_trace(mVcdFile, sub_ln72_fu_807_p2, "sub_ln72_fu_807_p2");
    sc_trace(mVcdFile, currentPeriod_fu_813_p3, "currentPeriod_fu_813_p3");
    sc_trace(mVcdFile, val_V_fu_782_p3, "val_V_fu_782_p3");
    sc_trace(mVcdFile, shl_ln_fu_837_p3, "shl_ln_fu_837_p3");
    sc_trace(mVcdFile, zext_ln78_1_fu_830_p1, "zext_ln78_1_fu_830_p1");
    sc_trace(mVcdFile, zext_ln78_3_fu_845_p1, "zext_ln78_3_fu_845_p1");
    sc_trace(mVcdFile, add_ln78_fu_849_p2, "add_ln78_fu_849_p2");
    sc_trace(mVcdFile, zext_ln78_fu_827_p1, "zext_ln78_fu_827_p1");
    sc_trace(mVcdFile, add_ln79_fu_865_p2, "add_ln79_fu_865_p2");
    sc_trace(mVcdFile, zext_ln79_fu_871_p1, "zext_ln79_fu_871_p1");
    sc_trace(mVcdFile, add_ln79_1_fu_875_p2, "add_ln79_1_fu_875_p2");
    sc_trace(mVcdFile, grp_fu_396_p2, "grp_fu_396_p2");
    sc_trace(mVcdFile, zext_ln78_2_fu_833_p1, "zext_ln78_2_fu_833_p1");
    sc_trace(mVcdFile, sext_ln1354_fu_891_p1, "sext_ln1354_fu_891_p1");
    sc_trace(mVcdFile, icmp_ln887_fu_895_p2, "icmp_ln887_fu_895_p2");
    sc_trace(mVcdFile, add_ln82_fu_901_p2, "add_ln82_fu_901_p2");
    sc_trace(mVcdFile, zext_ln89_2_fu_921_p1, "zext_ln89_2_fu_921_p1");
    sc_trace(mVcdFile, sext_ln1354_1_fu_925_p1, "sext_ln1354_1_fu_925_p1");
    sc_trace(mVcdFile, add_ln91_fu_935_p2, "add_ln91_fu_935_p2");
    sc_trace(mVcdFile, shl_ln1_fu_955_p3, "shl_ln1_fu_955_p3");
    sc_trace(mVcdFile, zext_ln89_1_fu_952_p1, "zext_ln89_1_fu_952_p1");
    sc_trace(mVcdFile, zext_ln89_3_fu_963_p1, "zext_ln89_3_fu_963_p1");
    sc_trace(mVcdFile, add_ln89_fu_967_p2, "add_ln89_fu_967_p2");
    sc_trace(mVcdFile, zext_ln89_fu_949_p1, "zext_ln89_fu_949_p1");
    sc_trace(mVcdFile, add_ln90_fu_983_p2, "add_ln90_fu_983_p2");
    sc_trace(mVcdFile, zext_ln90_fu_989_p1, "zext_ln90_fu_989_p1");
    sc_trace(mVcdFile, add_ln90_1_fu_993_p2, "add_ln90_1_fu_993_p2");
    sc_trace(mVcdFile, grp_fu_343_ce, "grp_fu_343_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, grp_fu_347_ce, "grp_fu_347_ce");
    sc_trace(mVcdFile, grp_fu_351_ce, "grp_fu_351_ce");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

effect_delay::~effect_delay() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete pynq_dsp_hls_faddbkb_U12;
    delete pynq_dsp_hls_faddbkb_U13;
    delete pynq_dsp_hls_faddbkb_U14;
    delete pynq_dsp_hls_fmulcud_U15;
    delete pynq_dsp_hls_fmulcud_U16;
    delete pynq_dsp_hls_fmulcud_U17;
    delete pynq_dsp_hls_fmulcud_U18;
    delete pynq_dsp_hls_fmulcud_U19;
    delete pynq_dsp_hls_fmulcud_U20;
    delete pynq_dsp_hls_uitodEe_U21;
    delete pynq_dsp_hls_fcmpeOg_U22;
}

void effect_delay::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void effect_delay::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3F4CCCCD;
}

void effect_delay::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void effect_delay::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_1))) {
        agg_result_l_write_a_reg_325 = inData_l.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
                esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_BVALID.read())))) {
        agg_result_l_write_a_reg_325 = dst_l_reg_1292.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_1))) {
        agg_result_r_write_a_reg_334 = inData_r.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
                esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_BVALID.read())))) {
        agg_result_r_write_a_reg_334 = dst_r_reg_1297.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
             !(esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_BVALID.read())))) {
            ap_return_0_preg = ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
             !(esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_BVALID.read())))) {
            ap_return_1_preg = ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln76_reg_1204.read()))) {
        auxL_0_reg_301 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln76_reg_1204.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        auxL_0_reg_301 = auxL_fu_915_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln76_reg_1204.read()))) {
        auxR_0_reg_313 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln76_reg_1204.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        auxR_0_reg_313 = auxR_fu_918_p1.read();
    }
    if ((esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_ln891_reg_1169.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_391_p2.read()))) {
        i_op_assign_2_reg_279 = config_r_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln891_1_reg_1173.read()) || 
                  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln891_reg_1169.read())) || 
                 esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_1)))) {
        i_op_assign_2_reg_279 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_ln891_reg_1169.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, grp_fu_391_p2.read()))) {
        i_op_assign_3_reg_290 = reg_406.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln891_1_reg_1173.read()) || 
                  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln891_reg_1169.read())) || 
                 esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_1)))) {
        i_op_assign_3_reg_290 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1))) {
        auxRawL_V_reg_1225 = m_axi_extMemPtr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1))) {
        auxRawR_V_reg_1230 = m_axi_extMemPtr_V_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bitcast_ln348_reg_1073 = bitcast_ln348_fu_508_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        delayVolRatio_reg_1152 = delayVolRatio_fu_650_p1.read();
        directVolRatio_reg_1146 = directVolRatio_fu_646_p1.read();
        maxIndex_V_reg_1163 = maxIndex_V_fu_670_p1.read();
        periodRatio_reg_1158 = periodRatio_fu_666_p1.read();
        rdIndex_reg_1141 =  (sc_lv<8>) (tmp_40_fu_637_p3.read());
        wrIndex_reg_1136 =  (sc_lv<8>) (tmp_39_fu_623_p3.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1))) {
        dst_l_reg_1292 = grp_fu_347_p2.read();
        dst_r_reg_1297 = grp_fu_351_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln76_reg_1204.read()))) {
        extMemPtr_V_addr_1_reg_1214 =  (sc_lv<32>) (zext_ln79_1_fu_881_p1.read());
        extMemPtr_V_addr_reg_1208 =  (sc_lv<32>) (zext_ln78_4_fu_855_p1.read());
        select_ln82_reg_1220 = select_ln82_fu_907_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        extMemPtr_V_addr_2_reg_1280 =  (sc_lv<32>) (zext_ln89_4_fu_973_p1.read());
        extMemPtr_V_addr_3_reg_1286 =  (sc_lv<32>) (zext_ln90_1_fu_999_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        feedbackVolRatio_reg_1092 = feedbackVolRatio_fu_537_p3.read();
        memAddr_reg_1084 = config_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        icmp_ln257_6_reg_1063 = icmp_ln257_6_fu_481_p2.read();
        icmp_ln257_reg_1058 = icmp_ln257_fu_475_p2.read();
        trunc_ln368_reg_1053 = trunc_ln368_fu_457_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        icmp_ln76_reg_1204 = icmp_ln76_fu_821_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        icmp_ln887_1_reg_1245 = icmp_ln887_1_fu_929_p2.read();
    }
    if ((esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(icmp_ln891_reg_1169.read(), ap_const_lv1_1))) {
        icmp_ln891_1_reg_1173 = grp_fu_391_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        icmp_ln891_reg_1169 = grp_fu_391_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        isNeg_reg_1193 = add_ln339_fu_694_p2.read().range(8, 8);
        ush_reg_1198 = ush_fu_717_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        or_ln62_reg_1108 = or_ln62_fu_584_p2.read();
        val_assign_s_reg_1103 = config_r_q0.read().range(31, 1);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        reg_401 = config_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        reg_406 = config_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || (esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
  esl_seteq<1,1,1>(icmp_ln891_reg_1169.read(), ap_const_lv1_1)))) {
        reg_411 = config_r_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
  esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
  esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0)))) {
        reg_416 = grp_fu_343_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        tmp_16_reg_1250 = grp_fu_355_p2.read();
        tmp_17_reg_1255 = grp_fu_360_p2.read();
        tmp_18_reg_1260 = grp_fu_365_p2.read();
        tmp_19_reg_1265 = grp_fu_369_p2.read();
        tmp_20_reg_1270 = grp_fu_374_p2.read();
        tmp_21_reg_1275 = grp_fu_378_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_31_reg_1031 = tmp_31_fu_420_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        tmp_V_1_reg_1188 = tmp_V_1_fu_687_p1.read();
        tmp_V_reg_1182 = p_Val2_8_fu_673_p1.read().range(30, 23);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_s_reg_1177 = grp_fu_383_p1.read();
    }
}

void effect_delay::thread_add_ln339_fu_694_p2() {
    add_ln339_fu_694_p2 = (!ap_const_lv9_181.is_01() || !zext_ln339_fu_691_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(zext_ln339_fu_691_p1.read()));
}

void effect_delay::thread_add_ln72_fu_801_p2() {
    add_ln72_fu_801_p2 = (!i_op_assign_2_reg_279.read().is_01() || !sub_ln72_1_fu_795_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_op_assign_2_reg_279.read()) + sc_biguint<32>(sub_ln72_1_fu_795_p2.read()));
}

void effect_delay::thread_add_ln78_fu_849_p2() {
    add_ln78_fu_849_p2 = (!zext_ln78_1_fu_830_p1.read().is_01() || !zext_ln78_3_fu_845_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln78_1_fu_830_p1.read()) + sc_biguint<34>(zext_ln78_3_fu_845_p1.read()));
}

void effect_delay::thread_add_ln79_1_fu_875_p2() {
    add_ln79_1_fu_875_p2 = (!zext_ln78_3_fu_845_p1.read().is_01() || !zext_ln79_fu_871_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln78_3_fu_845_p1.read()) + sc_biguint<34>(zext_ln79_fu_871_p1.read()));
}

void effect_delay::thread_add_ln79_fu_865_p2() {
    add_ln79_fu_865_p2 = (!zext_ln78_fu_827_p1.read().is_01() || !ap_const_lv33_1.is_01())? sc_lv<33>(): (sc_biguint<33>(zext_ln78_fu_827_p1.read()) + sc_biguint<33>(ap_const_lv33_1));
}

void effect_delay::thread_add_ln82_fu_901_p2() {
    add_ln82_fu_901_p2 = (!i_op_assign_2_reg_279.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_op_assign_2_reg_279.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void effect_delay::thread_add_ln89_fu_967_p2() {
    add_ln89_fu_967_p2 = (!zext_ln89_1_fu_952_p1.read().is_01() || !zext_ln89_3_fu_963_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln89_1_fu_952_p1.read()) + sc_biguint<34>(zext_ln89_3_fu_963_p1.read()));
}

void effect_delay::thread_add_ln90_1_fu_993_p2() {
    add_ln90_1_fu_993_p2 = (!zext_ln89_3_fu_963_p1.read().is_01() || !zext_ln90_fu_989_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln89_3_fu_963_p1.read()) + sc_biguint<34>(zext_ln90_fu_989_p1.read()));
}

void effect_delay::thread_add_ln90_fu_983_p2() {
    add_ln90_fu_983_p2 = (!zext_ln89_fu_949_p1.read().is_01() || !ap_const_lv33_1.is_01())? sc_lv<33>(): (sc_biguint<33>(zext_ln89_fu_949_p1.read()) + sc_biguint<33>(ap_const_lv33_1));
}

void effect_delay::thread_add_ln91_fu_935_p2() {
    add_ln91_fu_935_p2 = (!i_op_assign_3_reg_290.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_op_assign_3_reg_290.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void effect_delay::thread_and_ln257_fu_531_p2() {
    and_ln257_fu_531_p2 = (or_ln257_fu_527_p2.read() & grp_fu_386_p2.read());
}

void effect_delay::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void effect_delay::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void effect_delay::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void effect_delay::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void effect_delay::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void effect_delay::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void effect_delay::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void effect_delay::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void effect_delay::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void effect_delay::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void effect_delay::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void effect_delay::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void effect_delay::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void effect_delay::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void effect_delay::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void effect_delay::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void effect_delay::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void effect_delay::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void effect_delay::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void effect_delay::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void effect_delay::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void effect_delay::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void effect_delay::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void effect_delay::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void effect_delay::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void effect_delay::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void effect_delay::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void effect_delay::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void effect_delay::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void effect_delay::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void effect_delay::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void effect_delay::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void effect_delay::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void effect_delay::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void effect_delay::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void effect_delay::thread_ap_block_state45_io() {
    ap_block_state45_io = (esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_WREADY.read()));
}

void effect_delay::thread_ap_block_state51() {
    ap_block_state51 = (esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_BVALID.read()));
}

void effect_delay::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          !(esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_BVALID.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void effect_delay::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void effect_delay::thread_ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
         esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0))) {
        ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4 = dst_l_reg_1292.read();
    } else {
        ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4 = agg_result_l_write_a_reg_325.read();
    }
}

void effect_delay::thread_ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
         esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0))) {
        ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4 = dst_r_reg_1297.read();
    } else {
        ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4 = agg_result_r_write_a_reg_334.read();
    }
}

void effect_delay::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
         !(esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_BVALID.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void effect_delay::thread_ap_return_0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
         !(esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_BVALID.read())))) {
        ap_return_0 = ap_phi_mux_agg_result_l_write_a_phi_fu_328_p4.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void effect_delay::thread_ap_return_1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
         !(esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_BVALID.read())))) {
        ap_return_1 = ap_phi_mux_agg_result_r_write_a_phi_fu_337_p4.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void effect_delay::thread_auxL_fu_915_p1() {
    auxL_fu_915_p1 = auxRawL_V_reg_1225.read();
}

void effect_delay::thread_auxR_fu_918_p1() {
    auxR_fu_918_p1 = auxRawR_V_reg_1230.read();
}

void effect_delay::thread_bitcast_ln348_fu_508_p1() {
    bitcast_ln348_fu_508_p1 = p_Result_s_fu_501_p3.read();
}

void effect_delay::thread_bitcast_ln705_4_fu_1014_p1() {
    bitcast_ln705_4_fu_1014_p1 = reg_416.read();
}

void effect_delay::thread_bitcast_ln705_fu_1009_p1() {
    bitcast_ln705_fu_1009_p1 = reg_416.read();
}

void effect_delay::thread_config_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        config_r_address0 = wrIndex_reg_1136.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        config_r_address0 = rdIndex_reg_1141.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_39_fu_623_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_38_fu_609_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_36_fu_595_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_35_fu_549_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_34_fu_518_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_33_fu_492_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_32_fu_448_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_37_fu_434_p3.read());
    } else {
        config_r_address0 = "XXXXXXXX";
    }
}

void effect_delay::thread_config_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        config_r_ce0 = ap_const_logic_1;
    } else {
        config_r_ce0 = ap_const_logic_0;
    }
}

void effect_delay::thread_config_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        config_r_d0 = select_ln91_fu_941_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        config_r_d0 = select_ln82_reg_1220.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        config_r_d0 = ap_const_lv32_0;
    } else {
        config_r_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_config_r_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln891_1_reg_1173.read()) || 
            esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln891_reg_1169.read())) || 
           esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_1))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_391_p2.read()) || 
            esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln891_reg_1169.read())) || 
           esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_1))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        config_r_we0 = ap_const_logic_1;
    } else {
        config_r_we0 = ap_const_logic_0;
    }
}

void effect_delay::thread_currentPeriod_fu_813_p3() {
    currentPeriod_fu_813_p3 = (!icmp_ln72_fu_789_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln72_fu_789_p2.read()[0].to_bool())? add_ln72_fu_801_p2.read(): sub_ln72_fu_807_p2.read());
}

void effect_delay::thread_delayVolRatio_fu_650_p1() {
    delayVolRatio_fu_650_p1 = reg_411.read();
}

void effect_delay::thread_directVolRatio_fu_646_p1() {
    directVolRatio_fu_646_p1 = reg_406.read();
}

void effect_delay::thread_extMemPtr_V_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        extMemPtr_V_blk_n_AR = m_axi_extMemPtr_V_ARREADY.read();
    } else {
        extMemPtr_V_blk_n_AR = ap_const_logic_1;
    }
}

void effect_delay::thread_extMemPtr_V_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
        extMemPtr_V_blk_n_AW = m_axi_extMemPtr_V_AWREADY.read();
    } else {
        extMemPtr_V_blk_n_AW = ap_const_logic_1;
    }
}

void effect_delay::thread_extMemPtr_V_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0)))) {
        extMemPtr_V_blk_n_B = m_axi_extMemPtr_V_BVALID.read();
    } else {
        extMemPtr_V_blk_n_B = ap_const_logic_1;
    }
}

void effect_delay::thread_extMemPtr_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        extMemPtr_V_blk_n_R = m_axi_extMemPtr_V_RVALID.read();
    } else {
        extMemPtr_V_blk_n_R = ap_const_logic_1;
    }
}

void effect_delay::thread_extMemPtr_V_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        extMemPtr_V_blk_n_W = m_axi_extMemPtr_V_WREADY.read();
    } else {
        extMemPtr_V_blk_n_W = ap_const_logic_1;
    }
}

void effect_delay::thread_feedbackVolRatio_fu_537_p3() {
    feedbackVolRatio_fu_537_p3 = (!and_ln257_fu_531_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln257_fu_531_p2.read()[0].to_bool())? ap_const_lv32_3F4CCCCD: bitcast_ln348_reg_1073.read());
}

void effect_delay::thread_grp_fu_343_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        grp_fu_343_ce = ap_const_logic_1;
    } else {
        grp_fu_343_ce = ap_const_logic_0;
    }
}

void effect_delay::thread_grp_fu_343_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_343_p0 = tmp_17_reg_1255.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_fu_343_p0 = tmp_16_reg_1250.read();
    } else {
        grp_fu_343_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_grp_fu_343_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        grp_fu_343_p1 = inData_r.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_fu_343_p1 = inData_l.read();
    } else {
        grp_fu_343_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_grp_fu_347_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        grp_fu_347_ce = ap_const_logic_1;
    } else {
        grp_fu_347_ce = ap_const_logic_0;
    }
}

void effect_delay::thread_grp_fu_351_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        grp_fu_351_ce = ap_const_logic_1;
    } else {
        grp_fu_351_ce = ap_const_logic_0;
    }
}

void effect_delay::thread_grp_fu_355_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_fu_355_p0 = auxL_0_reg_301.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_355_p0 = tmp_s_reg_1177.read();
    } else {
        grp_fu_355_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_grp_fu_355_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_fu_355_p1 = feedbackVolRatio_reg_1092.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_355_p1 = periodRatio_reg_1158.read();
    } else {
        grp_fu_355_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_grp_fu_386_p0() {
    grp_fu_386_p0 = p_Result_s_fu_501_p3.read();
}

void effect_delay::thread_grp_fu_391_p2() {
    grp_fu_391_p2 = (!config_r_q0.read().is_01() || !maxIndex_V_reg_1163.read().is_01())? sc_lv<1>(): (sc_biguint<32>(config_r_q0.read()) < sc_biguint<32>(maxIndex_V_reg_1163.read()));
}

void effect_delay::thread_grp_fu_396_p2() {
    grp_fu_396_p2 = (!maxIndex_V_reg_1163.read().is_01() || !ap_const_lv32_FFFFFFFE.is_01())? sc_lv<32>(): (sc_biguint<32>(maxIndex_V_reg_1163.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFE));
}

void effect_delay::thread_hasMemSizeError_fu_578_p2() {
    hasMemSizeError_fu_578_p2 = (!val_assign_s_fu_562_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): sc_lv<1>(val_assign_s_fu_562_p4.read() == ap_const_lv31_0);
}

void effect_delay::thread_icmp_ln257_6_fu_481_p2() {
    icmp_ln257_6_fu_481_p2 = (!trunc_ln257_fu_461_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln257_fu_461_p1.read() == ap_const_lv23_0);
}

void effect_delay::thread_icmp_ln257_fu_475_p2() {
    icmp_ln257_fu_475_p2 = (!tmp_23_fu_465_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_23_fu_465_p4.read() != ap_const_lv8_FF);
}

void effect_delay::thread_icmp_ln72_fu_789_p2() {
    icmp_ln72_fu_789_p2 = (!i_op_assign_3_reg_290.read().is_01() || !i_op_assign_2_reg_279.read().is_01())? sc_lv<1>(): (sc_biguint<32>(i_op_assign_3_reg_290.read()) < sc_biguint<32>(i_op_assign_2_reg_279.read()));
}

void effect_delay::thread_icmp_ln76_fu_821_p2() {
    icmp_ln76_fu_821_p2 = (!currentPeriod_fu_813_p3.read().is_01() || !val_V_fu_782_p3.read().is_01())? sc_lv<1>(): (sc_biguint<32>(currentPeriod_fu_813_p3.read()) < sc_biguint<32>(val_V_fu_782_p3.read()));
}

void effect_delay::thread_icmp_ln887_1_fu_929_p2() {
    icmp_ln887_1_fu_929_p2 = (!zext_ln89_2_fu_921_p1.read().is_01() || !sext_ln1354_1_fu_925_p1.read().is_01())? sc_lv<1>(): (sc_bigint<33>(zext_ln89_2_fu_921_p1.read()) < sc_bigint<33>(sext_ln1354_1_fu_925_p1.read()));
}

void effect_delay::thread_icmp_ln887_fu_895_p2() {
    icmp_ln887_fu_895_p2 = (!zext_ln78_2_fu_833_p1.read().is_01() || !sext_ln1354_fu_891_p1.read().is_01())? sc_lv<1>(): (sc_bigint<33>(zext_ln78_2_fu_833_p1.read()) < sc_bigint<33>(sext_ln1354_fu_891_p1.read()));
}

void effect_delay::thread_isNeg_fu_700_p3() {
    isNeg_fu_700_p3 = add_ln339_fu_694_p2.read().range(8, 8);
}

void effect_delay::thread_isNotRunning_fu_572_p2() {
    isNotRunning_fu_572_p2 = (trunc_ln302_fu_558_p1.read() ^ ap_const_lv1_1);
}

void effect_delay::thread_m_axi_extMemPtr_V_ARADDR() {
    if (esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1)) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            m_axi_extMemPtr_V_ARADDR = extMemPtr_V_addr_1_reg_1214.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
            m_axi_extMemPtr_V_ARADDR = extMemPtr_V_addr_reg_1208.read();
        } else {
            m_axi_extMemPtr_V_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        m_axi_extMemPtr_V_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_ARBURST() {
    m_axi_extMemPtr_V_ARBURST = ap_const_lv2_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARCACHE() {
    m_axi_extMemPtr_V_ARCACHE = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARID() {
    m_axi_extMemPtr_V_ARID = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARLEN() {
    m_axi_extMemPtr_V_ARLEN = ap_const_lv32_1;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARLOCK() {
    m_axi_extMemPtr_V_ARLOCK = ap_const_lv2_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARPROT() {
    m_axi_extMemPtr_V_ARPROT = ap_const_lv3_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARQOS() {
    m_axi_extMemPtr_V_ARQOS = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARREGION() {
    m_axi_extMemPtr_V_ARREGION = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARSIZE() {
    m_axi_extMemPtr_V_ARSIZE = ap_const_lv3_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARUSER() {
    m_axi_extMemPtr_V_ARUSER = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1)))) {
        m_axi_extMemPtr_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_extMemPtr_V_ARVALID = ap_const_logic_0;
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_AWADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
         esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0))) {
        m_axi_extMemPtr_V_AWADDR = extMemPtr_V_addr_3_reg_1286.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
                esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1))) {
        m_axi_extMemPtr_V_AWADDR = extMemPtr_V_addr_2_reg_1280.read();
    } else {
        m_axi_extMemPtr_V_AWADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_AWBURST() {
    m_axi_extMemPtr_V_AWBURST = ap_const_lv2_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWCACHE() {
    m_axi_extMemPtr_V_AWCACHE = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWID() {
    m_axi_extMemPtr_V_AWID = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWLEN() {
    m_axi_extMemPtr_V_AWLEN = ap_const_lv32_1;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWLOCK() {
    m_axi_extMemPtr_V_AWLOCK = ap_const_lv2_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWPROT() {
    m_axi_extMemPtr_V_AWPROT = ap_const_lv3_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWQOS() {
    m_axi_extMemPtr_V_AWQOS = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWREGION() {
    m_axi_extMemPtr_V_AWREGION = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWSIZE() {
    m_axi_extMemPtr_V_AWSIZE = ap_const_lv3_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWUSER() {
    m_axi_extMemPtr_V_AWUSER = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0)))) {
        m_axi_extMemPtr_V_AWVALID = ap_const_logic_1;
    } else {
        m_axi_extMemPtr_V_AWVALID = ap_const_logic_0;
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && 
          !(esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_BVALID.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1)))) {
        m_axi_extMemPtr_V_BREADY = ap_const_logic_1;
    } else {
        m_axi_extMemPtr_V_BREADY = ap_const_logic_0;
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1)))) {
        m_axi_extMemPtr_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_extMemPtr_V_RREADY = ap_const_logic_0;
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_WDATA() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        m_axi_extMemPtr_V_WDATA = bitcast_ln705_4_fu_1014_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        m_axi_extMemPtr_V_WDATA = bitcast_ln705_fu_1009_p1.read();
    } else {
        m_axi_extMemPtr_V_WDATA =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_WID() {
    m_axi_extMemPtr_V_WID = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_WLAST() {
    m_axi_extMemPtr_V_WLAST = ap_const_logic_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_WSTRB() {
    m_axi_extMemPtr_V_WSTRB = ap_const_lv4_F;
}

void effect_delay::thread_m_axi_extMemPtr_V_WUSER() {
    m_axi_extMemPtr_V_WUSER = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_WREADY.read(), ap_const_logic_1)))) {
        m_axi_extMemPtr_V_WVALID = ap_const_logic_1;
    } else {
        m_axi_extMemPtr_V_WVALID = ap_const_logic_0;
    }
}

void effect_delay::thread_mantissa_V_fu_725_p4() {
    mantissa_V_fu_725_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, tmp_V_1_reg_1188.read()), ap_const_lv1_0);
}

void effect_delay::thread_maxIndex_V_fu_670_p1() {
    maxIndex_V_fu_670_p1 = esl_zext<32,31>(val_assign_s_reg_1103.read());
}

void effect_delay::thread_or_ln257_fu_527_p2() {
    or_ln257_fu_527_p2 = (icmp_ln257_6_reg_1063.read() | icmp_ln257_reg_1058.read());
}

void effect_delay::thread_or_ln46_fu_443_p2() {
    or_ln46_fu_443_p2 = (tmp_31_reg_1031.read() | ap_const_lv9_1);
}

void effect_delay::thread_or_ln48_fu_487_p2() {
    or_ln48_fu_487_p2 = (tmp_31_reg_1031.read() | ap_const_lv9_2);
}

void effect_delay::thread_or_ln49_fu_513_p2() {
    or_ln49_fu_513_p2 = (tmp_31_reg_1031.read() | ap_const_lv9_3);
}

void effect_delay::thread_or_ln50_fu_544_p2() {
    or_ln50_fu_544_p2 = (tmp_31_reg_1031.read() | ap_const_lv9_4);
}

void effect_delay::thread_or_ln51_fu_590_p2() {
    or_ln51_fu_590_p2 = (tmp_31_reg_1031.read() | ap_const_lv9_5);
}

void effect_delay::thread_or_ln52_fu_428_p2() {
    or_ln52_fu_428_p2 = (tmp_31_fu_420_p3.read() | ap_const_lv9_6);
}

void effect_delay::thread_or_ln53_fu_604_p2() {
    or_ln53_fu_604_p2 = (tmp_31_reg_1031.read() | ap_const_lv9_7);
}

void effect_delay::thread_or_ln55_fu_618_p2() {
    or_ln55_fu_618_p2 = (tmp_31_reg_1031.read() | ap_const_lv9_8);
}

void effect_delay::thread_or_ln56_fu_632_p2() {
    or_ln56_fu_632_p2 = (tmp_31_reg_1031.read() | ap_const_lv9_9);
}

void effect_delay::thread_or_ln62_fu_584_p2() {
    or_ln62_fu_584_p2 = (hasMemSizeError_fu_578_p2.read() | isNotRunning_fu_572_p2.read());
}

void effect_delay::thread_p_Result_8_fu_658_p3() {
    p_Result_8_fu_658_p3 = esl_concat<1,31>(ap_const_lv1_0, trunc_ln368_3_fu_654_p1.read());
}

void effect_delay::thread_p_Result_s_fu_501_p3() {
    p_Result_s_fu_501_p3 = esl_concat<1,31>(ap_const_lv1_0, trunc_ln368_reg_1053.read());
}

void effect_delay::thread_p_Val2_8_fu_673_p1() {
    p_Val2_8_fu_673_p1 = grp_fu_355_p2.read();
}

void effect_delay::thread_periodRatio_fu_666_p1() {
    periodRatio_fu_666_p1 = p_Result_8_fu_658_p3.read();
}

void effect_delay::thread_r_V_1_fu_754_p2() {
    r_V_1_fu_754_p2 = (!zext_ln1287_fu_744_p1.read().is_01())? sc_lv<79>(): zext_ln682_fu_734_p1.read() << (unsigned short)zext_ln1287_fu_744_p1.read().to_uint();
}

void effect_delay::thread_r_V_fu_748_p2() {
    r_V_fu_748_p2 = (!sext_ln1311_2_fu_741_p1.read().is_01())? sc_lv<25>(): mantissa_V_fu_725_p4.read() >> (unsigned short)sext_ln1311_2_fu_741_p1.read().to_uint();
}

void effect_delay::thread_select_ln82_fu_907_p3() {
    select_ln82_fu_907_p3 = (!icmp_ln887_fu_895_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln887_fu_895_p2.read()[0].to_bool())? add_ln82_fu_901_p2.read(): ap_const_lv32_0);
}

void effect_delay::thread_select_ln91_fu_941_p3() {
    select_ln91_fu_941_p3 = (!icmp_ln887_1_reg_1245.read()[0].is_01())? sc_lv<32>(): ((icmp_ln887_1_reg_1245.read()[0].to_bool())? add_ln91_fu_935_p2.read(): ap_const_lv32_0);
}

void effect_delay::thread_sext_ln1311_1_fu_738_p1() {
    sext_ln1311_1_fu_738_p1 = esl_sext<32,9>(ush_reg_1198.read());
}

void effect_delay::thread_sext_ln1311_2_fu_741_p1() {
    sext_ln1311_2_fu_741_p1 = esl_sext<25,9>(ush_reg_1198.read());
}

void effect_delay::thread_sext_ln1311_fu_713_p1() {
    sext_ln1311_fu_713_p1 = esl_sext<9,8>(sub_ln1311_fu_708_p2.read());
}

void effect_delay::thread_sext_ln1354_1_fu_925_p1() {
    sext_ln1354_1_fu_925_p1 = esl_sext<33,32>(grp_fu_396_p2.read());
}

void effect_delay::thread_sext_ln1354_fu_891_p1() {
    sext_ln1354_fu_891_p1 = esl_sext<33,32>(grp_fu_396_p2.read());
}

void effect_delay::thread_shl_ln1_fu_955_p3() {
    shl_ln1_fu_955_p3 = esl_concat<32,1>(i_op_assign_3_reg_290.read(), ap_const_lv1_0);
}

void effect_delay::thread_shl_ln_fu_837_p3() {
    shl_ln_fu_837_p3 = esl_concat<32,1>(i_op_assign_2_reg_279.read(), ap_const_lv1_0);
}

void effect_delay::thread_sub_ln1311_fu_708_p2() {
    sub_ln1311_fu_708_p2 = (!ap_const_lv8_7F.is_01() || !tmp_V_reg_1182.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_V_reg_1182.read()));
}

void effect_delay::thread_sub_ln72_1_fu_795_p2() {
    sub_ln72_1_fu_795_p2 = (!i_op_assign_3_reg_290.read().is_01() || !reg_401.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_op_assign_3_reg_290.read()) - sc_biguint<32>(reg_401.read()));
}

void effect_delay::thread_sub_ln72_fu_807_p2() {
    sub_ln72_fu_807_p2 = (!i_op_assign_3_reg_290.read().is_01() || !i_op_assign_2_reg_279.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_op_assign_3_reg_290.read()) - sc_biguint<32>(i_op_assign_2_reg_279.read()));
}

void effect_delay::thread_tmp_23_fu_465_p4() {
    tmp_23_fu_465_p4 = config_r_q0.read().range(30, 23);
}

void effect_delay::thread_tmp_31_fu_420_p3() {
    tmp_31_fu_420_p3 = esl_concat<5,4>(config_offset.read(), ap_const_lv4_0);
}

void effect_delay::thread_tmp_32_fu_448_p3() {
    tmp_32_fu_448_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln46_fu_443_p2.read());
}

void effect_delay::thread_tmp_33_fu_492_p3() {
    tmp_33_fu_492_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln48_fu_487_p2.read());
}

void effect_delay::thread_tmp_34_fu_518_p3() {
    tmp_34_fu_518_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln49_fu_513_p2.read());
}

void effect_delay::thread_tmp_35_fu_549_p3() {
    tmp_35_fu_549_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln50_fu_544_p2.read());
}

void effect_delay::thread_tmp_36_fu_595_p3() {
    tmp_36_fu_595_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln51_fu_590_p2.read());
}

void effect_delay::thread_tmp_37_fu_434_p3() {
    tmp_37_fu_434_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln52_fu_428_p2.read());
}

void effect_delay::thread_tmp_38_fu_609_p3() {
    tmp_38_fu_609_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln53_fu_604_p2.read());
}

void effect_delay::thread_tmp_39_fu_623_p3() {
    tmp_39_fu_623_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln55_fu_618_p2.read());
}

void effect_delay::thread_tmp_40_fu_637_p3() {
    tmp_40_fu_637_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln56_fu_632_p2.read());
}

void effect_delay::thread_tmp_42_fu_772_p4() {
    tmp_42_fu_772_p4 = r_V_1_fu_754_p2.read().range(55, 24);
}

void effect_delay::thread_tmp_V_1_fu_687_p1() {
    tmp_V_1_fu_687_p1 = p_Val2_8_fu_673_p1.read().range(23-1, 0);
}

void effect_delay::thread_tmp_fu_760_p3() {
    tmp_fu_760_p3 = r_V_fu_748_p2.read().range(24, 24);
}

void effect_delay::thread_trunc_ln257_fu_461_p1() {
    trunc_ln257_fu_461_p1 = config_r_q0.read().range(23-1, 0);
}

void effect_delay::thread_trunc_ln302_fu_558_p1() {
    trunc_ln302_fu_558_p1 = reg_401.read().range(1-1, 0);
}

void effect_delay::thread_trunc_ln368_3_fu_654_p1() {
    trunc_ln368_3_fu_654_p1 = config_r_q0.read().range(31-1, 0);
}

void effect_delay::thread_trunc_ln368_fu_457_p1() {
    trunc_ln368_fu_457_p1 = config_r_q0.read().range(31-1, 0);
}

void effect_delay::thread_ush_fu_717_p3() {
    ush_fu_717_p3 = (!isNeg_fu_700_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_700_p3.read()[0].to_bool())? sext_ln1311_fu_713_p1.read(): add_ln339_fu_694_p2.read());
}

void effect_delay::thread_val_V_fu_782_p3() {
    val_V_fu_782_p3 = (!isNeg_reg_1193.read()[0].is_01())? sc_lv<32>(): ((isNeg_reg_1193.read()[0].to_bool())? zext_ln662_fu_768_p1.read(): tmp_42_fu_772_p4.read());
}

void effect_delay::thread_val_assign_s_fu_562_p4() {
    val_assign_s_fu_562_p4 = config_r_q0.read().range(31, 1);
}

void effect_delay::thread_zext_ln1287_fu_744_p1() {
    zext_ln1287_fu_744_p1 = esl_zext<79,32>(sext_ln1311_1_fu_738_p1.read());
}

void effect_delay::thread_zext_ln339_fu_691_p1() {
    zext_ln339_fu_691_p1 = esl_zext<9,8>(tmp_V_reg_1182.read());
}

void effect_delay::thread_zext_ln662_fu_768_p1() {
    zext_ln662_fu_768_p1 = esl_zext<32,1>(tmp_fu_760_p3.read());
}

void effect_delay::thread_zext_ln682_fu_734_p1() {
    zext_ln682_fu_734_p1 = esl_zext<79,25>(mantissa_V_fu_725_p4.read());
}

void effect_delay::thread_zext_ln78_1_fu_830_p1() {
    zext_ln78_1_fu_830_p1 = esl_zext<34,32>(memAddr_reg_1084.read());
}

void effect_delay::thread_zext_ln78_2_fu_833_p1() {
    zext_ln78_2_fu_833_p1 = esl_zext<33,32>(i_op_assign_2_reg_279.read());
}

void effect_delay::thread_zext_ln78_3_fu_845_p1() {
    zext_ln78_3_fu_845_p1 = esl_zext<34,33>(shl_ln_fu_837_p3.read());
}

void effect_delay::thread_zext_ln78_4_fu_855_p1() {
    zext_ln78_4_fu_855_p1 = esl_zext<64,34>(add_ln78_fu_849_p2.read());
}

void effect_delay::thread_zext_ln78_fu_827_p1() {
    zext_ln78_fu_827_p1 = esl_zext<33,32>(memAddr_reg_1084.read());
}

void effect_delay::thread_zext_ln79_1_fu_881_p1() {
    zext_ln79_1_fu_881_p1 = esl_zext<64,34>(add_ln79_1_fu_875_p2.read());
}

void effect_delay::thread_zext_ln79_fu_871_p1() {
    zext_ln79_fu_871_p1 = esl_zext<34,33>(add_ln79_fu_865_p2.read());
}

void effect_delay::thread_zext_ln89_1_fu_952_p1() {
    zext_ln89_1_fu_952_p1 = esl_zext<34,32>(memAddr_reg_1084.read());
}

void effect_delay::thread_zext_ln89_2_fu_921_p1() {
    zext_ln89_2_fu_921_p1 = esl_zext<33,32>(i_op_assign_3_reg_290.read());
}

void effect_delay::thread_zext_ln89_3_fu_963_p1() {
    zext_ln89_3_fu_963_p1 = esl_zext<34,33>(shl_ln1_fu_955_p3.read());
}

void effect_delay::thread_zext_ln89_4_fu_973_p1() {
    zext_ln89_4_fu_973_p1 = esl_zext<64,34>(add_ln89_fu_967_p2.read());
}

void effect_delay::thread_zext_ln89_fu_949_p1() {
    zext_ln89_fu_949_p1 = esl_zext<33,32>(memAddr_reg_1084.read());
}

void effect_delay::thread_zext_ln90_1_fu_999_p1() {
    zext_ln90_1_fu_999_p1 = esl_zext<64,34>(add_ln90_1_fu_993_p2.read());
}

void effect_delay::thread_zext_ln90_fu_989_p1() {
    zext_ln90_fu_989_p1 = esl_zext<34,33>(add_ln90_fu_983_p2.read());
}

void effect_delay::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state51;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln76_reg_1204.read()))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state45;
            } else {
                ap_NS_fsm = ap_ST_fsm_state44;
            }
            break;
        case 17592186044416 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(ap_block_state45_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state46;
            } else {
                ap_NS_fsm = ap_ST_fsm_state45;
            }
            break;
        case 35184372088832 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state47;
            } else {
                ap_NS_fsm = ap_ST_fsm_state46;
            }
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state51;
            } else {
                ap_NS_fsm = ap_ST_fsm_state50;
            }
            break;
        case 1125899906842624 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && !(esl_seteq<1,1,1>(or_ln62_reg_1108.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_BVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state51;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<51>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

