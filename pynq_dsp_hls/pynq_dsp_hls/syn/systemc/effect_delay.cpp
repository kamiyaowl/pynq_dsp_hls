// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "effect_delay.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic effect_delay::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic effect_delay::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<36> effect_delay::ap_ST_fsm_state1 = "1";
const sc_lv<36> effect_delay::ap_ST_fsm_state2 = "10";
const sc_lv<36> effect_delay::ap_ST_fsm_state3 = "100";
const sc_lv<36> effect_delay::ap_ST_fsm_state4 = "1000";
const sc_lv<36> effect_delay::ap_ST_fsm_state5 = "10000";
const sc_lv<36> effect_delay::ap_ST_fsm_state6 = "100000";
const sc_lv<36> effect_delay::ap_ST_fsm_state7 = "1000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state8 = "10000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state9 = "100000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state10 = "1000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state11 = "10000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state12 = "100000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<36> effect_delay::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<32> effect_delay::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> effect_delay::ap_const_lv32_B = "1011";
const sc_lv<32> effect_delay::ap_const_lv32_C = "1100";
const sc_lv<32> effect_delay::ap_const_lv32_11 = "10001";
const sc_lv<32> effect_delay::ap_const_lv32_D = "1101";
const sc_lv<32> effect_delay::ap_const_lv32_12 = "10010";
const sc_lv<32> effect_delay::ap_const_lv32_13 = "10011";
const sc_lv<32> effect_delay::ap_const_lv32_1A = "11010";
const sc_lv<32> effect_delay::ap_const_lv32_14 = "10100";
const sc_lv<32> effect_delay::ap_const_lv32_1B = "11011";
const bool effect_delay::ap_const_boolean_0 = false;
const sc_lv<32> effect_delay::ap_const_lv32_1 = "1";
const sc_lv<32> effect_delay::ap_const_lv32_2 = "10";
const sc_lv<32> effect_delay::ap_const_lv32_3 = "11";
const sc_lv<32> effect_delay::ap_const_lv32_4 = "100";
const sc_lv<32> effect_delay::ap_const_lv32_5 = "101";
const sc_lv<32> effect_delay::ap_const_lv32_6 = "110";
const sc_lv<1> effect_delay::ap_const_lv1_1 = "1";
const sc_lv<32> effect_delay::ap_const_lv32_9 = "1001";
const sc_lv<32> effect_delay::ap_const_lv32_A = "1010";
const sc_lv<32> effect_delay::ap_const_lv32_F = "1111";
const sc_lv<32> effect_delay::ap_const_lv32_10 = "10000";
const sc_lv<1> effect_delay::ap_const_lv1_0 = "0";
const sc_lv<32> effect_delay::ap_const_lv32_1C = "11100";
const sc_lv<32> effect_delay::ap_const_lv32_22 = "100010";
const sc_lv<32> effect_delay::ap_const_lv32_23 = "100011";
const sc_lv<3> effect_delay::ap_const_lv3_0 = "000";
const sc_lv<2> effect_delay::ap_const_lv2_0 = "00";
const sc_lv<4> effect_delay::ap_const_lv4_0 = "0000";
const sc_lv<4> effect_delay::ap_const_lv4_F = "1111";
const sc_lv<32> effect_delay::ap_const_lv32_8 = "1000";
const sc_lv<6> effect_delay::ap_const_lv6_1 = "1";
const sc_lv<58> effect_delay::ap_const_lv58_0 = "0000000000000000000000000000000000000000000000000000000000";
const sc_lv<6> effect_delay::ap_const_lv6_2 = "10";
const sc_lv<6> effect_delay::ap_const_lv6_3 = "11";
const sc_lv<32> effect_delay::ap_const_lv32_1F = "11111";
const sc_lv<6> effect_delay::ap_const_lv6_4 = "100";
const sc_lv<6> effect_delay::ap_const_lv6_5 = "101";
const sc_lv<6> effect_delay::ap_const_lv6_6 = "110";
const sc_lv<31> effect_delay::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> effect_delay::ap_const_lv32_FFFFFFFE = "11111111111111111111111111111110";
const sc_lv<33> effect_delay::ap_const_lv33_1 = "1";
const sc_lv<32> effect_delay::ap_const_lv32_17 = "10111";
const sc_lv<32> effect_delay::ap_const_lv32_1E = "11110";
const sc_lv<9> effect_delay::ap_const_lv9_181 = "110000001";
const sc_lv<8> effect_delay::ap_const_lv8_7F = "1111111";
const sc_lv<32> effect_delay::ap_const_lv32_18 = "11000";
const sc_lv<32> effect_delay::ap_const_lv32_37 = "110111";
const sc_lv<32> effect_delay::ap_const_lv32_E = "1110";
const sc_lv<32> effect_delay::ap_const_lv32_7 = "111";
const bool effect_delay::ap_const_boolean_1 = true;

effect_delay::effect_delay(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pynq_dsp_hls_faddbkb_U1 = new pynq_dsp_hls_faddbkb<1,7,32,32,32>("pynq_dsp_hls_faddbkb_U1");
    pynq_dsp_hls_faddbkb_U1->clk(ap_clk);
    pynq_dsp_hls_faddbkb_U1->reset(ap_rst);
    pynq_dsp_hls_faddbkb_U1->din0(grp_fu_286_p0);
    pynq_dsp_hls_faddbkb_U1->din1(inData_l);
    pynq_dsp_hls_faddbkb_U1->ce(ap_var_for_const0);
    pynq_dsp_hls_faddbkb_U1->dout(grp_fu_286_p2);
    pynq_dsp_hls_faddbkb_U2 = new pynq_dsp_hls_faddbkb<1,7,32,32,32>("pynq_dsp_hls_faddbkb_U2");
    pynq_dsp_hls_faddbkb_U2->clk(ap_clk);
    pynq_dsp_hls_faddbkb_U2->reset(ap_rst);
    pynq_dsp_hls_faddbkb_U2->din0(grp_fu_290_p0);
    pynq_dsp_hls_faddbkb_U2->din1(inData_r);
    pynq_dsp_hls_faddbkb_U2->ce(ap_var_for_const0);
    pynq_dsp_hls_faddbkb_U2->dout(grp_fu_290_p2);
    pynq_dsp_hls_fmulcud_U3 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U3");
    pynq_dsp_hls_fmulcud_U3->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U3->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U3->din0(grp_fu_294_p0);
    pynq_dsp_hls_fmulcud_U3->din1(grp_fu_294_p1);
    pynq_dsp_hls_fmulcud_U3->ce(grp_fu_294_ce);
    pynq_dsp_hls_fmulcud_U3->dout(grp_fu_294_p2);
    pynq_dsp_hls_uitodEe_U4 = new pynq_dsp_hls_uitodEe<1,6,32,32>("pynq_dsp_hls_uitodEe_U4");
    pynq_dsp_hls_uitodEe_U4->clk(ap_clk);
    pynq_dsp_hls_uitodEe_U4->reset(ap_rst);
    pynq_dsp_hls_uitodEe_U4->din0(memSize_reg_820);
    pynq_dsp_hls_uitodEe_U4->ce(grp_fu_298_ce);
    pynq_dsp_hls_uitodEe_U4->dout(grp_fu_298_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln103_fu_720_p2);
    sensitive << ( zext_ln90_1_reg_910 );
    sensitive << ( zext_ln103_1_fu_716_p1 );

    SC_METHOD(thread_add_ln104_fu_735_p2);
    sensitive << ( zext_ln91_reg_938 );
    sensitive << ( zext_ln103_1_fu_716_p1 );

    SC_METHOD(thread_add_ln107_fu_755_p2);
    sensitive << ( i_op_assign_3_reg_252 );

    SC_METHOD(thread_add_ln339_fu_575_p2);
    sensitive << ( zext_ln339_fu_572_p1 );

    SC_METHOD(thread_add_ln90_fu_476_p2);
    sensitive << ( zext_ln90_1_fu_457_p1 );
    sensitive << ( zext_ln90_3_fu_472_p1 );

    SC_METHOD(thread_add_ln91_1_fu_529_p2);
    sensitive << ( zext_ln90_3_reg_915 );
    sensitive << ( zext_ln91_fu_525_p1 );

    SC_METHOD(thread_add_ln91_fu_519_p2);
    sensitive << ( zext_ln90_fu_516_p1 );

    SC_METHOD(thread_add_ln92_fu_501_p2);
    sensitive << ( i_op_assign_2_reg_241 );

    SC_METHOD(thread_add_ln97_fu_679_p2);
    sensitive << ( i_op_assign_3_reg_252 );
    sensitive << ( sub_ln97_1_fu_675_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state13_io);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( m_axi_extMemPtr_V_WREADY );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6);
    sensitive << ( icmp_ln879_reg_884 );
    sensitive << ( icmp_ln98_reg_976 );
    sensitive << ( dst_l_reg_1012 );
    sensitive << ( agg_result_l_write_a_reg_264 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6);
    sensitive << ( icmp_ln879_reg_884 );
    sensitive << ( icmp_ln98_reg_976 );
    sensitive << ( dst_r_reg_1017 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( agg_result_r_write_a_reg_275 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_bitcast_ln705_1_fu_549_p1);
    sensitive << ( reg_306 );

    SC_METHOD(thread_bitcast_ln705_fu_544_p1);
    sensitive << ( reg_306 );

    SC_METHOD(thread_config_r_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( wrIndex_reg_858 );
    sensitive << ( rdIndex_reg_863 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_17_fu_324_p3 );
    sensitive << ( tmp_18_fu_338_p3 );
    sensitive << ( tmp_19_fu_352_p3 );
    sensitive << ( tmp_s_fu_376_p3 );
    sensitive << ( tmp_20_fu_394_p3 );

    SC_METHOD(thread_config_r_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_config_r_d0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( select_ln92_fu_507_p3 );
    sensitive << ( select_ln107_fu_761_p3 );

    SC_METHOD(thread_config_r_we0);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( grp_fu_301_p2 );
    sensitive << ( icmp_ln891_reg_893 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln98_reg_976 );

    SC_METHOD(thread_currentPeriod_fu_690_p3);
    sensitive << ( icmp_ln97_fu_670_p2 );
    sensitive << ( add_ln97_fu_679_p2 );
    sensitive << ( sub_ln97_fu_685_p2 );

    SC_METHOD(thread_extMemPtr_V_blk_n_AR);
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_extMemPtr_V_blk_n_AW);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_extMemPtr_V_blk_n_B);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_extMemPtr_V_blk_n_R);
    sensitive << ( m_axi_extMemPtr_V_RVALID );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_extMemPtr_V_blk_n_W);
    sensitive << ( m_axi_extMemPtr_V_WREADY );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_fu_286_p0);
    sensitive << ( auxRawL_V_reg_992 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_grp_fu_290_p0);
    sensitive << ( auxRawR_V_reg_997 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_grp_fu_294_ce);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( m_axi_extMemPtr_V_WREADY );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_block_state13_io );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_fu_294_p0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( volRatio_reg_868 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_reg_949 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_294_p1);
    sensitive << ( inData_l );
    sensitive << ( inData_r );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( periodRatio_reg_873 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_298_ce);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_fu_301_p2);
    sensitive << ( config_r_q0 );
    sensitive << ( maxIndex_V_reg_878 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln891_reg_893 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_icmp_ln879_fu_447_p2);
    sensitive << ( val_assign_9_reg_826 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_icmp_ln887_1_fu_750_p2);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( sext_ln1354_reg_926 );
    sensitive << ( icmp_ln98_reg_976 );
    sensitive << ( zext_ln103_fu_704_p1 );

    SC_METHOD(thread_icmp_ln887_fu_495_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( sext_ln1354_fu_492_p1 );
    sensitive << ( zext_ln90_2_fu_460_p1 );

    SC_METHOD(thread_icmp_ln97_fu_670_p2);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( select_ln92_reg_931 );
    sensitive << ( i_op_assign_3_reg_252 );

    SC_METHOD(thread_icmp_ln98_fu_698_p2);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( currentPeriod_fu_690_p3 );
    sensitive << ( val_V_fu_663_p3 );

    SC_METHOD(thread_isNeg_fu_581_p3);
    sensitive << ( add_ln339_fu_575_p2 );

    SC_METHOD(thread_m_axi_extMemPtr_V_ARADDR);
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( extMemPtr_V_addr_2_reg_980 );
    sensitive << ( extMemPtr_V_addr_3_reg_986 );

    SC_METHOD(thread_m_axi_extMemPtr_V_ARBURST);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARCACHE);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARID);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARLEN);
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_m_axi_extMemPtr_V_ARLOCK);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARPROT);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARQOS);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARREGION);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARSIZE);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARUSER);

    SC_METHOD(thread_m_axi_extMemPtr_V_ARVALID);
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_m_axi_extMemPtr_V_AWADDR);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_block_state13_io );
    sensitive << ( extMemPtr_V_addr_reg_920 );
    sensitive << ( extMemPtr_V_addr_1_reg_943 );

    SC_METHOD(thread_m_axi_extMemPtr_V_AWBURST);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWCACHE);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWID);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWLEN);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_block_state13_io );

    SC_METHOD(thread_m_axi_extMemPtr_V_AWLOCK);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWPROT);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWQOS);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWREGION);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWSIZE);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWUSER);

    SC_METHOD(thread_m_axi_extMemPtr_V_AWVALID);
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_block_state13_io );

    SC_METHOD(thread_m_axi_extMemPtr_V_BREADY);
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_m_axi_extMemPtr_V_RREADY);
    sensitive << ( m_axi_extMemPtr_V_RVALID );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_m_axi_extMemPtr_V_WDATA);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( bitcast_ln705_fu_544_p1 );
    sensitive << ( bitcast_ln705_1_fu_549_p1 );

    SC_METHOD(thread_m_axi_extMemPtr_V_WID);

    SC_METHOD(thread_m_axi_extMemPtr_V_WLAST);

    SC_METHOD(thread_m_axi_extMemPtr_V_WSTRB);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_m_axi_extMemPtr_V_WUSER);

    SC_METHOD(thread_m_axi_extMemPtr_V_WVALID);
    sensitive << ( m_axi_extMemPtr_V_WREADY );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_block_state13_io );

    SC_METHOD(thread_mantissa_V_fu_606_p4);
    sensitive << ( tmp_V_1_reg_960 );

    SC_METHOD(thread_maxIndex_V_fu_444_p1);
    sensitive << ( val_assign_9_reg_826 );

    SC_METHOD(thread_or_ln71_fu_318_p2);
    sensitive << ( tmp_16_fu_310_p3 );

    SC_METHOD(thread_or_ln72_fu_333_p2);
    sensitive << ( tmp_16_reg_790 );

    SC_METHOD(thread_or_ln73_fu_347_p2);
    sensitive << ( tmp_16_reg_790 );

    SC_METHOD(thread_or_ln74_fu_371_p2);
    sensitive << ( tmp_16_reg_790 );

    SC_METHOD(thread_or_ln75_fu_389_p2);
    sensitive << ( tmp_16_reg_790 );

    SC_METHOD(thread_or_ln76_fu_403_p2);
    sensitive << ( tmp_16_reg_790 );

    SC_METHOD(thread_p_Result_18_fu_432_p3);
    sensitive << ( trunc_ln368_6_fu_428_p1 );

    SC_METHOD(thread_p_Result_s_fu_417_p3);
    sensitive << ( trunc_ln368_reg_837 );

    SC_METHOD(thread_p_Val2_11_fu_554_p1);
    sensitive << ( grp_fu_294_p2 );

    SC_METHOD(thread_periodRatio_fu_440_p1);
    sensitive << ( p_Result_18_fu_432_p3 );

    SC_METHOD(thread_r_V_1_fu_635_p2);
    sensitive << ( zext_ln682_fu_615_p1 );
    sensitive << ( zext_ln1287_fu_625_p1 );

    SC_METHOD(thread_r_V_fu_629_p2);
    sensitive << ( mantissa_V_fu_606_p4 );
    sensitive << ( sext_ln1311_2_fu_622_p1 );

    SC_METHOD(thread_ret_V_fu_452_p2);
    sensitive << ( maxIndex_V_reg_878 );

    SC_METHOD(thread_select_ln107_fu_761_p3);
    sensitive << ( icmp_ln887_1_fu_750_p2 );
    sensitive << ( add_ln107_fu_755_p2 );

    SC_METHOD(thread_select_ln92_fu_507_p3);
    sensitive << ( icmp_ln887_fu_495_p2 );
    sensitive << ( add_ln92_fu_501_p2 );

    SC_METHOD(thread_sext_ln1311_1_fu_619_p1);
    sensitive << ( ush_reg_970 );

    SC_METHOD(thread_sext_ln1311_2_fu_622_p1);
    sensitive << ( ush_reg_970 );

    SC_METHOD(thread_sext_ln1311_fu_594_p1);
    sensitive << ( sub_ln1311_fu_589_p2 );

    SC_METHOD(thread_sext_ln1354_fu_492_p1);
    sensitive << ( ret_V_reg_905 );

    SC_METHOD(thread_shl_ln1_fu_708_p3);
    sensitive << ( i_op_assign_3_reg_252 );

    SC_METHOD(thread_shl_ln_fu_464_p3);
    sensitive << ( i_op_assign_2_reg_241 );

    SC_METHOD(thread_sub_ln1311_fu_589_p2);
    sensitive << ( tmp_V_reg_954 );

    SC_METHOD(thread_sub_ln97_1_fu_675_p2);
    sensitive << ( memSize_reg_820 );
    sensitive << ( select_ln92_reg_931 );

    SC_METHOD(thread_sub_ln97_fu_685_p2);
    sensitive << ( select_ln92_reg_931 );
    sensitive << ( i_op_assign_3_reg_252 );

    SC_METHOD(thread_tmp_10_fu_641_p3);
    sensitive << ( r_V_fu_629_p2 );

    SC_METHOD(thread_tmp_16_fu_310_p3);
    sensitive << ( config_offset );

    SC_METHOD(thread_tmp_17_fu_324_p3);
    sensitive << ( or_ln71_fu_318_p2 );

    SC_METHOD(thread_tmp_18_fu_338_p3);
    sensitive << ( or_ln72_fu_333_p2 );

    SC_METHOD(thread_tmp_19_fu_352_p3);
    sensitive << ( or_ln73_fu_347_p2 );

    SC_METHOD(thread_tmp_20_fu_394_p3);
    sensitive << ( or_ln75_fu_389_p2 );

    SC_METHOD(thread_tmp_21_fu_408_p3);
    sensitive << ( or_ln76_fu_403_p2 );

    SC_METHOD(thread_tmp_22_fu_653_p4);
    sensitive << ( r_V_1_fu_635_p2 );

    SC_METHOD(thread_tmp_V_1_fu_568_p1);
    sensitive << ( p_Val2_11_fu_554_p1 );

    SC_METHOD(thread_tmp_s_fu_376_p3);
    sensitive << ( or_ln74_fu_371_p2 );

    SC_METHOD(thread_trunc_ln368_6_fu_428_p1);
    sensitive << ( config_r_q0 );

    SC_METHOD(thread_trunc_ln368_fu_385_p1);
    sensitive << ( config_r_q0 );

    SC_METHOD(thread_ush_fu_598_p3);
    sensitive << ( isNeg_fu_581_p3 );
    sensitive << ( add_ln339_fu_575_p2 );
    sensitive << ( sext_ln1311_fu_594_p1 );

    SC_METHOD(thread_val_V_fu_663_p3);
    sensitive << ( isNeg_reg_965 );
    sensitive << ( zext_ln662_fu_649_p1 );
    sensitive << ( tmp_22_fu_653_p4 );

    SC_METHOD(thread_volRatio_fu_424_p1);
    sensitive << ( p_Result_s_fu_417_p3 );

    SC_METHOD(thread_zext_ln103_1_fu_716_p1);
    sensitive << ( shl_ln1_fu_708_p3 );

    SC_METHOD(thread_zext_ln103_2_fu_725_p1);
    sensitive << ( add_ln103_fu_720_p2 );

    SC_METHOD(thread_zext_ln103_fu_704_p1);
    sensitive << ( i_op_assign_3_reg_252 );

    SC_METHOD(thread_zext_ln104_fu_740_p1);
    sensitive << ( add_ln104_fu_735_p2 );

    SC_METHOD(thread_zext_ln1287_fu_625_p1);
    sensitive << ( sext_ln1311_1_fu_619_p1 );

    SC_METHOD(thread_zext_ln339_fu_572_p1);
    sensitive << ( tmp_V_reg_954 );

    SC_METHOD(thread_zext_ln662_fu_649_p1);
    sensitive << ( tmp_10_fu_641_p3 );

    SC_METHOD(thread_zext_ln682_fu_615_p1);
    sensitive << ( mantissa_V_fu_606_p4 );

    SC_METHOD(thread_zext_ln90_1_fu_457_p1);
    sensitive << ( memAddr_reg_809 );

    SC_METHOD(thread_zext_ln90_2_fu_460_p1);
    sensitive << ( i_op_assign_2_reg_241 );

    SC_METHOD(thread_zext_ln90_3_fu_472_p1);
    sensitive << ( shl_ln_fu_464_p3 );

    SC_METHOD(thread_zext_ln90_4_fu_482_p1);
    sensitive << ( add_ln90_fu_476_p2 );

    SC_METHOD(thread_zext_ln90_fu_516_p1);
    sensitive << ( memAddr_reg_809 );

    SC_METHOD(thread_zext_ln91_1_fu_534_p1);
    sensitive << ( add_ln91_1_fu_529_p2 );

    SC_METHOD(thread_zext_ln91_fu_525_p1);
    sensitive << ( add_ln91_fu_519_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_extMemPtr_V_AWREADY );
    sensitive << ( m_axi_extMemPtr_V_WREADY );
    sensitive << ( m_axi_extMemPtr_V_ARREADY );
    sensitive << ( m_axi_extMemPtr_V_RVALID );
    sensitive << ( m_axi_extMemPtr_V_BVALID );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_block_state13_io );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln879_fu_447_p2 );
    sensitive << ( icmp_ln98_reg_976 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000000000001";
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "effect_delay_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, inData_l, "(port)inData_l");
    sc_trace(mVcdFile, inData_r, "(port)inData_r");
    sc_trace(mVcdFile, config_r_address0, "(port)config_r_address0");
    sc_trace(mVcdFile, config_r_ce0, "(port)config_r_ce0");
    sc_trace(mVcdFile, config_r_we0, "(port)config_r_we0");
    sc_trace(mVcdFile, config_r_d0, "(port)config_r_d0");
    sc_trace(mVcdFile, config_r_q0, "(port)config_r_q0");
    sc_trace(mVcdFile, config_offset, "(port)config_offset");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWVALID, "(port)m_axi_extMemPtr_V_AWVALID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWREADY, "(port)m_axi_extMemPtr_V_AWREADY");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWADDR, "(port)m_axi_extMemPtr_V_AWADDR");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWID, "(port)m_axi_extMemPtr_V_AWID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWLEN, "(port)m_axi_extMemPtr_V_AWLEN");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWSIZE, "(port)m_axi_extMemPtr_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWBURST, "(port)m_axi_extMemPtr_V_AWBURST");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWLOCK, "(port)m_axi_extMemPtr_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWCACHE, "(port)m_axi_extMemPtr_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWPROT, "(port)m_axi_extMemPtr_V_AWPROT");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWQOS, "(port)m_axi_extMemPtr_V_AWQOS");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWREGION, "(port)m_axi_extMemPtr_V_AWREGION");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_AWUSER, "(port)m_axi_extMemPtr_V_AWUSER");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WVALID, "(port)m_axi_extMemPtr_V_WVALID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WREADY, "(port)m_axi_extMemPtr_V_WREADY");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WDATA, "(port)m_axi_extMemPtr_V_WDATA");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WSTRB, "(port)m_axi_extMemPtr_V_WSTRB");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WLAST, "(port)m_axi_extMemPtr_V_WLAST");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WID, "(port)m_axi_extMemPtr_V_WID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_WUSER, "(port)m_axi_extMemPtr_V_WUSER");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARVALID, "(port)m_axi_extMemPtr_V_ARVALID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARREADY, "(port)m_axi_extMemPtr_V_ARREADY");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARADDR, "(port)m_axi_extMemPtr_V_ARADDR");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARID, "(port)m_axi_extMemPtr_V_ARID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARLEN, "(port)m_axi_extMemPtr_V_ARLEN");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARSIZE, "(port)m_axi_extMemPtr_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARBURST, "(port)m_axi_extMemPtr_V_ARBURST");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARLOCK, "(port)m_axi_extMemPtr_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARCACHE, "(port)m_axi_extMemPtr_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARPROT, "(port)m_axi_extMemPtr_V_ARPROT");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARQOS, "(port)m_axi_extMemPtr_V_ARQOS");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARREGION, "(port)m_axi_extMemPtr_V_ARREGION");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_ARUSER, "(port)m_axi_extMemPtr_V_ARUSER");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RVALID, "(port)m_axi_extMemPtr_V_RVALID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RREADY, "(port)m_axi_extMemPtr_V_RREADY");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RDATA, "(port)m_axi_extMemPtr_V_RDATA");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RLAST, "(port)m_axi_extMemPtr_V_RLAST");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RID, "(port)m_axi_extMemPtr_V_RID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RUSER, "(port)m_axi_extMemPtr_V_RUSER");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_RRESP, "(port)m_axi_extMemPtr_V_RRESP");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_BVALID, "(port)m_axi_extMemPtr_V_BVALID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_BREADY, "(port)m_axi_extMemPtr_V_BREADY");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_BRESP, "(port)m_axi_extMemPtr_V_BRESP");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_BID, "(port)m_axi_extMemPtr_V_BID");
    sc_trace(mVcdFile, m_axi_extMemPtr_V_BUSER, "(port)m_axi_extMemPtr_V_BUSER");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, extMemPtr_V_blk_n_AW, "extMemPtr_V_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, extMemPtr_V_blk_n_W, "extMemPtr_V_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, extMemPtr_V_blk_n_B, "extMemPtr_V_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, extMemPtr_V_blk_n_AR, "extMemPtr_V_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, extMemPtr_V_blk_n_R, "extMemPtr_V_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, grp_fu_294_p2, "grp_fu_294_p2");
    sc_trace(mVcdFile, reg_306, "reg_306");
    sc_trace(mVcdFile, ap_block_state13_io, "ap_block_state13_io");
    sc_trace(mVcdFile, tmp_16_fu_310_p3, "tmp_16_fu_310_p3");
    sc_trace(mVcdFile, tmp_16_reg_790, "tmp_16_reg_790");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, memAddr_reg_809, "memAddr_reg_809");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, memSize_reg_820, "memSize_reg_820");
    sc_trace(mVcdFile, val_assign_9_reg_826, "val_assign_9_reg_826");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, trunc_ln368_fu_385_p1, "trunc_ln368_fu_385_p1");
    sc_trace(mVcdFile, trunc_ln368_reg_837, "trunc_ln368_reg_837");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, wrIndex_reg_858, "wrIndex_reg_858");
    sc_trace(mVcdFile, rdIndex_reg_863, "rdIndex_reg_863");
    sc_trace(mVcdFile, volRatio_fu_424_p1, "volRatio_fu_424_p1");
    sc_trace(mVcdFile, volRatio_reg_868, "volRatio_reg_868");
    sc_trace(mVcdFile, periodRatio_fu_440_p1, "periodRatio_fu_440_p1");
    sc_trace(mVcdFile, periodRatio_reg_873, "periodRatio_reg_873");
    sc_trace(mVcdFile, maxIndex_V_fu_444_p1, "maxIndex_V_fu_444_p1");
    sc_trace(mVcdFile, maxIndex_V_reg_878, "maxIndex_V_reg_878");
    sc_trace(mVcdFile, icmp_ln879_fu_447_p2, "icmp_ln879_fu_447_p2");
    sc_trace(mVcdFile, icmp_ln879_reg_884, "icmp_ln879_reg_884");
    sc_trace(mVcdFile, wrIndex_load_reg_888, "wrIndex_load_reg_888");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_301_p2, "grp_fu_301_p2");
    sc_trace(mVcdFile, icmp_ln891_reg_893, "icmp_ln891_reg_893");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ret_V_fu_452_p2, "ret_V_fu_452_p2");
    sc_trace(mVcdFile, ret_V_reg_905, "ret_V_reg_905");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, zext_ln90_1_fu_457_p1, "zext_ln90_1_fu_457_p1");
    sc_trace(mVcdFile, zext_ln90_1_reg_910, "zext_ln90_1_reg_910");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, zext_ln90_3_fu_472_p1, "zext_ln90_3_fu_472_p1");
    sc_trace(mVcdFile, zext_ln90_3_reg_915, "zext_ln90_3_reg_915");
    sc_trace(mVcdFile, extMemPtr_V_addr_reg_920, "extMemPtr_V_addr_reg_920");
    sc_trace(mVcdFile, sext_ln1354_fu_492_p1, "sext_ln1354_fu_492_p1");
    sc_trace(mVcdFile, sext_ln1354_reg_926, "sext_ln1354_reg_926");
    sc_trace(mVcdFile, select_ln92_fu_507_p3, "select_ln92_fu_507_p3");
    sc_trace(mVcdFile, select_ln92_reg_931, "select_ln92_reg_931");
    sc_trace(mVcdFile, zext_ln91_fu_525_p1, "zext_ln91_fu_525_p1");
    sc_trace(mVcdFile, zext_ln91_reg_938, "zext_ln91_reg_938");
    sc_trace(mVcdFile, extMemPtr_V_addr_1_reg_943, "extMemPtr_V_addr_1_reg_943");
    sc_trace(mVcdFile, grp_fu_298_p1, "grp_fu_298_p1");
    sc_trace(mVcdFile, tmp_reg_949, "tmp_reg_949");
    sc_trace(mVcdFile, tmp_V_reg_954, "tmp_V_reg_954");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_V_1_fu_568_p1, "tmp_V_1_fu_568_p1");
    sc_trace(mVcdFile, tmp_V_1_reg_960, "tmp_V_1_reg_960");
    sc_trace(mVcdFile, isNeg_fu_581_p3, "isNeg_fu_581_p3");
    sc_trace(mVcdFile, isNeg_reg_965, "isNeg_reg_965");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ush_fu_598_p3, "ush_fu_598_p3");
    sc_trace(mVcdFile, ush_reg_970, "ush_reg_970");
    sc_trace(mVcdFile, icmp_ln98_fu_698_p2, "icmp_ln98_fu_698_p2");
    sc_trace(mVcdFile, icmp_ln98_reg_976, "icmp_ln98_reg_976");
    sc_trace(mVcdFile, extMemPtr_V_addr_2_reg_980, "extMemPtr_V_addr_2_reg_980");
    sc_trace(mVcdFile, extMemPtr_V_addr_3_reg_986, "extMemPtr_V_addr_3_reg_986");
    sc_trace(mVcdFile, auxRawL_V_reg_992, "auxRawL_V_reg_992");
    sc_trace(mVcdFile, auxRawR_V_reg_997, "auxRawR_V_reg_997");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, grp_fu_286_p2, "grp_fu_286_p2");
    sc_trace(mVcdFile, dst_l_reg_1012, "dst_l_reg_1012");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, grp_fu_290_p2, "grp_fu_290_p2");
    sc_trace(mVcdFile, dst_r_reg_1017, "dst_r_reg_1017");
    sc_trace(mVcdFile, i_op_assign_2_reg_241, "i_op_assign_2_reg_241");
    sc_trace(mVcdFile, i_op_assign_3_reg_252, "i_op_assign_3_reg_252");
    sc_trace(mVcdFile, ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6, "ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6");
    sc_trace(mVcdFile, agg_result_l_write_a_reg_264, "agg_result_l_write_a_reg_264");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6, "ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6");
    sc_trace(mVcdFile, agg_result_r_write_a_reg_275, "agg_result_r_write_a_reg_275");
    sc_trace(mVcdFile, tmp_17_fu_324_p3, "tmp_17_fu_324_p3");
    sc_trace(mVcdFile, tmp_18_fu_338_p3, "tmp_18_fu_338_p3");
    sc_trace(mVcdFile, tmp_19_fu_352_p3, "tmp_19_fu_352_p3");
    sc_trace(mVcdFile, tmp_s_fu_376_p3, "tmp_s_fu_376_p3");
    sc_trace(mVcdFile, tmp_20_fu_394_p3, "tmp_20_fu_394_p3");
    sc_trace(mVcdFile, tmp_21_fu_408_p3, "tmp_21_fu_408_p3");
    sc_trace(mVcdFile, zext_ln90_4_fu_482_p1, "zext_ln90_4_fu_482_p1");
    sc_trace(mVcdFile, zext_ln91_1_fu_534_p1, "zext_ln91_1_fu_534_p1");
    sc_trace(mVcdFile, zext_ln103_2_fu_725_p1, "zext_ln103_2_fu_725_p1");
    sc_trace(mVcdFile, zext_ln104_fu_740_p1, "zext_ln104_fu_740_p1");
    sc_trace(mVcdFile, bitcast_ln705_fu_544_p1, "bitcast_ln705_fu_544_p1");
    sc_trace(mVcdFile, bitcast_ln705_1_fu_549_p1, "bitcast_ln705_1_fu_549_p1");
    sc_trace(mVcdFile, select_ln107_fu_761_p3, "select_ln107_fu_761_p3");
    sc_trace(mVcdFile, grp_fu_286_p0, "grp_fu_286_p0");
    sc_trace(mVcdFile, grp_fu_290_p0, "grp_fu_290_p0");
    sc_trace(mVcdFile, grp_fu_294_p0, "grp_fu_294_p0");
    sc_trace(mVcdFile, grp_fu_294_p1, "grp_fu_294_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, or_ln71_fu_318_p2, "or_ln71_fu_318_p2");
    sc_trace(mVcdFile, or_ln72_fu_333_p2, "or_ln72_fu_333_p2");
    sc_trace(mVcdFile, or_ln73_fu_347_p2, "or_ln73_fu_347_p2");
    sc_trace(mVcdFile, or_ln74_fu_371_p2, "or_ln74_fu_371_p2");
    sc_trace(mVcdFile, or_ln75_fu_389_p2, "or_ln75_fu_389_p2");
    sc_trace(mVcdFile, or_ln76_fu_403_p2, "or_ln76_fu_403_p2");
    sc_trace(mVcdFile, p_Result_s_fu_417_p3, "p_Result_s_fu_417_p3");
    sc_trace(mVcdFile, trunc_ln368_6_fu_428_p1, "trunc_ln368_6_fu_428_p1");
    sc_trace(mVcdFile, p_Result_18_fu_432_p3, "p_Result_18_fu_432_p3");
    sc_trace(mVcdFile, shl_ln_fu_464_p3, "shl_ln_fu_464_p3");
    sc_trace(mVcdFile, add_ln90_fu_476_p2, "add_ln90_fu_476_p2");
    sc_trace(mVcdFile, zext_ln90_2_fu_460_p1, "zext_ln90_2_fu_460_p1");
    sc_trace(mVcdFile, icmp_ln887_fu_495_p2, "icmp_ln887_fu_495_p2");
    sc_trace(mVcdFile, add_ln92_fu_501_p2, "add_ln92_fu_501_p2");
    sc_trace(mVcdFile, zext_ln90_fu_516_p1, "zext_ln90_fu_516_p1");
    sc_trace(mVcdFile, add_ln91_fu_519_p2, "add_ln91_fu_519_p2");
    sc_trace(mVcdFile, add_ln91_1_fu_529_p2, "add_ln91_1_fu_529_p2");
    sc_trace(mVcdFile, p_Val2_11_fu_554_p1, "p_Val2_11_fu_554_p1");
    sc_trace(mVcdFile, zext_ln339_fu_572_p1, "zext_ln339_fu_572_p1");
    sc_trace(mVcdFile, add_ln339_fu_575_p2, "add_ln339_fu_575_p2");
    sc_trace(mVcdFile, sub_ln1311_fu_589_p2, "sub_ln1311_fu_589_p2");
    sc_trace(mVcdFile, sext_ln1311_fu_594_p1, "sext_ln1311_fu_594_p1");
    sc_trace(mVcdFile, mantissa_V_fu_606_p4, "mantissa_V_fu_606_p4");
    sc_trace(mVcdFile, sext_ln1311_1_fu_619_p1, "sext_ln1311_1_fu_619_p1");
    sc_trace(mVcdFile, sext_ln1311_2_fu_622_p1, "sext_ln1311_2_fu_622_p1");
    sc_trace(mVcdFile, zext_ln682_fu_615_p1, "zext_ln682_fu_615_p1");
    sc_trace(mVcdFile, zext_ln1287_fu_625_p1, "zext_ln1287_fu_625_p1");
    sc_trace(mVcdFile, r_V_fu_629_p2, "r_V_fu_629_p2");
    sc_trace(mVcdFile, tmp_10_fu_641_p3, "tmp_10_fu_641_p3");
    sc_trace(mVcdFile, r_V_1_fu_635_p2, "r_V_1_fu_635_p2");
    sc_trace(mVcdFile, zext_ln662_fu_649_p1, "zext_ln662_fu_649_p1");
    sc_trace(mVcdFile, tmp_22_fu_653_p4, "tmp_22_fu_653_p4");
    sc_trace(mVcdFile, sub_ln97_1_fu_675_p2, "sub_ln97_1_fu_675_p2");
    sc_trace(mVcdFile, icmp_ln97_fu_670_p2, "icmp_ln97_fu_670_p2");
    sc_trace(mVcdFile, add_ln97_fu_679_p2, "add_ln97_fu_679_p2");
    sc_trace(mVcdFile, sub_ln97_fu_685_p2, "sub_ln97_fu_685_p2");
    sc_trace(mVcdFile, currentPeriod_fu_690_p3, "currentPeriod_fu_690_p3");
    sc_trace(mVcdFile, val_V_fu_663_p3, "val_V_fu_663_p3");
    sc_trace(mVcdFile, shl_ln1_fu_708_p3, "shl_ln1_fu_708_p3");
    sc_trace(mVcdFile, zext_ln103_1_fu_716_p1, "zext_ln103_1_fu_716_p1");
    sc_trace(mVcdFile, add_ln103_fu_720_p2, "add_ln103_fu_720_p2");
    sc_trace(mVcdFile, add_ln104_fu_735_p2, "add_ln104_fu_735_p2");
    sc_trace(mVcdFile, zext_ln103_fu_704_p1, "zext_ln103_fu_704_p1");
    sc_trace(mVcdFile, icmp_ln887_1_fu_750_p2, "icmp_ln887_1_fu_750_p2");
    sc_trace(mVcdFile, add_ln107_fu_755_p2, "add_ln107_fu_755_p2");
    sc_trace(mVcdFile, grp_fu_294_ce, "grp_fu_294_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_fu_298_ce, "grp_fu_298_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

effect_delay::~effect_delay() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete pynq_dsp_hls_faddbkb_U1;
    delete pynq_dsp_hls_faddbkb_U2;
    delete pynq_dsp_hls_fmulcud_U3;
    delete pynq_dsp_hls_uitodEe_U4;
}

void effect_delay::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void effect_delay::thread_ap_clk_no_reset_() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(icmp_ln879_fu_447_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln98_reg_976.read())))) {
        agg_result_l_write_a_reg_264 = inData_l.read();
    } else if ((esl_seteq<1,1,1>(icmp_ln98_reg_976.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
                esl_seteq<1,1,1>(icmp_ln879_reg_884.read(), ap_const_lv1_0))) {
        agg_result_l_write_a_reg_264 = dst_l_reg_1012.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(icmp_ln879_fu_447_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln98_reg_976.read())))) {
        agg_result_r_write_a_reg_275 = inData_r.read();
    } else if ((esl_seteq<1,1,1>(icmp_ln98_reg_976.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
                esl_seteq<1,1,1>(icmp_ln879_reg_884.read(), ap_const_lv1_0))) {
        agg_result_r_write_a_reg_275 = dst_r_reg_1017.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
            ap_return_0_preg = ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
            ap_return_1_preg = ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        if ((esl_seteq<1,1,1>(icmp_ln891_reg_893.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(grp_fu_301_p2.read(), ap_const_lv1_1))) {
            i_op_assign_2_reg_241 = wrIndex_load_reg_888.read();
        } else if ((esl_seteq<1,1,1>(grp_fu_301_p2.read(), ap_const_lv1_0) || 
                    esl_seteq<1,1,1>(icmp_ln891_reg_893.read(), ap_const_lv1_0))) {
            i_op_assign_2_reg_241 = ap_const_lv32_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        if ((esl_seteq<1,1,1>(icmp_ln891_reg_893.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(grp_fu_301_p2.read(), ap_const_lv1_1))) {
            i_op_assign_3_reg_252 = config_r_q0.read();
        } else if ((esl_seteq<1,1,1>(grp_fu_301_p2.read(), ap_const_lv1_0) || 
                    esl_seteq<1,1,1>(icmp_ln891_reg_893.read(), ap_const_lv1_0))) {
            i_op_assign_3_reg_252 = ap_const_lv32_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1))) {
        auxRawL_V_reg_992 = m_axi_extMemPtr_V_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1))) {
        auxRawR_V_reg_997 = m_axi_extMemPtr_V_RDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        dst_l_reg_1012 = grp_fu_286_p2.read();
        dst_r_reg_1017 = grp_fu_290_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1))) {
        extMemPtr_V_addr_1_reg_943 =  (sc_lv<32>) (zext_ln91_1_fu_534_p1.read());
        tmp_reg_949 = grp_fu_298_p1.read();
        zext_ln91_reg_938 = zext_ln91_fu_525_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln98_reg_976.read(), ap_const_lv1_0))) {
        extMemPtr_V_addr_2_reg_980 =  (sc_lv<32>) (zext_ln103_2_fu_725_p1.read());
        extMemPtr_V_addr_3_reg_986 =  (sc_lv<32>) (zext_ln104_fu_740_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        extMemPtr_V_addr_reg_920 =  (sc_lv<32>) (zext_ln90_4_fu_482_p1.read());
        select_ln92_reg_931 = select_ln92_fu_507_p3.read();
        sext_ln1354_reg_926 = sext_ln1354_fu_492_p1.read();
        zext_ln90_1_reg_910 = zext_ln90_1_fu_457_p1.read();
        zext_ln90_3_reg_915 = zext_ln90_3_fu_472_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        icmp_ln879_reg_884 = icmp_ln879_fu_447_p2.read();
        maxIndex_V_reg_878 = maxIndex_V_fu_444_p1.read();
        periodRatio_reg_873 = periodRatio_fu_440_p1.read();
        rdIndex_reg_863 =  (sc_lv<5>) (tmp_21_fu_408_p3.read());
        volRatio_reg_868 = volRatio_fu_424_p1.read();
        wrIndex_reg_858 =  (sc_lv<5>) (tmp_20_fu_394_p3.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        icmp_ln891_reg_893 = grp_fu_301_p2.read();
        wrIndex_load_reg_888 = config_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1))) {
        icmp_ln98_reg_976 = icmp_ln98_fu_698_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        isNeg_reg_965 = add_ln339_fu_575_p2.read().range(8, 8);
        ush_reg_970 = ush_fu_598_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        memAddr_reg_809 = config_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        memSize_reg_820 = config_r_q0.read();
        val_assign_9_reg_826 = config_r_q0.read().range(31, 1);
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
  esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
  esl_seteq<1,1,1>(ap_block_state13_io.read(), ap_const_boolean_0)))) {
        reg_306 = grp_fu_294_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ret_V_reg_905 = ret_V_fu_452_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_16_reg_790 = tmp_16_fu_310_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_V_1_reg_960 = tmp_V_1_fu_568_p1.read();
        tmp_V_reg_954 = p_Val2_11_fu_554_p1.read().range(30, 23);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        trunc_ln368_reg_837 = trunc_ln368_fu_385_p1.read();
    }
}

void effect_delay::thread_add_ln103_fu_720_p2() {
    add_ln103_fu_720_p2 = (!zext_ln90_1_reg_910.read().is_01() || !zext_ln103_1_fu_716_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln90_1_reg_910.read()) + sc_biguint<34>(zext_ln103_1_fu_716_p1.read()));
}

void effect_delay::thread_add_ln104_fu_735_p2() {
    add_ln104_fu_735_p2 = (!zext_ln91_reg_938.read().is_01() || !zext_ln103_1_fu_716_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln91_reg_938.read()) + sc_biguint<34>(zext_ln103_1_fu_716_p1.read()));
}

void effect_delay::thread_add_ln107_fu_755_p2() {
    add_ln107_fu_755_p2 = (!i_op_assign_3_reg_252.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_op_assign_3_reg_252.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void effect_delay::thread_add_ln339_fu_575_p2() {
    add_ln339_fu_575_p2 = (!ap_const_lv9_181.is_01() || !zext_ln339_fu_572_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(zext_ln339_fu_572_p1.read()));
}

void effect_delay::thread_add_ln90_fu_476_p2() {
    add_ln90_fu_476_p2 = (!zext_ln90_1_fu_457_p1.read().is_01() || !zext_ln90_3_fu_472_p1.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln90_1_fu_457_p1.read()) + sc_biguint<34>(zext_ln90_3_fu_472_p1.read()));
}

void effect_delay::thread_add_ln91_1_fu_529_p2() {
    add_ln91_1_fu_529_p2 = (!zext_ln91_fu_525_p1.read().is_01() || !zext_ln90_3_reg_915.read().is_01())? sc_lv<34>(): (sc_biguint<34>(zext_ln91_fu_525_p1.read()) + sc_biguint<34>(zext_ln90_3_reg_915.read()));
}

void effect_delay::thread_add_ln91_fu_519_p2() {
    add_ln91_fu_519_p2 = (!ap_const_lv33_1.is_01() || !zext_ln90_fu_516_p1.read().is_01())? sc_lv<33>(): (sc_biguint<33>(ap_const_lv33_1) + sc_biguint<33>(zext_ln90_fu_516_p1.read()));
}

void effect_delay::thread_add_ln92_fu_501_p2() {
    add_ln92_fu_501_p2 = (!ap_const_lv32_1.is_01() || !i_op_assign_2_reg_241.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(i_op_assign_2_reg_241.read()));
}

void effect_delay::thread_add_ln97_fu_679_p2() {
    add_ln97_fu_679_p2 = (!i_op_assign_3_reg_252.read().is_01() || !sub_ln97_1_fu_675_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_op_assign_3_reg_252.read()) + sc_biguint<32>(sub_ln97_1_fu_675_p2.read()));
}

void effect_delay::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void effect_delay::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void effect_delay::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void effect_delay::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void effect_delay::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void effect_delay::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void effect_delay::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void effect_delay::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void effect_delay::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void effect_delay::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void effect_delay::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void effect_delay::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void effect_delay::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void effect_delay::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void effect_delay::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void effect_delay::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void effect_delay::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void effect_delay::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void effect_delay::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void effect_delay::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void effect_delay::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void effect_delay::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void effect_delay::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void effect_delay::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void effect_delay::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void effect_delay::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void effect_delay::thread_ap_block_state13_io() {
    ap_block_state13_io = (esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, m_axi_extMemPtr_V_WREADY.read()));
}

void effect_delay::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void effect_delay::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void effect_delay::thread_ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6() {
    if ((esl_seteq<1,1,1>(icmp_ln98_reg_976.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
         esl_seteq<1,1,1>(icmp_ln879_reg_884.read(), ap_const_lv1_0))) {
        ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6 = dst_l_reg_1012.read();
    } else {
        ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6 = agg_result_l_write_a_reg_264.read();
    }
}

void effect_delay::thread_ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6() {
    if ((esl_seteq<1,1,1>(icmp_ln98_reg_976.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
         esl_seteq<1,1,1>(icmp_ln879_reg_884.read(), ap_const_lv1_0))) {
        ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6 = dst_r_reg_1017.read();
    } else {
        ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6 = agg_result_r_write_a_reg_275.read();
    }
}

void effect_delay::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void effect_delay::thread_ap_return_0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        ap_return_0 = ap_phi_mux_agg_result_l_write_a_phi_fu_267_p6.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void effect_delay::thread_ap_return_1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        ap_return_1 = ap_phi_mux_agg_result_r_write_a_phi_fu_278_p6.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void effect_delay::thread_bitcast_ln705_1_fu_549_p1() {
    bitcast_ln705_1_fu_549_p1 = reg_306.read();
}

void effect_delay::thread_bitcast_ln705_fu_544_p1() {
    bitcast_ln705_fu_544_p1 = reg_306.read();
}

void effect_delay::thread_config_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        config_r_address0 = wrIndex_reg_858.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        config_r_address0 = rdIndex_reg_863.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        config_r_address0 =  (sc_lv<5>) (tmp_20_fu_394_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        config_r_address0 =  (sc_lv<5>) (tmp_s_fu_376_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        config_r_address0 =  (sc_lv<5>) (tmp_19_fu_352_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        config_r_address0 =  (sc_lv<5>) (tmp_18_fu_338_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        config_r_address0 =  (sc_lv<5>) (tmp_17_fu_324_p3.read());
    } else {
        config_r_address0 = "XXXXX";
    }
}

void effect_delay::thread_config_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1)))) {
        config_r_ce0 = ap_const_logic_1;
    } else {
        config_r_ce0 = ap_const_logic_0;
    }
}

void effect_delay::thread_config_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        config_r_d0 = select_ln107_fu_761_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        config_r_d0 = select_ln92_fu_507_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        config_r_d0 = ap_const_lv32_0;
    } else {
        config_r_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_config_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(icmp_ln98_reg_976.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          (esl_seteq<1,1,1>(grp_fu_301_p2.read(), ap_const_lv1_0) || 
           esl_seteq<1,1,1>(icmp_ln891_reg_893.read(), ap_const_lv1_0))))) {
        config_r_we0 = ap_const_logic_1;
    } else {
        config_r_we0 = ap_const_logic_0;
    }
}

void effect_delay::thread_currentPeriod_fu_690_p3() {
    currentPeriod_fu_690_p3 = (!icmp_ln97_fu_670_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln97_fu_670_p2.read()[0].to_bool())? add_ln97_fu_679_p2.read(): sub_ln97_fu_685_p2.read());
}

void effect_delay::thread_extMemPtr_V_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        extMemPtr_V_blk_n_AR = m_axi_extMemPtr_V_ARREADY.read();
    } else {
        extMemPtr_V_blk_n_AR = ap_const_logic_1;
    }
}

void effect_delay::thread_extMemPtr_V_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        extMemPtr_V_blk_n_AW = m_axi_extMemPtr_V_AWREADY.read();
    } else {
        extMemPtr_V_blk_n_AW = ap_const_logic_1;
    }
}

void effect_delay::thread_extMemPtr_V_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        extMemPtr_V_blk_n_B = m_axi_extMemPtr_V_BVALID.read();
    } else {
        extMemPtr_V_blk_n_B = ap_const_logic_1;
    }
}

void effect_delay::thread_extMemPtr_V_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        extMemPtr_V_blk_n_R = m_axi_extMemPtr_V_RVALID.read();
    } else {
        extMemPtr_V_blk_n_R = ap_const_logic_1;
    }
}

void effect_delay::thread_extMemPtr_V_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        extMemPtr_V_blk_n_W = m_axi_extMemPtr_V_WREADY.read();
    } else {
        extMemPtr_V_blk_n_W = ap_const_logic_1;
    }
}

void effect_delay::thread_grp_fu_286_p0() {
    grp_fu_286_p0 = auxRawL_V_reg_992.read();
}

void effect_delay::thread_grp_fu_290_p0() {
    grp_fu_290_p0 = auxRawR_V_reg_997.read();
}

void effect_delay::thread_grp_fu_294_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_block_state13_io.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_WREADY.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        grp_fu_294_ce = ap_const_logic_1;
    } else {
        grp_fu_294_ce = ap_const_logic_0;
    }
}

void effect_delay::thread_grp_fu_294_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_294_p0 = tmp_reg_949.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        grp_fu_294_p0 = volRatio_reg_868.read();
    } else {
        grp_fu_294_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_grp_fu_294_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_294_p1 = periodRatio_reg_873.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_294_p1 = inData_r.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_294_p1 = inData_l.read();
    } else {
        grp_fu_294_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_grp_fu_298_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        grp_fu_298_ce = ap_const_logic_1;
    } else {
        grp_fu_298_ce = ap_const_logic_0;
    }
}

void effect_delay::thread_grp_fu_301_p2() {
    grp_fu_301_p2 = (!config_r_q0.read().is_01() || !maxIndex_V_reg_878.read().is_01())? sc_lv<1>(): (sc_biguint<32>(config_r_q0.read()) < sc_biguint<32>(maxIndex_V_reg_878.read()));
}

void effect_delay::thread_icmp_ln879_fu_447_p2() {
    icmp_ln879_fu_447_p2 = (!val_assign_9_reg_826.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): sc_lv<1>(val_assign_9_reg_826.read() == ap_const_lv31_0);
}

void effect_delay::thread_icmp_ln887_1_fu_750_p2() {
    icmp_ln887_1_fu_750_p2 = (!zext_ln103_fu_704_p1.read().is_01() || !sext_ln1354_reg_926.read().is_01())? sc_lv<1>(): (sc_bigint<33>(zext_ln103_fu_704_p1.read()) < sc_bigint<33>(sext_ln1354_reg_926.read()));
}

void effect_delay::thread_icmp_ln887_fu_495_p2() {
    icmp_ln887_fu_495_p2 = (!zext_ln90_2_fu_460_p1.read().is_01() || !sext_ln1354_fu_492_p1.read().is_01())? sc_lv<1>(): (sc_bigint<33>(zext_ln90_2_fu_460_p1.read()) < sc_bigint<33>(sext_ln1354_fu_492_p1.read()));
}

void effect_delay::thread_icmp_ln97_fu_670_p2() {
    icmp_ln97_fu_670_p2 = (!select_ln92_reg_931.read().is_01() || !i_op_assign_3_reg_252.read().is_01())? sc_lv<1>(): (sc_biguint<32>(select_ln92_reg_931.read()) < sc_biguint<32>(i_op_assign_3_reg_252.read()));
}

void effect_delay::thread_icmp_ln98_fu_698_p2() {
    icmp_ln98_fu_698_p2 = (!currentPeriod_fu_690_p3.read().is_01() || !val_V_fu_663_p3.read().is_01())? sc_lv<1>(): (sc_biguint<32>(currentPeriod_fu_690_p3.read()) < sc_biguint<32>(val_V_fu_663_p3.read()));
}

void effect_delay::thread_isNeg_fu_581_p3() {
    isNeg_fu_581_p3 = add_ln339_fu_575_p2.read().range(8, 8);
}

void effect_delay::thread_m_axi_extMemPtr_V_ARADDR() {
    if (esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1)) {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
            m_axi_extMemPtr_V_ARADDR = extMemPtr_V_addr_3_reg_986.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            m_axi_extMemPtr_V_ARADDR = extMemPtr_V_addr_2_reg_980.read();
        } else {
            m_axi_extMemPtr_V_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        m_axi_extMemPtr_V_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_ARBURST() {
    m_axi_extMemPtr_V_ARBURST = ap_const_lv2_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARCACHE() {
    m_axi_extMemPtr_V_ARCACHE = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARID() {
    m_axi_extMemPtr_V_ARID = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARLEN() {
    m_axi_extMemPtr_V_ARLEN = ap_const_lv32_1;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARLOCK() {
    m_axi_extMemPtr_V_ARLOCK = ap_const_lv2_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARPROT() {
    m_axi_extMemPtr_V_ARPROT = ap_const_lv3_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARQOS() {
    m_axi_extMemPtr_V_ARQOS = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARREGION() {
    m_axi_extMemPtr_V_ARREGION = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARSIZE() {
    m_axi_extMemPtr_V_ARSIZE = ap_const_lv3_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARUSER() {
    m_axi_extMemPtr_V_ARUSER = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1)))) {
        m_axi_extMemPtr_V_ARVALID = ap_const_logic_1;
    } else {
        m_axi_extMemPtr_V_ARVALID = ap_const_logic_0;
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_AWADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_block_state13_io.read(), ap_const_boolean_0))) {
        m_axi_extMemPtr_V_AWADDR = extMemPtr_V_addr_1_reg_943.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1))) {
        m_axi_extMemPtr_V_AWADDR = extMemPtr_V_addr_reg_920.read();
    } else {
        m_axi_extMemPtr_V_AWADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_AWBURST() {
    m_axi_extMemPtr_V_AWBURST = ap_const_lv2_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWCACHE() {
    m_axi_extMemPtr_V_AWCACHE = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWID() {
    m_axi_extMemPtr_V_AWID = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWLEN() {
    m_axi_extMemPtr_V_AWLEN = ap_const_lv32_1;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWLOCK() {
    m_axi_extMemPtr_V_AWLOCK = ap_const_lv2_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWPROT() {
    m_axi_extMemPtr_V_AWPROT = ap_const_lv3_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWQOS() {
    m_axi_extMemPtr_V_AWQOS = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWREGION() {
    m_axi_extMemPtr_V_AWREGION = ap_const_lv4_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWSIZE() {
    m_axi_extMemPtr_V_AWSIZE = ap_const_lv3_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWUSER() {
    m_axi_extMemPtr_V_AWUSER = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_block_state13_io.read(), ap_const_boolean_0)))) {
        m_axi_extMemPtr_V_AWVALID = ap_const_logic_1;
    } else {
        m_axi_extMemPtr_V_AWVALID = ap_const_logic_0;
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1)))) {
        m_axi_extMemPtr_V_BREADY = ap_const_logic_1;
    } else {
        m_axi_extMemPtr_V_BREADY = ap_const_logic_0;
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1)))) {
        m_axi_extMemPtr_V_RREADY = ap_const_logic_1;
    } else {
        m_axi_extMemPtr_V_RREADY = ap_const_logic_0;
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_WDATA() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        m_axi_extMemPtr_V_WDATA = bitcast_ln705_1_fu_549_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        m_axi_extMemPtr_V_WDATA = bitcast_ln705_fu_544_p1.read();
    } else {
        m_axi_extMemPtr_V_WDATA =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_delay::thread_m_axi_extMemPtr_V_WID() {
    m_axi_extMemPtr_V_WID = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_WLAST() {
    m_axi_extMemPtr_V_WLAST = ap_const_logic_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_WSTRB() {
    m_axi_extMemPtr_V_WSTRB = ap_const_lv4_F;
}

void effect_delay::thread_m_axi_extMemPtr_V_WUSER() {
    m_axi_extMemPtr_V_WUSER = ap_const_lv1_0;
}

void effect_delay::thread_m_axi_extMemPtr_V_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_block_state13_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(m_axi_extMemPtr_V_WREADY.read(), ap_const_logic_1)))) {
        m_axi_extMemPtr_V_WVALID = ap_const_logic_1;
    } else {
        m_axi_extMemPtr_V_WVALID = ap_const_logic_0;
    }
}

void effect_delay::thread_mantissa_V_fu_606_p4() {
    mantissa_V_fu_606_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, tmp_V_1_reg_960.read()), ap_const_lv1_0);
}

void effect_delay::thread_maxIndex_V_fu_444_p1() {
    maxIndex_V_fu_444_p1 = esl_zext<32,31>(val_assign_9_reg_826.read());
}

void effect_delay::thread_or_ln71_fu_318_p2() {
    or_ln71_fu_318_p2 = (tmp_16_fu_310_p3.read() | ap_const_lv6_1);
}

void effect_delay::thread_or_ln72_fu_333_p2() {
    or_ln72_fu_333_p2 = (tmp_16_reg_790.read() | ap_const_lv6_2);
}

void effect_delay::thread_or_ln73_fu_347_p2() {
    or_ln73_fu_347_p2 = (tmp_16_reg_790.read() | ap_const_lv6_3);
}

void effect_delay::thread_or_ln74_fu_371_p2() {
    or_ln74_fu_371_p2 = (tmp_16_reg_790.read() | ap_const_lv6_4);
}

void effect_delay::thread_or_ln75_fu_389_p2() {
    or_ln75_fu_389_p2 = (tmp_16_reg_790.read() | ap_const_lv6_5);
}

void effect_delay::thread_or_ln76_fu_403_p2() {
    or_ln76_fu_403_p2 = (tmp_16_reg_790.read() | ap_const_lv6_6);
}

void effect_delay::thread_p_Result_18_fu_432_p3() {
    p_Result_18_fu_432_p3 = esl_concat<1,31>(ap_const_lv1_0, trunc_ln368_6_fu_428_p1.read());
}

void effect_delay::thread_p_Result_s_fu_417_p3() {
    p_Result_s_fu_417_p3 = esl_concat<1,31>(ap_const_lv1_0, trunc_ln368_reg_837.read());
}

void effect_delay::thread_p_Val2_11_fu_554_p1() {
    p_Val2_11_fu_554_p1 = grp_fu_294_p2.read();
}

void effect_delay::thread_periodRatio_fu_440_p1() {
    periodRatio_fu_440_p1 = p_Result_18_fu_432_p3.read();
}

void effect_delay::thread_r_V_1_fu_635_p2() {
    r_V_1_fu_635_p2 = (!zext_ln1287_fu_625_p1.read().is_01())? sc_lv<79>(): zext_ln682_fu_615_p1.read() << (unsigned short)zext_ln1287_fu_625_p1.read().to_uint();
}

void effect_delay::thread_r_V_fu_629_p2() {
    r_V_fu_629_p2 = (!sext_ln1311_2_fu_622_p1.read().is_01())? sc_lv<25>(): mantissa_V_fu_606_p4.read() >> (unsigned short)sext_ln1311_2_fu_622_p1.read().to_uint();
}

void effect_delay::thread_ret_V_fu_452_p2() {
    ret_V_fu_452_p2 = (!ap_const_lv32_FFFFFFFE.is_01() || !maxIndex_V_reg_878.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFE) + sc_biguint<32>(maxIndex_V_reg_878.read()));
}

void effect_delay::thread_select_ln107_fu_761_p3() {
    select_ln107_fu_761_p3 = (!icmp_ln887_1_fu_750_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln887_1_fu_750_p2.read()[0].to_bool())? add_ln107_fu_755_p2.read(): ap_const_lv32_0);
}

void effect_delay::thread_select_ln92_fu_507_p3() {
    select_ln92_fu_507_p3 = (!icmp_ln887_fu_495_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln887_fu_495_p2.read()[0].to_bool())? add_ln92_fu_501_p2.read(): ap_const_lv32_0);
}

void effect_delay::thread_sext_ln1311_1_fu_619_p1() {
    sext_ln1311_1_fu_619_p1 = esl_sext<32,9>(ush_reg_970.read());
}

void effect_delay::thread_sext_ln1311_2_fu_622_p1() {
    sext_ln1311_2_fu_622_p1 = esl_sext<25,9>(ush_reg_970.read());
}

void effect_delay::thread_sext_ln1311_fu_594_p1() {
    sext_ln1311_fu_594_p1 = esl_sext<9,8>(sub_ln1311_fu_589_p2.read());
}

void effect_delay::thread_sext_ln1354_fu_492_p1() {
    sext_ln1354_fu_492_p1 = esl_sext<33,32>(ret_V_reg_905.read());
}

void effect_delay::thread_shl_ln1_fu_708_p3() {
    shl_ln1_fu_708_p3 = esl_concat<32,1>(i_op_assign_3_reg_252.read(), ap_const_lv1_0);
}

void effect_delay::thread_shl_ln_fu_464_p3() {
    shl_ln_fu_464_p3 = esl_concat<32,1>(i_op_assign_2_reg_241.read(), ap_const_lv1_0);
}

void effect_delay::thread_sub_ln1311_fu_589_p2() {
    sub_ln1311_fu_589_p2 = (!ap_const_lv8_7F.is_01() || !tmp_V_reg_954.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_V_reg_954.read()));
}

void effect_delay::thread_sub_ln97_1_fu_675_p2() {
    sub_ln97_1_fu_675_p2 = (!select_ln92_reg_931.read().is_01() || !memSize_reg_820.read().is_01())? sc_lv<32>(): (sc_biguint<32>(select_ln92_reg_931.read()) - sc_biguint<32>(memSize_reg_820.read()));
}

void effect_delay::thread_sub_ln97_fu_685_p2() {
    sub_ln97_fu_685_p2 = (!select_ln92_reg_931.read().is_01() || !i_op_assign_3_reg_252.read().is_01())? sc_lv<32>(): (sc_biguint<32>(select_ln92_reg_931.read()) - sc_biguint<32>(i_op_assign_3_reg_252.read()));
}

void effect_delay::thread_tmp_10_fu_641_p3() {
    tmp_10_fu_641_p3 = r_V_fu_629_p2.read().range(24, 24);
}

void effect_delay::thread_tmp_16_fu_310_p3() {
    tmp_16_fu_310_p3 = esl_concat<3,3>(config_offset.read(), ap_const_lv3_0);
}

void effect_delay::thread_tmp_17_fu_324_p3() {
    tmp_17_fu_324_p3 = esl_concat<58,6>(ap_const_lv58_0, or_ln71_fu_318_p2.read());
}

void effect_delay::thread_tmp_18_fu_338_p3() {
    tmp_18_fu_338_p3 = esl_concat<58,6>(ap_const_lv58_0, or_ln72_fu_333_p2.read());
}

void effect_delay::thread_tmp_19_fu_352_p3() {
    tmp_19_fu_352_p3 = esl_concat<58,6>(ap_const_lv58_0, or_ln73_fu_347_p2.read());
}

void effect_delay::thread_tmp_20_fu_394_p3() {
    tmp_20_fu_394_p3 = esl_concat<58,6>(ap_const_lv58_0, or_ln75_fu_389_p2.read());
}

void effect_delay::thread_tmp_21_fu_408_p3() {
    tmp_21_fu_408_p3 = esl_concat<58,6>(ap_const_lv58_0, or_ln76_fu_403_p2.read());
}

void effect_delay::thread_tmp_22_fu_653_p4() {
    tmp_22_fu_653_p4 = r_V_1_fu_635_p2.read().range(55, 24);
}

void effect_delay::thread_tmp_V_1_fu_568_p1() {
    tmp_V_1_fu_568_p1 = p_Val2_11_fu_554_p1.read().range(23-1, 0);
}

void effect_delay::thread_tmp_s_fu_376_p3() {
    tmp_s_fu_376_p3 = esl_concat<58,6>(ap_const_lv58_0, or_ln74_fu_371_p2.read());
}

void effect_delay::thread_trunc_ln368_6_fu_428_p1() {
    trunc_ln368_6_fu_428_p1 = config_r_q0.read().range(31-1, 0);
}

void effect_delay::thread_trunc_ln368_fu_385_p1() {
    trunc_ln368_fu_385_p1 = config_r_q0.read().range(31-1, 0);
}

void effect_delay::thread_ush_fu_598_p3() {
    ush_fu_598_p3 = (!isNeg_fu_581_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_581_p3.read()[0].to_bool())? sext_ln1311_fu_594_p1.read(): add_ln339_fu_575_p2.read());
}

void effect_delay::thread_val_V_fu_663_p3() {
    val_V_fu_663_p3 = (!isNeg_reg_965.read()[0].is_01())? sc_lv<32>(): ((isNeg_reg_965.read()[0].to_bool())? zext_ln662_fu_649_p1.read(): tmp_22_fu_653_p4.read());
}

void effect_delay::thread_volRatio_fu_424_p1() {
    volRatio_fu_424_p1 = p_Result_s_fu_417_p3.read();
}

void effect_delay::thread_zext_ln103_1_fu_716_p1() {
    zext_ln103_1_fu_716_p1 = esl_zext<34,33>(shl_ln1_fu_708_p3.read());
}

void effect_delay::thread_zext_ln103_2_fu_725_p1() {
    zext_ln103_2_fu_725_p1 = esl_zext<64,34>(add_ln103_fu_720_p2.read());
}

void effect_delay::thread_zext_ln103_fu_704_p1() {
    zext_ln103_fu_704_p1 = esl_zext<33,32>(i_op_assign_3_reg_252.read());
}

void effect_delay::thread_zext_ln104_fu_740_p1() {
    zext_ln104_fu_740_p1 = esl_zext<64,34>(add_ln104_fu_735_p2.read());
}

void effect_delay::thread_zext_ln1287_fu_625_p1() {
    zext_ln1287_fu_625_p1 = esl_zext<79,32>(sext_ln1311_1_fu_619_p1.read());
}

void effect_delay::thread_zext_ln339_fu_572_p1() {
    zext_ln339_fu_572_p1 = esl_zext<9,8>(tmp_V_reg_954.read());
}

void effect_delay::thread_zext_ln662_fu_649_p1() {
    zext_ln662_fu_649_p1 = esl_zext<32,1>(tmp_10_fu_641_p3.read());
}

void effect_delay::thread_zext_ln682_fu_615_p1() {
    zext_ln682_fu_615_p1 = esl_zext<79,25>(mantissa_V_fu_606_p4.read());
}

void effect_delay::thread_zext_ln90_1_fu_457_p1() {
    zext_ln90_1_fu_457_p1 = esl_zext<34,32>(memAddr_reg_809.read());
}

void effect_delay::thread_zext_ln90_2_fu_460_p1() {
    zext_ln90_2_fu_460_p1 = esl_zext<33,32>(i_op_assign_2_reg_241.read());
}

void effect_delay::thread_zext_ln90_3_fu_472_p1() {
    zext_ln90_3_fu_472_p1 = esl_zext<34,33>(shl_ln_fu_464_p3.read());
}

void effect_delay::thread_zext_ln90_4_fu_482_p1() {
    zext_ln90_4_fu_482_p1 = esl_zext<64,34>(add_ln90_fu_476_p2.read());
}

void effect_delay::thread_zext_ln90_fu_516_p1() {
    zext_ln90_fu_516_p1 = esl_zext<33,32>(memAddr_reg_809.read());
}

void effect_delay::thread_zext_ln91_1_fu_534_p1() {
    zext_ln91_1_fu_534_p1 = esl_zext<64,34>(add_ln91_1_fu_529_p2.read());
}

void effect_delay::thread_zext_ln91_fu_525_p1() {
    zext_ln91_fu_525_p1 = esl_zext<34,33>(add_ln91_fu_519_p2.read());
}

void effect_delay::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln879_fu_447_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_block_state13_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln98_reg_976.read()))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_BVALID.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln98_reg_976.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(m_axi_extMemPtr_V_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<36>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

