// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "effect_iir.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic effect_iir::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic effect_iir::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<38> effect_iir::ap_ST_fsm_state1 = "1";
const sc_lv<38> effect_iir::ap_ST_fsm_state2 = "10";
const sc_lv<38> effect_iir::ap_ST_fsm_state3 = "100";
const sc_lv<38> effect_iir::ap_ST_fsm_state4 = "1000";
const sc_lv<38> effect_iir::ap_ST_fsm_state5 = "10000";
const sc_lv<38> effect_iir::ap_ST_fsm_state6 = "100000";
const sc_lv<38> effect_iir::ap_ST_fsm_state7 = "1000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state8 = "10000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state9 = "100000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state10 = "1000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state11 = "10000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state12 = "100000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<38> effect_iir::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<32> effect_iir::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> effect_iir::ap_const_lv32_1 = "1";
const sc_lv<32> effect_iir::ap_const_lv32_4 = "100";
const sc_lv<32> effect_iir::ap_const_lv32_2 = "10";
const sc_lv<32> effect_iir::ap_const_lv32_9 = "1001";
const sc_lv<32> effect_iir::ap_const_lv32_B = "1011";
const sc_lv<32> effect_iir::ap_const_lv32_C = "1100";
const sc_lv<32> effect_iir::ap_const_lv32_7 = "111";
const sc_lv<32> effect_iir::ap_const_lv32_E = "1110";
const sc_lv<32> effect_iir::ap_const_lv32_15 = "10101";
const sc_lv<32> effect_iir::ap_const_lv32_8 = "1000";
const sc_lv<32> effect_iir::ap_const_lv32_F = "1111";
const sc_lv<32> effect_iir::ap_const_lv32_A = "1010";
const sc_lv<32> effect_iir::ap_const_lv32_D = "1101";
const sc_lv<32> effect_iir::ap_const_lv32_1C = "11100";
const sc_lv<32> effect_iir::ap_const_lv32_23 = "100011";
const sc_lv<32> effect_iir::ap_const_lv32_16 = "10110";
const sc_lv<32> effect_iir::ap_const_lv32_1D = "11101";
const sc_lv<32> effect_iir::ap_const_lv32_24 = "100100";
const sc_lv<32> effect_iir::ap_const_lv32_3 = "11";
const sc_lv<32> effect_iir::ap_const_lv32_5 = "101";
const sc_lv<32> effect_iir::ap_const_lv32_10 = "10000";
const sc_lv<32> effect_iir::ap_const_lv32_11 = "10001";
const sc_lv<32> effect_iir::ap_const_lv32_12 = "10010";
const sc_lv<32> effect_iir::ap_const_lv32_13 = "10011";
const sc_lv<32> effect_iir::ap_const_lv32_14 = "10100";
const sc_lv<32> effect_iir::ap_const_lv32_25 = "100101";
const sc_lv<32> effect_iir::ap_const_lv32_17 = "10111";
const sc_lv<32> effect_iir::ap_const_lv32_1E = "11110";
const sc_lv<4> effect_iir::ap_const_lv4_0 = "0000";
const sc_lv<9> effect_iir::ap_const_lv9_5 = "101";
const sc_lv<55> effect_iir::ap_const_lv55_0 = "0000000000000000000000000000000000000000000000000000000";
const sc_lv<9> effect_iir::ap_const_lv9_6 = "110";
const sc_lv<9> effect_iir::ap_const_lv9_C = "1100";
const sc_lv<9> effect_iir::ap_const_lv9_D = "1101";
const sc_lv<9> effect_iir::ap_const_lv9_7 = "111";
const sc_lv<9> effect_iir::ap_const_lv9_E = "1110";
const sc_lv<9> effect_iir::ap_const_lv9_F = "1111";
const sc_lv<9> effect_iir::ap_const_lv9_3 = "11";
const sc_lv<9> effect_iir::ap_const_lv9_8 = "1000";
const sc_lv<9> effect_iir::ap_const_lv9_9 = "1001";
const sc_lv<9> effect_iir::ap_const_lv9_4 = "100";
const sc_lv<9> effect_iir::ap_const_lv9_A = "1010";
const sc_lv<9> effect_iir::ap_const_lv9_B = "1011";
const bool effect_iir::ap_const_boolean_1 = true;

effect_iir::effect_iir(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pynq_dsp_hls_faddbkb_U1 = new pynq_dsp_hls_faddbkb<1,7,32,32,32>("pynq_dsp_hls_faddbkb_U1");
    pynq_dsp_hls_faddbkb_U1->clk(ap_clk);
    pynq_dsp_hls_faddbkb_U1->reset(ap_rst);
    pynq_dsp_hls_faddbkb_U1->din0(grp_fu_184_p0);
    pynq_dsp_hls_faddbkb_U1->din1(grp_fu_184_p1);
    pynq_dsp_hls_faddbkb_U1->ce(ap_var_for_const0);
    pynq_dsp_hls_faddbkb_U1->dout(grp_fu_184_p2);
    pynq_dsp_hls_fmulcud_U2 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U2");
    pynq_dsp_hls_fmulcud_U2->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U2->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U2->din0(grp_fu_188_p0);
    pynq_dsp_hls_fmulcud_U2->din1(grp_fu_188_p1);
    pynq_dsp_hls_fmulcud_U2->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U2->dout(grp_fu_188_p2);
    pynq_dsp_hls_fmulcud_U3 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U3");
    pynq_dsp_hls_fmulcud_U3->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U3->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U3->din0(grp_fu_193_p0);
    pynq_dsp_hls_fmulcud_U3->din1(grp_fu_193_p1);
    pynq_dsp_hls_fmulcud_U3->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U3->dout(grp_fu_193_p2);
    pynq_dsp_hls_fmulcud_U4 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U4");
    pynq_dsp_hls_fmulcud_U4->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U4->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U4->din0(grp_fu_198_p0);
    pynq_dsp_hls_fmulcud_U4->din1(grp_fu_198_p1);
    pynq_dsp_hls_fmulcud_U4->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U4->dout(grp_fu_198_p2);
    pynq_dsp_hls_fmulcud_U5 = new pynq_dsp_hls_fmulcud<1,4,32,32,32>("pynq_dsp_hls_fmulcud_U5");
    pynq_dsp_hls_fmulcud_U5->clk(ap_clk);
    pynq_dsp_hls_fmulcud_U5->reset(ap_rst);
    pynq_dsp_hls_fmulcud_U5->din0(grp_fu_202_p0);
    pynq_dsp_hls_fmulcud_U5->din1(grp_fu_202_p1);
    pynq_dsp_hls_fmulcud_U5->ce(ap_var_for_const0);
    pynq_dsp_hls_fmulcud_U5->dout(grp_fu_202_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a1_fu_472_p1);
    sensitive << ( reg_211 );

    SC_METHOD(thread_a2_fu_478_p1);
    sensitive << ( config_load_1_reg_674 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( reg_237 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( reg_242 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_az1L_fu_483_p1);
    sensitive << ( reg_232 );

    SC_METHOD(thread_az2L_fu_492_p1);
    sensitive << ( config_load_7_reg_679 );

    SC_METHOD(thread_b0_fu_312_p1);
    sensitive << ( reg_206 );

    SC_METHOD(thread_b1_fu_317_p1);
    sensitive << ( reg_211 );

    SC_METHOD(thread_b2_fu_387_p1);
    sensitive << ( reg_211 );

    SC_METHOD(thread_bitcast_ln705_1_fu_513_p1);
    sensitive << ( reg_242 );

    SC_METHOD(thread_bitcast_ln705_2_fu_500_p1);
    sensitive << ( inData_l );

    SC_METHOD(thread_bitcast_ln705_3_fu_504_p1);
    sensitive << ( inData_r );

    SC_METHOD(thread_bitcast_ln705_fu_508_p1);
    sensitive << ( reg_237 );

    SC_METHOD(thread_bz1L_fu_322_p1);
    sensitive << ( config_load_9_reg_566 );

    SC_METHOD(thread_bz1R_fu_326_p1);
    sensitive << ( reg_206 );

    SC_METHOD(thread_bz2L_fu_392_p1);
    sensitive << ( reg_232 );

    SC_METHOD(thread_bz2R_fu_411_p1);
    sensitive << ( reg_211 );

    SC_METHOD(thread_config_r_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( config_addr_9_reg_556 );
    sensitive << ( config_addr_10_reg_561 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( config_addr_11_reg_614 );
    sensitive << ( config_addr_12_reg_619 );
    sensitive << ( config_addr_5_reg_639 );
    sensitive << ( config_addr_6_reg_649 );
    sensitive << ( config_addr_7_reg_664 );
    sensitive << ( config_addr_8_reg_669 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_18_fu_261_p3 );
    sensitive << ( tmp_19_fu_275_p3 );
    sensitive << ( tmp_25_fu_289_p3 );
    sensitive << ( tmp_26_fu_303_p3 );
    sensitive << ( tmp_20_fu_336_p3 );
    sensitive << ( tmp_27_fu_350_p3 );
    sensitive << ( tmp_28_fu_364_p3 );
    sensitive << ( tmp_16_fu_378_p3 );
    sensitive << ( tmp_21_fu_402_p3 );
    sensitive << ( tmp_22_fu_421_p3 );
    sensitive << ( tmp_17_fu_435_p3 );
    sensitive << ( tmp_23_fu_449_p3 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_config_r_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_config_r_d0);
    sensitive << ( reg_206 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( reg_232 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( config_load_9_reg_566 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( bitcast_ln705_2_fu_500_p1 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( bitcast_ln705_3_fu_504_p1 );
    sensitive << ( bitcast_ln705_fu_508_p1 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( bitcast_ln705_1_fu_513_p1 );

    SC_METHOD(thread_config_r_we0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_184_p0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( reg_215 );
    sensitive << ( reg_226 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( reg_237 );
    sensitive << ( reg_242 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_grp_fu_184_p1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( reg_215 );
    sensitive << ( reg_221 );
    sensitive << ( reg_226 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_2_reg_609 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_12_reg_721 );
    sensitive << ( tmp_14_reg_726 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_grp_fu_188_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( b0_fu_312_p1 );
    sensitive << ( b0_reg_578 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( bz2L_fu_392_p1 );
    sensitive << ( bz2R_fu_411_p1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( az1L_fu_483_p1 );

    SC_METHOD(thread_grp_fu_188_p1);
    sensitive << ( inData_l );
    sensitive << ( inData_r );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( b2_fu_387_p1 );
    sensitive << ( b2_reg_629 );
    sensitive << ( a1_fu_472_p1 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_193_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( bz1L_fu_322_p1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( bz1R_fu_326_p1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( az2L_fu_492_p1 );

    SC_METHOD(thread_grp_fu_193_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( b1_fu_317_p1 );
    sensitive << ( b1_reg_583 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( a2_fu_478_p1 );

    SC_METHOD(thread_grp_fu_198_p0);
    sensitive << ( config_load_6_reg_659 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_198_p1);
    sensitive << ( reg_211 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_202_p0);
    sensitive << ( config_load_8_reg_684 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_grp_fu_202_p1);
    sensitive << ( config_load_1_reg_674 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_or_ln110_fu_373_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_or_ln111_fu_430_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_or_ln112_fu_255_p2);
    sensitive << ( tmp_15_fu_247_p3 );

    SC_METHOD(thread_or_ln113_fu_270_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_or_ln114_fu_331_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_or_ln117_fu_397_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_or_ln118_fu_416_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_or_ln119_fu_444_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_or_ln120_fu_458_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_or_ln121_fu_284_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_or_ln122_fu_298_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_or_ln123_fu_345_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_or_ln124_fu_359_p2);
    sensitive << ( tmp_15_reg_530 );

    SC_METHOD(thread_tmp_15_fu_247_p3);
    sensitive << ( config_offset );

    SC_METHOD(thread_tmp_16_fu_378_p3);
    sensitive << ( or_ln110_fu_373_p2 );

    SC_METHOD(thread_tmp_17_fu_435_p3);
    sensitive << ( or_ln111_fu_430_p2 );

    SC_METHOD(thread_tmp_18_fu_261_p3);
    sensitive << ( or_ln112_fu_255_p2 );

    SC_METHOD(thread_tmp_19_fu_275_p3);
    sensitive << ( or_ln113_fu_270_p2 );

    SC_METHOD(thread_tmp_20_fu_336_p3);
    sensitive << ( or_ln114_fu_331_p2 );

    SC_METHOD(thread_tmp_21_fu_402_p3);
    sensitive << ( or_ln117_fu_397_p2 );

    SC_METHOD(thread_tmp_22_fu_421_p3);
    sensitive << ( or_ln118_fu_416_p2 );

    SC_METHOD(thread_tmp_23_fu_449_p3);
    sensitive << ( or_ln119_fu_444_p2 );

    SC_METHOD(thread_tmp_24_fu_463_p3);
    sensitive << ( or_ln120_fu_458_p2 );

    SC_METHOD(thread_tmp_25_fu_289_p3);
    sensitive << ( or_ln121_fu_284_p2 );

    SC_METHOD(thread_tmp_26_fu_303_p3);
    sensitive << ( or_ln122_fu_298_p2 );

    SC_METHOD(thread_tmp_27_fu_350_p3);
    sensitive << ( or_ln123_fu_345_p2 );

    SC_METHOD(thread_tmp_28_fu_364_p3);
    sensitive << ( or_ln124_fu_359_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "effect_iir_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, inData_l, "(port)inData_l");
    sc_trace(mVcdFile, inData_r, "(port)inData_r");
    sc_trace(mVcdFile, config_r_address0, "(port)config_r_address0");
    sc_trace(mVcdFile, config_r_ce0, "(port)config_r_ce0");
    sc_trace(mVcdFile, config_r_we0, "(port)config_r_we0");
    sc_trace(mVcdFile, config_r_d0, "(port)config_r_d0");
    sc_trace(mVcdFile, config_r_q0, "(port)config_r_q0");
    sc_trace(mVcdFile, config_offset, "(port)config_offset");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_206, "reg_206");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, reg_211, "reg_211");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_188_p2, "grp_fu_188_p2");
    sc_trace(mVcdFile, reg_215, "reg_215");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_193_p2, "grp_fu_193_p2");
    sc_trace(mVcdFile, reg_221, "reg_221");
    sc_trace(mVcdFile, reg_226, "reg_226");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, reg_232, "reg_232");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_fu_184_p2, "grp_fu_184_p2");
    sc_trace(mVcdFile, reg_237, "reg_237");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, reg_242, "reg_242");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, tmp_15_fu_247_p3, "tmp_15_fu_247_p3");
    sc_trace(mVcdFile, tmp_15_reg_530, "tmp_15_reg_530");
    sc_trace(mVcdFile, config_addr_9_reg_556, "config_addr_9_reg_556");
    sc_trace(mVcdFile, config_addr_10_reg_561, "config_addr_10_reg_561");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, config_load_9_reg_566, "config_load_9_reg_566");
    sc_trace(mVcdFile, b0_fu_312_p1, "b0_fu_312_p1");
    sc_trace(mVcdFile, b0_reg_578, "b0_reg_578");
    sc_trace(mVcdFile, b1_fu_317_p1, "b1_fu_317_p1");
    sc_trace(mVcdFile, b1_reg_583, "b1_reg_583");
    sc_trace(mVcdFile, bz1L_fu_322_p1, "bz1L_fu_322_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, bz1R_fu_326_p1, "bz1R_fu_326_p1");
    sc_trace(mVcdFile, tmp_2_reg_609, "tmp_2_reg_609");
    sc_trace(mVcdFile, config_addr_11_reg_614, "config_addr_11_reg_614");
    sc_trace(mVcdFile, config_addr_12_reg_619, "config_addr_12_reg_619");
    sc_trace(mVcdFile, b2_fu_387_p1, "b2_fu_387_p1");
    sc_trace(mVcdFile, b2_reg_629, "b2_reg_629");
    sc_trace(mVcdFile, bz2L_fu_392_p1, "bz2L_fu_392_p1");
    sc_trace(mVcdFile, config_addr_5_reg_639, "config_addr_5_reg_639");
    sc_trace(mVcdFile, bz2R_fu_411_p1, "bz2R_fu_411_p1");
    sc_trace(mVcdFile, config_addr_6_reg_649, "config_addr_6_reg_649");
    sc_trace(mVcdFile, config_load_6_reg_659, "config_load_6_reg_659");
    sc_trace(mVcdFile, config_addr_7_reg_664, "config_addr_7_reg_664");
    sc_trace(mVcdFile, config_addr_8_reg_669, "config_addr_8_reg_669");
    sc_trace(mVcdFile, config_load_1_reg_674, "config_load_1_reg_674");
    sc_trace(mVcdFile, config_load_7_reg_679, "config_load_7_reg_679");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, config_load_8_reg_684, "config_load_8_reg_684");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, a1_fu_472_p1, "a1_fu_472_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, a2_fu_478_p1, "a2_fu_478_p1");
    sc_trace(mVcdFile, az1L_fu_483_p1, "az1L_fu_483_p1");
    sc_trace(mVcdFile, az2L_fu_492_p1, "az2L_fu_492_p1");
    sc_trace(mVcdFile, grp_fu_198_p2, "grp_fu_198_p2");
    sc_trace(mVcdFile, tmp_12_reg_721, "tmp_12_reg_721");
    sc_trace(mVcdFile, grp_fu_202_p2, "grp_fu_202_p2");
    sc_trace(mVcdFile, tmp_14_reg_726, "tmp_14_reg_726");
    sc_trace(mVcdFile, tmp_18_fu_261_p3, "tmp_18_fu_261_p3");
    sc_trace(mVcdFile, tmp_19_fu_275_p3, "tmp_19_fu_275_p3");
    sc_trace(mVcdFile, tmp_25_fu_289_p3, "tmp_25_fu_289_p3");
    sc_trace(mVcdFile, tmp_26_fu_303_p3, "tmp_26_fu_303_p3");
    sc_trace(mVcdFile, tmp_20_fu_336_p3, "tmp_20_fu_336_p3");
    sc_trace(mVcdFile, tmp_27_fu_350_p3, "tmp_27_fu_350_p3");
    sc_trace(mVcdFile, tmp_28_fu_364_p3, "tmp_28_fu_364_p3");
    sc_trace(mVcdFile, tmp_16_fu_378_p3, "tmp_16_fu_378_p3");
    sc_trace(mVcdFile, tmp_21_fu_402_p3, "tmp_21_fu_402_p3");
    sc_trace(mVcdFile, tmp_22_fu_421_p3, "tmp_22_fu_421_p3");
    sc_trace(mVcdFile, tmp_17_fu_435_p3, "tmp_17_fu_435_p3");
    sc_trace(mVcdFile, tmp_23_fu_449_p3, "tmp_23_fu_449_p3");
    sc_trace(mVcdFile, tmp_24_fu_463_p3, "tmp_24_fu_463_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, bitcast_ln705_2_fu_500_p1, "bitcast_ln705_2_fu_500_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, bitcast_ln705_3_fu_504_p1, "bitcast_ln705_3_fu_504_p1");
    sc_trace(mVcdFile, bitcast_ln705_fu_508_p1, "bitcast_ln705_fu_508_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, bitcast_ln705_1_fu_513_p1, "bitcast_ln705_1_fu_513_p1");
    sc_trace(mVcdFile, grp_fu_184_p0, "grp_fu_184_p0");
    sc_trace(mVcdFile, grp_fu_184_p1, "grp_fu_184_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, grp_fu_188_p0, "grp_fu_188_p0");
    sc_trace(mVcdFile, grp_fu_188_p1, "grp_fu_188_p1");
    sc_trace(mVcdFile, grp_fu_193_p0, "grp_fu_193_p0");
    sc_trace(mVcdFile, grp_fu_193_p1, "grp_fu_193_p1");
    sc_trace(mVcdFile, grp_fu_198_p0, "grp_fu_198_p0");
    sc_trace(mVcdFile, grp_fu_198_p1, "grp_fu_198_p1");
    sc_trace(mVcdFile, grp_fu_202_p0, "grp_fu_202_p0");
    sc_trace(mVcdFile, grp_fu_202_p1, "grp_fu_202_p1");
    sc_trace(mVcdFile, or_ln112_fu_255_p2, "or_ln112_fu_255_p2");
    sc_trace(mVcdFile, or_ln113_fu_270_p2, "or_ln113_fu_270_p2");
    sc_trace(mVcdFile, or_ln121_fu_284_p2, "or_ln121_fu_284_p2");
    sc_trace(mVcdFile, or_ln122_fu_298_p2, "or_ln122_fu_298_p2");
    sc_trace(mVcdFile, or_ln114_fu_331_p2, "or_ln114_fu_331_p2");
    sc_trace(mVcdFile, or_ln123_fu_345_p2, "or_ln123_fu_345_p2");
    sc_trace(mVcdFile, or_ln124_fu_359_p2, "or_ln124_fu_359_p2");
    sc_trace(mVcdFile, or_ln110_fu_373_p2, "or_ln110_fu_373_p2");
    sc_trace(mVcdFile, or_ln117_fu_397_p2, "or_ln117_fu_397_p2");
    sc_trace(mVcdFile, or_ln118_fu_416_p2, "or_ln118_fu_416_p2");
    sc_trace(mVcdFile, or_ln111_fu_430_p2, "or_ln111_fu_430_p2");
    sc_trace(mVcdFile, or_ln119_fu_444_p2, "or_ln119_fu_444_p2");
    sc_trace(mVcdFile, or_ln120_fu_458_p2, "or_ln120_fu_458_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

effect_iir::~effect_iir() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete pynq_dsp_hls_faddbkb_U1;
    delete pynq_dsp_hls_fmulcud_U2;
    delete pynq_dsp_hls_fmulcud_U3;
    delete pynq_dsp_hls_fmulcud_U4;
    delete pynq_dsp_hls_fmulcud_U5;
}

void effect_iir::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void effect_iir::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        b0_reg_578 = b0_fu_312_p1.read();
        b1_reg_583 = b1_fu_317_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        b2_reg_629 = b2_fu_387_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        config_addr_10_reg_561 =  (sc_lv<8>) (tmp_26_fu_303_p3.read());
        config_load_9_reg_566 = config_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        config_addr_11_reg_614 =  (sc_lv<8>) (tmp_27_fu_350_p3.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        config_addr_12_reg_619 =  (sc_lv<8>) (tmp_28_fu_364_p3.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        config_addr_5_reg_639 =  (sc_lv<8>) (tmp_21_fu_402_p3.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        config_addr_6_reg_649 =  (sc_lv<8>) (tmp_22_fu_421_p3.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        config_addr_7_reg_664 =  (sc_lv<8>) (tmp_23_fu_449_p3.read());
        config_addr_8_reg_669 =  (sc_lv<8>) (tmp_24_fu_463_p3.read());
        config_load_1_reg_674 = config_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        config_addr_9_reg_556 =  (sc_lv<8>) (tmp_25_fu_289_p3.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        config_load_6_reg_659 = config_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        config_load_7_reg_679 = config_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        config_load_8_reg_684 = config_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        reg_206 = config_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        reg_211 = config_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        reg_215 = grp_fu_188_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        reg_221 = grp_fu_193_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        reg_226 = grp_fu_188_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        reg_232 = config_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        reg_237 = grp_fu_184_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
        reg_242 = grp_fu_184_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_12_reg_721 = grp_fu_198_p2.read();
        tmp_14_reg_726 = grp_fu_202_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_15_reg_530 = tmp_15_fu_247_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_2_reg_609 = grp_fu_193_p2.read();
    }
}

void effect_iir::thread_a1_fu_472_p1() {
    a1_fu_472_p1 = reg_211.read();
}

void effect_iir::thread_a2_fu_478_p1() {
    a2_fu_478_p1 = config_load_1_reg_674.read();
}

void effect_iir::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void effect_iir::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void effect_iir::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void effect_iir::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void effect_iir::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void effect_iir::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void effect_iir::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void effect_iir::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void effect_iir::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void effect_iir::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void effect_iir::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void effect_iir::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void effect_iir::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void effect_iir::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void effect_iir::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void effect_iir::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void effect_iir::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void effect_iir::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void effect_iir::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void effect_iir::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void effect_iir::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void effect_iir::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void effect_iir::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void effect_iir::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void effect_iir::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void effect_iir::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void effect_iir::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void effect_iir::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void effect_iir::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void effect_iir::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void effect_iir::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void effect_iir::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void effect_iir::thread_ap_return_0() {
    ap_return_0 = reg_237.read();
}

void effect_iir::thread_ap_return_1() {
    ap_return_1 = reg_242.read();
}

void effect_iir::thread_az1L_fu_483_p1() {
    az1L_fu_483_p1 = reg_232.read();
}

void effect_iir::thread_az2L_fu_492_p1() {
    az2L_fu_492_p1 = config_load_7_reg_679.read();
}

void effect_iir::thread_b0_fu_312_p1() {
    b0_fu_312_p1 = reg_206.read();
}

void effect_iir::thread_b1_fu_317_p1() {
    b1_fu_317_p1 = reg_211.read();
}

void effect_iir::thread_b2_fu_387_p1() {
    b2_fu_387_p1 = reg_211.read();
}

void effect_iir::thread_bitcast_ln705_1_fu_513_p1() {
    bitcast_ln705_1_fu_513_p1 = reg_242.read();
}

void effect_iir::thread_bitcast_ln705_2_fu_500_p1() {
    bitcast_ln705_2_fu_500_p1 = inData_l.read();
}

void effect_iir::thread_bitcast_ln705_3_fu_504_p1() {
    bitcast_ln705_3_fu_504_p1 = inData_r.read();
}

void effect_iir::thread_bitcast_ln705_fu_508_p1() {
    bitcast_ln705_fu_508_p1 = reg_237.read();
}

void effect_iir::thread_bz1L_fu_322_p1() {
    bz1L_fu_322_p1 = config_load_9_reg_566.read();
}

void effect_iir::thread_bz1R_fu_326_p1() {
    bz1R_fu_326_p1 = reg_206.read();
}

void effect_iir::thread_bz2L_fu_392_p1() {
    bz2L_fu_392_p1 = reg_232.read();
}

void effect_iir::thread_bz2R_fu_411_p1() {
    bz2R_fu_411_p1 = reg_211.read();
}

void effect_iir::thread_config_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        config_r_address0 = config_addr_6_reg_649.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        config_r_address0 = config_addr_5_reg_639.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        config_r_address0 = config_addr_12_reg_619.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        config_r_address0 = config_addr_11_reg_614.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        config_r_address0 = config_addr_10_reg_561.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        config_r_address0 = config_addr_9_reg_556.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        config_r_address0 = config_addr_7_reg_664.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        config_r_address0 = config_addr_8_reg_669.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_23_fu_449_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_17_fu_435_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_22_fu_421_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_21_fu_402_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_16_fu_378_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_28_fu_364_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_27_fu_350_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_20_fu_336_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_26_fu_303_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_25_fu_289_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_19_fu_275_p3.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        config_r_address0 =  (sc_lv<8>) (tmp_18_fu_261_p3.read());
    } else {
        config_r_address0 = "XXXXXXXX";
    }
}

void effect_iir::thread_config_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        config_r_ce0 = ap_const_logic_1;
    } else {
        config_r_ce0 = ap_const_logic_0;
    }
}

void effect_iir::thread_config_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        config_r_d0 = bitcast_ln705_1_fu_513_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        config_r_d0 = bitcast_ln705_fu_508_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        config_r_d0 = reg_206.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        config_r_d0 = config_load_9_reg_566.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        config_r_d0 = bitcast_ln705_3_fu_504_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        config_r_d0 = bitcast_ln705_2_fu_500_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        config_r_d0 = reg_232.read();
    } else {
        config_r_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_iir::thread_config_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        config_r_we0 = ap_const_logic_1;
    } else {
        config_r_we0 = ap_const_logic_0;
    }
}

void effect_iir::thread_grp_fu_184_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        grp_fu_184_p0 = reg_242.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        grp_fu_184_p0 = reg_237.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_184_p0 = reg_226.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_184_p0 = reg_215.read();
    } else {
        grp_fu_184_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_iir::thread_grp_fu_184_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        grp_fu_184_p1 = tmp_14_reg_726.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_184_p1 = tmp_12_reg_721.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_184_p1 = reg_226.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        grp_fu_184_p1 = reg_215.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_184_p1 = tmp_2_reg_609.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        grp_fu_184_p1 = reg_221.read();
    } else {
        grp_fu_184_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_iir::thread_grp_fu_188_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_188_p0 = az1L_fu_483_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_188_p0 = bz2R_fu_411_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_188_p0 = bz2L_fu_392_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_188_p0 = b0_reg_578.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_188_p0 = b0_fu_312_p1.read();
    } else {
        grp_fu_188_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_iir::thread_grp_fu_188_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_188_p1 = a1_fu_472_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_188_p1 = b2_reg_629.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_188_p1 = b2_fu_387_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_188_p1 = inData_r.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_188_p1 = inData_l.read();
    } else {
        grp_fu_188_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_iir::thread_grp_fu_193_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_193_p0 = az2L_fu_492_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_193_p0 = bz1R_fu_326_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_193_p0 = bz1L_fu_322_p1.read();
    } else {
        grp_fu_193_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_iir::thread_grp_fu_193_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_193_p1 = a2_fu_478_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_193_p1 = b1_reg_583.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_193_p1 = b1_fu_317_p1.read();
    } else {
        grp_fu_193_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void effect_iir::thread_grp_fu_198_p0() {
    grp_fu_198_p0 = config_load_6_reg_659.read();
}

void effect_iir::thread_grp_fu_198_p1() {
    grp_fu_198_p1 = reg_211.read();
}

void effect_iir::thread_grp_fu_202_p0() {
    grp_fu_202_p0 = config_load_8_reg_684.read();
}

void effect_iir::thread_grp_fu_202_p1() {
    grp_fu_202_p1 = config_load_1_reg_674.read();
}

void effect_iir::thread_or_ln110_fu_373_p2() {
    or_ln110_fu_373_p2 = (tmp_15_reg_530.read() | ap_const_lv9_3);
}

void effect_iir::thread_or_ln111_fu_430_p2() {
    or_ln111_fu_430_p2 = (tmp_15_reg_530.read() | ap_const_lv9_4);
}

void effect_iir::thread_or_ln112_fu_255_p2() {
    or_ln112_fu_255_p2 = (tmp_15_fu_247_p3.read() | ap_const_lv9_5);
}

void effect_iir::thread_or_ln113_fu_270_p2() {
    or_ln113_fu_270_p2 = (tmp_15_reg_530.read() | ap_const_lv9_6);
}

void effect_iir::thread_or_ln114_fu_331_p2() {
    or_ln114_fu_331_p2 = (tmp_15_reg_530.read() | ap_const_lv9_7);
}

void effect_iir::thread_or_ln117_fu_397_p2() {
    or_ln117_fu_397_p2 = (tmp_15_reg_530.read() | ap_const_lv9_8);
}

void effect_iir::thread_or_ln118_fu_416_p2() {
    or_ln118_fu_416_p2 = (tmp_15_reg_530.read() | ap_const_lv9_9);
}

void effect_iir::thread_or_ln119_fu_444_p2() {
    or_ln119_fu_444_p2 = (tmp_15_reg_530.read() | ap_const_lv9_A);
}

void effect_iir::thread_or_ln120_fu_458_p2() {
    or_ln120_fu_458_p2 = (tmp_15_reg_530.read() | ap_const_lv9_B);
}

void effect_iir::thread_or_ln121_fu_284_p2() {
    or_ln121_fu_284_p2 = (tmp_15_reg_530.read() | ap_const_lv9_C);
}

void effect_iir::thread_or_ln122_fu_298_p2() {
    or_ln122_fu_298_p2 = (tmp_15_reg_530.read() | ap_const_lv9_D);
}

void effect_iir::thread_or_ln123_fu_345_p2() {
    or_ln123_fu_345_p2 = (tmp_15_reg_530.read() | ap_const_lv9_E);
}

void effect_iir::thread_or_ln124_fu_359_p2() {
    or_ln124_fu_359_p2 = (tmp_15_reg_530.read() | ap_const_lv9_F);
}

void effect_iir::thread_tmp_15_fu_247_p3() {
    tmp_15_fu_247_p3 = esl_concat<5,4>(config_offset.read(), ap_const_lv4_0);
}

void effect_iir::thread_tmp_16_fu_378_p3() {
    tmp_16_fu_378_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln110_fu_373_p2.read());
}

void effect_iir::thread_tmp_17_fu_435_p3() {
    tmp_17_fu_435_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln111_fu_430_p2.read());
}

void effect_iir::thread_tmp_18_fu_261_p3() {
    tmp_18_fu_261_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln112_fu_255_p2.read());
}

void effect_iir::thread_tmp_19_fu_275_p3() {
    tmp_19_fu_275_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln113_fu_270_p2.read());
}

void effect_iir::thread_tmp_20_fu_336_p3() {
    tmp_20_fu_336_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln114_fu_331_p2.read());
}

void effect_iir::thread_tmp_21_fu_402_p3() {
    tmp_21_fu_402_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln117_fu_397_p2.read());
}

void effect_iir::thread_tmp_22_fu_421_p3() {
    tmp_22_fu_421_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln118_fu_416_p2.read());
}

void effect_iir::thread_tmp_23_fu_449_p3() {
    tmp_23_fu_449_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln119_fu_444_p2.read());
}

void effect_iir::thread_tmp_24_fu_463_p3() {
    tmp_24_fu_463_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln120_fu_458_p2.read());
}

void effect_iir::thread_tmp_25_fu_289_p3() {
    tmp_25_fu_289_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln121_fu_284_p2.read());
}

void effect_iir::thread_tmp_26_fu_303_p3() {
    tmp_26_fu_303_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln122_fu_298_p2.read());
}

void effect_iir::thread_tmp_27_fu_350_p3() {
    tmp_27_fu_350_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln123_fu_345_p2.read());
}

void effect_iir::thread_tmp_28_fu_364_p3() {
    tmp_28_fu_364_p3 = esl_concat<55,9>(ap_const_lv55_0, or_ln124_fu_359_p2.read());
}

void effect_iir::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<38>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

